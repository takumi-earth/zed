diff --git a/.cargo/ci-config.toml b/.cargo/ci-config.toml
index d5e312c242..09e1af5c18 100644
--- a/.cargo/ci-config.toml
+++ b/.cargo/ci-config.toml
@@ -10,15 +10,3 @@
 # Here, we opted to use `[target.'cfg(all())']` instead of `[build]` because `[target.'**']` is guaranteed to be cumulative.
 [target.'cfg(all())']
 rustflags = ["-D", "warnings"]
-
-# Use Mold on Linux, because it's faster than GNU ld and LLD.
-#
-# We no longer set this in the default `config.toml` so that developers can opt in to Wild, which
-# is faster than Mold, in their own ~/.cargo/config.toml.
-[target.x86_64-unknown-linux-gnu]
-linker = "clang"
-rustflags = ["-C", "link-arg=-fuse-ld=mold"]
-
-[target.aarch64-unknown-linux-gnu]
-linker = "clang"
-rustflags = ["-C", "link-arg=-fuse-ld=mold"]
diff --git a/.cargo/config.toml b/.cargo/config.toml
index 9b2e6f51c9..a882cd67bf 100644
--- a/.cargo/config.toml
+++ b/.cargo/config.toml
@@ -5,8 +5,15 @@ rustflags = ["-C", "symbol-mangling-version=v0", "--cfg", "tokio_unstable"]
 [alias]
 xtask = "run --package xtask --"
 perf-test = ["test", "--profile", "release-fast", "--lib", "--bins", "--tests", "--all-features", "--config", "target.'cfg(true)'.runner='cargo run -p perf --release'", "--config", "target.'cfg(true)'.rustflags=[\"--cfg\", \"perf_enabled\"]"]
-# Keep similar flags here to share some ccache
-perf-compare = ["run", "--profile", "release-fast", "-p", "perf", "--config", "target.'cfg(true)'.rustflags=[\"--cfg\", \"perf_enabled\"]", "--", "compare"]
+perf-compare = ["run", "--release", "-p", "perf", "--", "compare"]
+
+[target.x86_64-unknown-linux-gnu]
+linker = "clang"
+rustflags = ["-C", "link-arg=-fuse-ld=mold"]
+
+[target.aarch64-unknown-linux-gnu]
+linker = "clang"
+rustflags = ["-C", "link-arg=-fuse-ld=mold"]
 
 [target.'cfg(target_os = "windows")']
 rustflags = [
diff --git a/.config/hakari.toml b/.config/hakari.toml
index 9cc9c1e4ee..b1e2954743 100644
--- a/.config/hakari.toml
+++ b/.config/hakari.toml
@@ -26,7 +26,7 @@ third-party = [
     # build of remote_server should not include scap / its x11 dependency
     { name = "scap", git = "https://github.com/zed-industries/scap", rev = "808aa5c45b41e8f44729d02e38fd00a2fe2722e7" },
     # build of remote_server should not need to include on libalsa through rodio
-    { name = "rodio", git = "https://github.com/RustAudio/rodio" },
+    { name = "rodio", git = "https://github.com/RustAudio/rodio", branch = "better_wav_output"},
 ]
 
 [final-excludes]
diff --git a/Cargo.lock b/Cargo.lock
index d33f1d0290..a2f0aafef7 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -195,9 +195,9 @@ dependencies = [
 
 [[package]]
 name = "agent-client-protocol"
-version = "0.4.3"
+version = "0.4.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3aaa2bd05a2401887945f8bfd70026e90bc3cf96c62ab9eba2779835bf21dc60"
+checksum = "00e33b9f4bd34d342b6f80b7156d3a37a04aeec16313f264001e52d6a9118600"
 dependencies = [
  "anyhow",
  "async-broadcast",
@@ -486,6 +486,7 @@ dependencies = [
  "client",
  "cloud_llm_client",
  "component",
+ "feature_flags",
  "gpui",
  "language_model",
  "serde",
@@ -780,24 +781,6 @@ dependencies = [
  "zbus",
 ]
 
-[[package]]
-name = "ashpd"
-version = "0.12.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "da0986d5b4f0802160191ad75f8d33ada000558757db3defb70299ca95d9fcbd"
-dependencies = [
- "async-fs",
- "async-net",
- "enumflags2",
- "futures-channel",
- "futures-util",
- "rand 0.9.1",
- "serde",
- "serde_repr",
- "url",
- "zbus",
-]
-
 [[package]]
 name = "askpass"
 version = "0.1.0"
@@ -1350,6 +1333,22 @@ dependencies = [
  "tungstenite 0.26.2",
 ]
 
+[[package]]
+name = "async-tungstenite"
+version = "0.31.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "ee88b4c88ac8c9ea446ad43498955750a4bbe64c4392f21ccfe5d952865e318f"
+dependencies = [
+ "atomic-waker",
+ "futures-core",
+ "futures-io",
+ "futures-task",
+ "log",
+ "pin-project-lite",
+ "tokio",
+ "tungstenite 0.27.0",
+]
+
 [[package]]
 name = "async_zip"
 version = "0.0.17"
@@ -1405,7 +1404,6 @@ dependencies = [
  "async-tar",
  "collections",
  "crossbeam",
- "denoise",
  "gpui",
  "libwebrtc",
  "log",
@@ -2325,7 +2323,7 @@ dependencies = [
  "log",
  "mint",
  "naga",
- "objc2",
+ "objc2 0.6.1",
  "objc2-app-kit",
  "objc2-core-foundation",
  "objc2-foundation",
@@ -2383,13 +2381,32 @@ dependencies = [
  "generic-array",
 ]
 
+[[package]]
+name = "block-sys"
+version = "0.2.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "ae85a0696e7ea3b835a453750bf002770776609115e6d25c6d2ff28a8200f7e7"
+dependencies = [
+ "objc-sys",
+]
+
+[[package]]
+name = "block2"
+version = "0.4.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "e58aa60e59d8dbfcc36138f5f18be5f24394d33b38b24f7fd0b1caa33095f22f"
+dependencies = [
+ "block-sys",
+ "objc2 0.5.2",
+]
+
 [[package]]
 name = "block2"
 version = "0.6.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "340d2f0bdb2a43c1d3cd40513185b2bd7def0aa1052f956455114bc98f82dcf2"
 dependencies = [
- "objc2",
+ "objc2 0.6.1",
 ]
 
 [[package]]
@@ -2728,7 +2745,7 @@ dependencies = [
  "cap-primitives",
  "cap-std",
  "io-lifetimes",
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
 ]
 
 [[package]]
@@ -2757,7 +2774,7 @@ dependencies = [
  "maybe-owned",
  "rustix 1.0.7",
  "rustix-linux-procfs",
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
  "winx",
 ]
 
@@ -3103,7 +3120,7 @@ name = "client"
 version = "0.1.0"
 dependencies = [
  "anyhow",
- "async-tungstenite",
+ "async-tungstenite 0.29.1",
  "base64 0.22.1",
  "chrono",
  "clock",
@@ -3325,7 +3342,7 @@ dependencies = [
  "assistant_context",
  "assistant_slash_command",
  "async-trait",
- "async-tungstenite",
+ "async-tungstenite 0.29.1",
  "audio",
  "aws-config",
  "aws-sdk-kinesis",
@@ -4938,7 +4955,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "89a09f22a6c6069a18470eb92d2298acf25463f14256d24778e1230d789a2aec"
 dependencies = [
  "bitflags 2.9.0",
- "objc2",
+ "objc2 0.6.1",
 ]
 
 [[package]]
@@ -5487,7 +5504,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "976dd42dc7e85965fe702eb8164f21f450704bdde31faefd6471dba214cb594e"
 dependencies = [
  "libc",
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
 ]
 
 [[package]]
@@ -5854,7 +5871,7 @@ checksum = "0ce92ff622d6dadf7349484f42c93271a0d49b7cc4d466a936405bacbe10aa78"
 dependencies = [
  "cfg-if",
  "rustix 1.0.7",
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
 ]
 
 [[package]]
@@ -6205,7 +6222,7 @@ name = "fs"
 version = "0.1.0"
 dependencies = [
  "anyhow",
- "ashpd 0.11.0",
+ "ashpd",
  "async-tar",
  "async-trait",
  "cocoa 0.26.0",
@@ -6242,7 +6259,7 @@ checksum = "94e7099f6313ecacbe1256e8ff9d617b75d1bcb16a6fddef94866d225a01a14a"
 dependencies = [
  "io-lifetimes",
  "rustix 1.0.7",
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
 ]
 
 [[package]]
@@ -7036,7 +7053,7 @@ version = "0.1.0"
 dependencies = [
  "anyhow",
  "as-raw-xcb-connection",
- "ashpd 0.11.0",
+ "ashpd",
  "async-task",
  "backtrace",
  "bindgen 0.71.1",
@@ -7068,18 +7085,20 @@ dependencies = [
  "futures 0.3.31",
  "gpui_macros",
  "http_client",
+ "icrate",
  "image",
  "inventory",
  "itertools 0.14.0",
  "libc",
  "log",
  "lyon",
+ "macos_appkit_bridge",
  "media",
  "metal",
  "naga",
  "num_cpus",
  "objc",
- "objc2",
+ "objc2 0.6.1",
  "objc2-metal",
  "oo7",
  "open",
@@ -7087,7 +7106,6 @@ dependencies = [
  "parking_lot",
  "pathfinder_geometry",
  "postage",
- "pretty_assertions",
  "profiling",
  "rand 0.9.1",
  "raw-window-handle",
@@ -7751,6 +7769,16 @@ dependencies = [
  "workspace-hack",
 ]
 
+[[package]]
+name = "icrate"
+version = "0.1.2"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "3fb69199826926eb864697bddd27f73d9fddcffc004f5733131e15b465e30642"
+dependencies = [
+ "block2 0.4.0",
+ "objc2 0.5.2",
+]
+
 [[package]]
 name = "icu_collections"
 version = "1.5.0"
@@ -8145,7 +8173,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "2285ddfe3054097ef4b2fe909ef8c3bcd1ea52a8f0d274416caebeef39f04a65"
 dependencies = [
  "io-lifetimes",
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
 ]
 
 [[package]]
@@ -8218,7 +8246,7 @@ checksum = "e04d7f318608d35d4b61ddd75cbdaee86b023ebe2bd5a66ee0915f0bf93095a9"
 dependencies = [
  "hermit-abi 0.5.0",
  "libc",
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
 ]
 
 [[package]]
@@ -8452,7 +8480,7 @@ source = "git+https://github.com/ConradIrwin/runtimed?rev=7130c804216b6914355d15
 dependencies = [
  "anyhow",
  "async-trait",
- "async-tungstenite",
+ "async-tungstenite 0.29.1",
  "futures 0.3.31",
  "jupyter-protocol",
  "serde",
@@ -8682,6 +8710,7 @@ dependencies = [
  "credentials_provider",
  "deepseek",
  "editor",
+ "feature_flags",
  "fs",
  "futures 0.3.31",
  "google_ai",
@@ -8706,6 +8735,7 @@ dependencies = [
  "settings",
  "smol",
  "strum 0.27.1",
+ "theme",
  "thiserror 2.0.12",
  "tiktoken-rs",
  "tokio",
@@ -9400,6 +9430,10 @@ dependencies = [
  "libc",
 ]
 
+[[package]]
+name = "macos_appkit_bridge"
+version = "0.1.0"
+
 [[package]]
 name = "malloc_buf"
 version = "0.0.6"
@@ -10414,6 +10448,22 @@ dependencies = [
  "objc_id",
 ]
 
+[[package]]
+name = "objc-sys"
+version = "0.3.5"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "cdb91bdd390c7ce1a8607f35f3ca7151b65afc0ff5ff3b34fa350f7d7c7e4310"
+
+[[package]]
+name = "objc2"
+version = "0.5.2"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "46a785d4eeff09c14c487497c162e92766fbb3e4059a71840cecc03d9a50b804"
+dependencies = [
+ "objc-sys",
+ "objc2-encode",
+]
+
 [[package]]
 name = "objc2"
 version = "0.6.1"
@@ -10430,7 +10480,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "e6f29f568bec459b0ddff777cec4fe3fd8666d82d5a40ebd0ff7e66134f89bcc"
 dependencies = [
  "bitflags 2.9.0",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-foundation",
  "objc2-foundation",
  "objc2-quartz-core",
@@ -10444,7 +10494,7 @@ checksum = "10cbe18d879e20a4aea544f8befe38bcf52255eb63d3f23eca2842f3319e4c07"
 dependencies = [
  "bitflags 2.9.0",
  "libc",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-audio",
  "objc2-core-audio-types",
  "objc2-core-foundation",
@@ -10458,7 +10508,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "ca44961e888e19313b808f23497073e3f6b3c22bb485056674c8b49f3b025c82"
 dependencies = [
  "dispatch2",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-audio-types",
  "objc2-core-foundation",
 ]
@@ -10470,7 +10520,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "c0f1cc99bb07ad2ddb6527ddf83db6a15271bb036b3eb94b801cd44fdc666ee1"
 dependencies = [
  "bitflags 2.9.0",
- "objc2",
+ "objc2 0.6.1",
 ]
 
 [[package]]
@@ -10481,7 +10531,7 @@ checksum = "1c10c2894a6fed806ade6027bcd50662746363a9589d3ec9d9bef30a4e4bc166"
 dependencies = [
  "bitflags 2.9.0",
  "dispatch2",
- "objc2",
+ "objc2 0.6.1",
 ]
 
 [[package]]
@@ -10497,7 +10547,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "900831247d2fe1a09a683278e5384cfb8c80c79fe6b166f9d14bfdde0ea1b03c"
 dependencies = [
  "bitflags 2.9.0",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-foundation",
 ]
 
@@ -10508,9 +10558,9 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "7f246c183239540aab1782457b35ab2040d4259175bd1d0c58e46ada7b47a874"
 dependencies = [
  "bitflags 2.9.0",
- "block2",
+ "block2 0.6.1",
  "dispatch2",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-foundation",
  "objc2-foundation",
 ]
@@ -10522,7 +10572,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "90ffb6a0cd5f182dc964334388560b12a57f7b74b3e2dec5e2722aa2dfb2ccd5"
 dependencies = [
  "bitflags 2.9.0",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-foundation",
  "objc2-foundation",
  "objc2-metal",
@@ -10535,7 +10585,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "25b1312ad7bc8a0e92adae17aa10f90aae1fb618832f9b993b022b591027daed"
 dependencies = [
  "bitflags 2.9.0",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-foundation",
  "objc2-foundation",
  "objc2-quartz-core",
@@ -10629,12 +10679,12 @@ checksum = "42f5e15c9953c5e4ccceeb2e7382a716482c34515315f7b03532b8b4e8393d2d"
 
 [[package]]
 name = "oo7"
-version = "0.5.0"
+version = "0.4.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e3299dd401feaf1d45afd8fd1c0586f10fcfb22f244bb9afa942cec73503b89d"
+checksum = "6cb23d3ec3527d65a83be1c1795cb883c52cfa57147d42acc797127df56fc489"
 dependencies = [
  "aes",
- "ashpd 0.12.0",
+ "ashpd",
  "async-fs",
  "async-io",
  "async-lock",
@@ -12559,7 +12609,7 @@ dependencies = [
  "once_cell",
  "socket2",
  "tracing",
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
 ]
 
 [[package]]
@@ -13091,7 +13141,8 @@ dependencies = [
  "alacritty_terminal",
  "anyhow",
  "async-dispatcher",
- "async-tungstenite",
+ "async-tungstenite 0.29.1",
+ "async-tungstenite 0.31.0",
  "base64 0.22.1",
  "client",
  "collections",
@@ -13399,7 +13450,7 @@ dependencies = [
 [[package]]
 name = "rodio"
 version = "0.21.1"
-source = "git+https://github.com/RustAudio/rodio#e2074c6c2acf07b57cf717e076bdda7a9ac6e70b"
+source = "git+https://github.com/RustAudio/rodio?branch=better_wav_output#82514bd1f2c6cfd9a1a885019b26a8ffea75bc5c"
 dependencies = [
  "cpal",
  "dasp_sample",
@@ -13440,7 +13491,7 @@ name = "rpc"
 version = "0.1.0"
 dependencies = [
  "anyhow",
- "async-tungstenite",
+ "async-tungstenite 0.29.1",
  "base64 0.22.1",
  "chrono",
  "collections",
@@ -13641,7 +13692,7 @@ dependencies = [
  "errno 0.3.11",
  "libc",
  "linux-raw-sys 0.4.15",
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
 ]
 
 [[package]]
@@ -13654,7 +13705,7 @@ dependencies = [
  "errno 0.3.11",
  "libc",
  "linux-raw-sys 0.9.4",
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
 ]
 
 [[package]]
@@ -13776,7 +13827,7 @@ dependencies = [
  "security-framework 3.2.0",
  "security-framework-sys",
  "webpki-root-certs",
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
 ]
 
 [[package]]
@@ -14461,7 +14512,6 @@ dependencies = [
  "serde_with",
  "settings_macros",
  "smallvec",
- "strum 0.27.1",
  "tree-sitter",
  "tree-sitter-json",
  "unindent",
@@ -14522,7 +14572,6 @@ dependencies = [
  "serde",
  "session",
  "settings",
- "strum 0.27.1",
  "theme",
  "ui",
  "util",
@@ -15160,7 +15209,7 @@ dependencies = [
  "cfg-if",
  "libc",
  "psm",
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
 ]
 
 [[package]]
@@ -15853,7 +15902,7 @@ dependencies = [
  "fd-lock",
  "io-lifetimes",
  "rustix 0.38.44",
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
  "winx",
 ]
 
@@ -16035,7 +16084,7 @@ dependencies = [
  "getrandom 0.3.2",
  "once_cell",
  "rustix 1.0.7",
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
 ]
 
 [[package]]
@@ -16069,7 +16118,6 @@ dependencies = [
  "gpui",
  "itertools 0.14.0",
  "libc",
- "log",
  "rand 0.9.1",
  "regex",
  "release_channel",
@@ -17193,6 +17241,23 @@ dependencies = [
  "utf-8",
 ]
 
+[[package]]
+name = "tungstenite"
+version = "0.27.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "eadc29d668c91fcc564941132e17b28a7ceb2f3ebf0b9dae3e03fd7a6748eb0d"
+dependencies = [
+ "bytes 1.10.1",
+ "data-encoding",
+ "http 1.3.1",
+ "httparse",
+ "log",
+ "rand 0.9.1",
+ "sha1",
+ "thiserror 2.0.12",
+ "utf-8",
+]
+
 [[package]]
 name = "typed-path"
 version = "0.11.0"
@@ -17527,7 +17592,6 @@ dependencies = [
  "libc",
  "log",
  "nix 0.29.0",
- "pretty_assertions",
  "rand 0.9.1",
  "regex",
  "rust-embed",
@@ -18619,7 +18683,7 @@ version = "0.1.9"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb"
 dependencies = [
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
 ]
 
 [[package]]
@@ -19331,7 +19395,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "3f3fd376f71958b862e7afb20cfe5a22830e1963462f3a17f49d82a6c1d1f42d"
 dependencies = [
  "bitflags 2.9.0",
- "windows-sys 0.52.0",
+ "windows-sys 0.59.0",
 ]
 
 [[package]]
@@ -19634,7 +19698,7 @@ dependencies = [
  "arrayvec",
  "async-compression",
  "async-std",
- "async-tungstenite",
+ "async-tungstenite 0.29.1",
  "aws-config",
  "aws-credential-types",
  "aws-runtime",
@@ -19723,6 +19787,7 @@ dependencies = [
  "nix 0.29.0",
  "nix 0.30.1",
  "nom 7.1.3",
+ "num",
  "num-bigint",
  "num-bigint-dig",
  "num-complex",
@@ -19730,7 +19795,7 @@ dependencies = [
  "num-iter",
  "num-rational",
  "num-traits",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-foundation",
  "objc2-foundation",
  "objc2-metal",
@@ -20187,7 +20252,7 @@ dependencies = [
  "agent_settings",
  "agent_ui",
  "anyhow",
- "ashpd 0.11.0",
+ "ashpd",
  "askpass",
  "assets",
  "assistant_tools",
@@ -20613,7 +20678,6 @@ dependencies = [
  "arrayvec",
  "chrono",
  "client",
- "clock",
  "cloud_llm_client",
  "cloud_zeta2_prompt",
  "edit_prediction",
@@ -20624,12 +20688,9 @@ dependencies = [
  "language",
  "language_model",
  "log",
- "lsp",
- "pretty_assertions",
  "project",
  "release_channel",
  "serde_json",
- "settings",
  "thiserror 2.0.12",
  "util",
  "uuid",
@@ -20645,7 +20706,6 @@ dependencies = [
  "chrono",
  "clap",
  "client",
- "cloud_llm_client",
  "collections",
  "edit_prediction_context",
  "editor",
diff --git a/Cargo.toml b/Cargo.toml
index 3ad8bd2348..7f3818afed 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -376,7 +376,7 @@ remote_server = { path = "crates/remote_server" }
 repl = { path = "crates/repl" }
 reqwest_client = { path = "crates/reqwest_client" }
 rich_text = { path = "crates/rich_text" }
-rodio = { git = "https://github.com/RustAudio/rodio" }
+rodio = { git = "https://github.com/RustAudio/rodio", branch = "better_wav_output"}
 rope = { path = "crates/rope" }
 rpc = { path = "crates/rpc" }
 rules_library = { path = "crates/rules_library" }
@@ -440,7 +440,7 @@ zlog_settings = { path = "crates/zlog_settings" }
 # External crates
 #
 
-agent-client-protocol = { version = "0.4.3", features = ["unstable"] }
+agent-client-protocol = { version = "0.4.2", features = ["unstable"] }
 aho-corasick = "1.1"
 alacritty_terminal = "0.25.1-rc1"
 any_vec = "0.14"
@@ -615,7 +615,7 @@ rsa = "0.9.6"
 runtimelib = {  git = "https://github.com/ConradIrwin/runtimed", rev = "7130c804216b6914355d15d0b91ea91f6babd734", default-features = false, features = [
     "async-dispatcher-runtime",
 ] }
-rust-embed = { version = "8.4", features = ["include-exclude"] }
+rust-embed = { version = "8.7", features = ["include-exclude", "debug-embed"] }
 rustc-demangle = "0.1.23"
 rustc-hash = "2.1.0"
 rustls = { version = "0.23.26" }
diff --git a/assets/keymaps/default-windows.json b/assets/keymaps/default-windows.json
index fe9efe0f72..65de7a522b 100644
--- a/assets/keymaps/default-windows.json
+++ b/assets/keymaps/default-windows.json
@@ -607,6 +607,8 @@
       "shift-alt--": ["workspace::DecreaseActiveDockSize", { "px": 0 }],
       "shift-alt-=": ["workspace::IncreaseActiveDockSize", { "px": 0 }],
       "shift-alt-0": "workspace::ResetOpenDocksSize",
+      "ctrl-shift-alt--": ["workspace::DecreaseOpenDocksSize", { "px": 0 }],
+      "ctrl-shift-alt-=": ["workspace::IncreaseOpenDocksSize", { "px": 0 }],
       "ctrl-shift-f": "pane::DeploySearch",
       "ctrl-shift-h": ["pane::DeploySearch", { "replace_enabled": true }],
       "ctrl-shift-t": "pane::ReopenClosedItem",
@@ -1110,7 +1112,6 @@
       "alt-f": ["terminal::SendText", "\u001bf"],
       "alt-.": ["terminal::SendText", "\u001b."],
       "ctrl-delete": ["terminal::SendText", "\u001bd"],
-      "ctrl-n": "workspace::NewTerminal",
       // Overrides for conflicting keybindings
       "ctrl-b": ["terminal::SendKeystroke", "ctrl-b"],
       "ctrl-c": ["terminal::SendKeystroke", "ctrl-c"],
diff --git a/assets/settings/default.json b/assets/settings/default.json
index 298bce8245..514dcd4fb3 100644
--- a/assets/settings/default.json
+++ b/assets/settings/default.json
@@ -115,7 +115,6 @@
   // Whether to enable vim modes and key bindings.
   "vim_mode": false,
   // Whether to enable helix mode and key bindings.
-  // Enabling this mode will automatically enable vim mode.
   "helix_mode": false,
   // Whether to show the informational hover box when moving the mouse
   // over symbols in the editor.
@@ -412,33 +411,15 @@
     "experimental.rodio_audio": false,
     // Requires 'rodio_audio: true'
     //
-    // Automatically increase or decrease you microphone's volume. This affects how
-    // loud you sound to others.
-    //
-    // Recommended: off (default)
-    // Microphones are too quite in zed, until everyone is on experimental
-    // audio and has auto speaker volume on this will make you very loud
-    // compared to other speakers.
-    "experimental.auto_microphone_volume": false,
-    // Requires 'rodio_audio: true'
-    //
-    // Automatically increate or decrease the volume of other call members.
-    // This only affects how things sound for you.
-    "experimental.auto_speaker_volume": true,
+    // Use the new audio systems automatic gain control for your microphone.
+    // This affects how loud you sound to others.
+    "experimental.control_input_volume": false,
     // Requires 'rodio_audio: true'
     //
-    // Remove background noises. Works great for typing, cars, dogs, AC. Does
-    // not work well on music.
-    "experimental.denoise": true,
-    // Requires 'rodio_audio: true'
-    //
-    // Use audio parameters compatible with the previous versions of
-    // experimental audio and non-experimental audio. When this is false you
-    // will sound strange to anyone not on the latest experimental audio. In
-    // the future we will migrate by setting this to false
-    //
-    // You need to rejoin a call for this setting to apply
-    "experimental.legacy_audio_compatible": true
+    // Use the new audio systems automatic gain control on everyone in the
+    // call. This makes call members who are too quite louder and those who are
+    // too loud quieter. This only affects how things sound for you.
+    "experimental.control_output_volume": false
   },
   // Scrollbar related settings
   "scrollbar": {
@@ -1451,7 +1432,7 @@
       //
       // The shell running in the terminal needs to be configured to emit the title.
       // Example: `echo -e "\e]2;New Title\007";`
-      "breadcrumbs": false
+      "breadcrumbs": true
     },
     // Scrollbar-related settings
     "scrollbar": {
diff --git a/crates/acp_thread/src/acp_thread.rs b/crates/acp_thread/src/acp_thread.rs
index 185eed3cd7..b63e9a2a84 100644
--- a/crates/acp_thread/src/acp_thread.rs
+++ b/crates/acp_thread/src/acp_thread.rs
@@ -1780,26 +1780,20 @@ impl AcpThread {
         limit: Option<u32>,
         reuse_shared_snapshot: bool,
         cx: &mut Context<Self>,
-    ) -> Task<Result<String, acp::Error>> {
+    ) -> Task<Result<String>> {
         // Args are 1-based, move to 0-based
         let line = line.unwrap_or_default().saturating_sub(1);
         let limit = limit.unwrap_or(u32::MAX);
         let project = self.project.clone();
         let action_log = self.action_log.clone();
         cx.spawn(async move |this, cx| {
-            let load = project
-                .update(cx, |project, cx| {
-                    let path = project
-                        .project_path_for_absolute_path(&path, cx)
-                        .ok_or_else(|| {
-                            acp::Error::resource_not_found(Some(path.display().to_string()))
-                        })?;
-                    Ok(project.open_buffer(path, cx))
-                })
-                .map_err(|e| acp::Error::internal_error().with_data(e.to_string()))
-                .flatten()?;
-
-            let buffer = load.await?;
+            let load = project.update(cx, |project, cx| {
+                let path = project
+                    .project_path_for_absolute_path(&path, cx)
+                    .context("invalid path")?;
+                anyhow::Ok(project.open_buffer(path, cx))
+            });
+            let buffer = load??.await?;
 
             let snapshot = if reuse_shared_snapshot {
                 this.read_with(cx, |this, _| {
@@ -1826,17 +1820,15 @@ impl AcpThread {
             };
 
             let max_point = snapshot.max_point();
-            let start_position = Point::new(line, 0);
-
-            if start_position > max_point {
-                return Err(acp::Error::invalid_params().with_data(format!(
+            if line >= max_point.row {
+                anyhow::bail!(
                     "Attempting to read beyond the end of the file, line {}:{}",
                     max_point.row + 1,
                     max_point.column
-                )));
+                );
             }
 
-            let start = snapshot.anchor_before(start_position);
+            let start = snapshot.anchor_before(Point::new(line, 0));
             let end = snapshot.anchor_before(Point::new(line.saturating_add(limit), 0));
 
             project.update(cx, |project, cx| {
@@ -2457,81 +2449,6 @@ mod tests {
 
         assert_eq!(content, "two\nthree\n");
 
-        // Invalid
-        let err = thread
-            .update(cx, |thread, cx| {
-                thread.read_text_file(path!("/tmp/foo").into(), Some(6), Some(2), false, cx)
-            })
-            .await
-            .unwrap_err();
-
-        assert_eq!(
-            err.to_string(),
-            "Invalid params: \"Attempting to read beyond the end of the file, line 5:0\""
-        );
-    }
-
-    #[gpui::test]
-    async fn test_reading_empty_file(cx: &mut TestAppContext) {
-        init_test(cx);
-
-        let fs = FakeFs::new(cx.executor());
-        fs.insert_tree(path!("/tmp"), json!({"foo": ""})).await;
-        let project = Project::test(fs.clone(), [], cx).await;
-        project
-            .update(cx, |project, cx| {
-                project.find_or_create_worktree(path!("/tmp/foo"), true, cx)
-            })
-            .await
-            .unwrap();
-
-        let connection = Rc::new(FakeAgentConnection::new());
-
-        let thread = cx
-            .update(|cx| connection.new_thread(project, Path::new(path!("/tmp")), cx))
-            .await
-            .unwrap();
-
-        // Whole file
-        let content = thread
-            .update(cx, |thread, cx| {
-                thread.read_text_file(path!("/tmp/foo").into(), None, None, false, cx)
-            })
-            .await
-            .unwrap();
-
-        assert_eq!(content, "");
-
-        // Only start line
-        let content = thread
-            .update(cx, |thread, cx| {
-                thread.read_text_file(path!("/tmp/foo").into(), Some(1), None, false, cx)
-            })
-            .await
-            .unwrap();
-
-        assert_eq!(content, "");
-
-        // Only limit
-        let content = thread
-            .update(cx, |thread, cx| {
-                thread.read_text_file(path!("/tmp/foo").into(), None, Some(2), false, cx)
-            })
-            .await
-            .unwrap();
-
-        assert_eq!(content, "");
-
-        // Range
-        let content = thread
-            .update(cx, |thread, cx| {
-                thread.read_text_file(path!("/tmp/foo").into(), Some(1), Some(1), false, cx)
-            })
-            .await
-            .unwrap();
-
-        assert_eq!(content, "");
-
         // Invalid
         let err = thread
             .update(cx, |thread, cx| {
@@ -2542,40 +2459,9 @@ mod tests {
 
         assert_eq!(
             err.to_string(),
-            "Invalid params: \"Attempting to read beyond the end of the file, line 1:0\""
+            "Attempting to read beyond the end of the file, line 5:0"
         );
     }
-    #[gpui::test]
-    async fn test_reading_non_existing_file(cx: &mut TestAppContext) {
-        init_test(cx);
-
-        let fs = FakeFs::new(cx.executor());
-        fs.insert_tree(path!("/tmp"), json!({})).await;
-        let project = Project::test(fs.clone(), [], cx).await;
-        project
-            .update(cx, |project, cx| {
-                project.find_or_create_worktree(path!("/tmp"), true, cx)
-            })
-            .await
-            .unwrap();
-
-        let connection = Rc::new(FakeAgentConnection::new());
-
-        let thread = cx
-            .update(|cx| connection.new_thread(project, Path::new(path!("/tmp")), cx))
-            .await
-            .unwrap();
-
-        // Out of project file
-        let err = thread
-            .update(cx, |thread, cx| {
-                thread.read_text_file(path!("/foo").into(), None, None, false, cx)
-            })
-            .await
-            .unwrap_err();
-
-        assert_eq!(err.code, acp::ErrorCode::RESOURCE_NOT_FOUND.code);
-    }
 
     #[gpui::test]
     async fn test_succeeding_canceled_toolcall(cx: &mut TestAppContext) {
diff --git a/crates/acp_thread/src/mention.rs b/crates/acp_thread/src/mention.rs
index bbd13da5fa..122cd9a5ca 100644
--- a/crates/acp_thread/src/mention.rs
+++ b/crates/acp_thread/src/mention.rs
@@ -126,39 +126,6 @@ impl MentionUri {
                         abs_path: None,
                         line_range,
                     })
-                } else if let Some(name) = path.strip_prefix("/agent/symbol/") {
-                    let fragment = url
-                        .fragment()
-                        .context("Missing fragment for untitled buffer selection")?;
-                    let line_range = parse_line_range(fragment)?;
-                    let path =
-                        single_query_param(&url, "path")?.context("Missing path for symbol")?;
-                    Ok(Self::Symbol {
-                        name: name.to_string(),
-                        abs_path: path.into(),
-                        line_range,
-                    })
-                } else if path.starts_with("/agent/file") {
-                    let path =
-                        single_query_param(&url, "path")?.context("Missing path for file")?;
-                    Ok(Self::File {
-                        abs_path: path.into(),
-                    })
-                } else if path.starts_with("/agent/directory") {
-                    let path =
-                        single_query_param(&url, "path")?.context("Missing path for directory")?;
-                    Ok(Self::Directory {
-                        abs_path: path.into(),
-                    })
-                } else if path.starts_with("/agent/selection") {
-                    let fragment = url.fragment().context("Missing fragment for selection")?;
-                    let line_range = parse_line_range(fragment)?;
-                    let path =
-                        single_query_param(&url, "path")?.context("Missing path for selection")?;
-                    Ok(Self::Selection {
-                        abs_path: Some(path.into()),
-                        line_range,
-                    })
                 } else {
                     bail!("invalid zed url: {:?}", input);
                 }
@@ -213,29 +180,20 @@ impl MentionUri {
     pub fn to_uri(&self) -> Url {
         match self {
             MentionUri::File { abs_path } => {
-                let mut url = Url::parse("zed:///").unwrap();
-                url.set_path("/agent/file");
-                url.query_pairs_mut()
-                    .append_pair("path", &abs_path.to_string_lossy());
-                url
+                Url::from_file_path(abs_path).expect("mention path should be absolute")
             }
             MentionUri::PastedImage => Url::parse("zed:///agent/pasted-image").unwrap(),
             MentionUri::Directory { abs_path } => {
-                let mut url = Url::parse("zed:///").unwrap();
-                url.set_path("/agent/directory");
-                url.query_pairs_mut()
-                    .append_pair("path", &abs_path.to_string_lossy());
-                url
+                Url::from_directory_path(abs_path).expect("mention path should be absolute")
             }
             MentionUri::Symbol {
                 abs_path,
                 name,
                 line_range,
             } => {
-                let mut url = Url::parse("zed:///").unwrap();
-                url.set_path(&format!("/agent/symbol/{name}"));
-                url.query_pairs_mut()
-                    .append_pair("path", &abs_path.to_string_lossy());
+                let mut url =
+                    Url::from_file_path(abs_path).expect("mention path should be absolute");
+                url.query_pairs_mut().append_pair("symbol", name);
                 url.set_fragment(Some(&format!(
                     "L{}:{}",
                     line_range.start() + 1,
@@ -244,16 +202,15 @@ impl MentionUri {
                 url
             }
             MentionUri::Selection {
-                abs_path,
+                abs_path: path,
                 line_range,
             } => {
-                let mut url = Url::parse("zed:///").unwrap();
-                if let Some(abs_path) = abs_path {
-                    url.set_path("/agent/selection");
-                    url.query_pairs_mut()
-                        .append_pair("path", &abs_path.to_string_lossy());
+                let mut url = if let Some(path) = path {
+                    Url::from_file_path(path).expect("mention path should be absolute")
                 } else {
+                    let mut url = Url::parse("zed:///").unwrap();
                     url.set_path("/agent/untitled-buffer");
+                    url
                 };
                 url.set_fragment(Some(&format!(
                     "L{}:{}",
@@ -338,32 +295,37 @@ mod tests {
 
     #[test]
     fn test_parse_file_uri() {
-        let old_uri = uri!("file:///path/to/file.rs");
-        let parsed = MentionUri::parse(old_uri).unwrap();
+        let file_uri = uri!("file:///path/to/file.rs");
+        let parsed = MentionUri::parse(file_uri).unwrap();
         match &parsed {
             MentionUri::File { abs_path } => {
                 assert_eq!(abs_path.to_str().unwrap(), path!("/path/to/file.rs"));
             }
             _ => panic!("Expected File variant"),
         }
-        let new_uri = parsed.to_uri().to_string();
-        assert!(new_uri.starts_with("zed:///agent/file"));
-        assert_eq!(MentionUri::parse(&new_uri).unwrap(), parsed);
+        assert_eq!(parsed.to_uri().to_string(), file_uri);
     }
 
     #[test]
     fn test_parse_directory_uri() {
-        let old_uri = uri!("file:///path/to/dir/");
-        let parsed = MentionUri::parse(old_uri).unwrap();
+        let file_uri = uri!("file:///path/to/dir/");
+        let parsed = MentionUri::parse(file_uri).unwrap();
         match &parsed {
             MentionUri::Directory { abs_path } => {
                 assert_eq!(abs_path.to_str().unwrap(), path!("/path/to/dir/"));
             }
             _ => panic!("Expected Directory variant"),
         }
-        let new_uri = parsed.to_uri().to_string();
-        assert!(new_uri.starts_with("zed:///agent/directory"));
-        assert_eq!(MentionUri::parse(&new_uri).unwrap(), parsed);
+        assert_eq!(parsed.to_uri().to_string(), file_uri);
+    }
+
+    #[test]
+    fn test_to_directory_uri_with_slash() {
+        let uri = MentionUri::Directory {
+            abs_path: PathBuf::from(path!("/path/to/dir/")),
+        };
+        let expected = uri!("file:///path/to/dir/");
+        assert_eq!(uri.to_uri().to_string(), expected);
     }
 
     #[test]
@@ -371,15 +333,14 @@ mod tests {
         let uri = MentionUri::Directory {
             abs_path: PathBuf::from(path!("/path/to/dir")),
         };
-        let uri_string = uri.to_uri().to_string();
-        assert!(uri_string.starts_with("zed:///agent/directory"));
-        assert_eq!(MentionUri::parse(&uri_string).unwrap(), uri);
+        let expected = uri!("file:///path/to/dir/");
+        assert_eq!(uri.to_uri().to_string(), expected);
     }
 
     #[test]
     fn test_parse_symbol_uri() {
-        let old_uri = uri!("file:///path/to/file.rs?symbol=MySymbol#L10:20");
-        let parsed = MentionUri::parse(old_uri).unwrap();
+        let symbol_uri = uri!("file:///path/to/file.rs?symbol=MySymbol#L10:20");
+        let parsed = MentionUri::parse(symbol_uri).unwrap();
         match &parsed {
             MentionUri::Symbol {
                 abs_path: path,
@@ -393,15 +354,13 @@ mod tests {
             }
             _ => panic!("Expected Symbol variant"),
         }
-        let new_uri = parsed.to_uri().to_string();
-        assert!(new_uri.starts_with("zed:///agent/symbol/MySymbol"));
-        assert_eq!(MentionUri::parse(&new_uri).unwrap(), parsed);
+        assert_eq!(parsed.to_uri().to_string(), symbol_uri);
     }
 
     #[test]
     fn test_parse_selection_uri() {
-        let old_uri = uri!("file:///path/to/file.rs#L5:15");
-        let parsed = MentionUri::parse(old_uri).unwrap();
+        let selection_uri = uri!("file:///path/to/file.rs#L5:15");
+        let parsed = MentionUri::parse(selection_uri).unwrap();
         match &parsed {
             MentionUri::Selection {
                 abs_path: path,
@@ -416,9 +375,7 @@ mod tests {
             }
             _ => panic!("Expected Selection variant"),
         }
-        let new_uri = parsed.to_uri().to_string();
-        assert!(new_uri.starts_with("zed:///agent/selection"));
-        assert_eq!(MentionUri::parse(&new_uri).unwrap(), parsed);
+        assert_eq!(parsed.to_uri().to_string(), selection_uri);
     }
 
     #[test]
diff --git a/crates/agent/src/context.rs b/crates/agent/src/context.rs
index 80062b1e46..fdcf0316a0 100644
--- a/crates/agent/src/context.rs
+++ b/crates/agent/src/context.rs
@@ -159,7 +159,7 @@ pub struct FileContextHandle {
 #[derive(Debug, Clone)]
 pub struct FileContext {
     pub handle: FileContextHandle,
-    pub full_path: String,
+    pub full_path: Arc<Path>,
     pub text: SharedString,
     pub is_outline: bool,
 }
@@ -187,7 +187,7 @@ impl FileContextHandle {
             log::error!("file context missing path");
             return Task::ready(None);
         };
-        let full_path = file.full_path(cx).to_string_lossy().to_string();
+        let full_path: Arc<Path> = file.full_path(cx).into();
         let rope = buffer_ref.as_rope().clone();
         let buffer = self.buffer.clone();
 
@@ -236,7 +236,7 @@ pub struct DirectoryContextHandle {
 #[derive(Debug, Clone)]
 pub struct DirectoryContext {
     pub handle: DirectoryContextHandle,
-    pub full_path: String,
+    pub full_path: Arc<Path>,
     pub descendants: Vec<DirectoryContextDescendant>,
 }
 
@@ -274,16 +274,13 @@ impl DirectoryContextHandle {
         }
 
         let directory_path = entry.path.clone();
-        let directory_full_path = worktree_ref
-            .full_path(&directory_path)
-            .to_string_lossy()
-            .to_string();
+        let directory_full_path = worktree_ref.full_path(&directory_path).into();
 
         let file_paths = collect_files_in_path(worktree_ref, &directory_path);
         let descendants_future = future::join_all(file_paths.into_iter().map(|path| {
             let worktree_ref = worktree.read(cx);
             let worktree_id = worktree_ref.id();
-            let full_path = worktree_ref.full_path(&path).to_string_lossy().to_string();
+            let full_path = worktree_ref.full_path(&path);
 
             let rel_path = path
                 .strip_prefix(&directory_path)
@@ -364,7 +361,7 @@ pub struct SymbolContextHandle {
 #[derive(Debug, Clone)]
 pub struct SymbolContext {
     pub handle: SymbolContextHandle,
-    pub full_path: String,
+    pub full_path: Arc<Path>,
     pub line_range: Range<Point>,
     pub text: SharedString,
 }
@@ -403,7 +400,7 @@ impl SymbolContextHandle {
             log::error!("symbol context's file has no path");
             return Task::ready(None);
         };
-        let full_path = file.full_path(cx).to_string_lossy().to_string();
+        let full_path = file.full_path(cx).into();
         let line_range = self.enclosing_range.to_point(&buffer_ref.snapshot());
         let text = self.text(cx);
         let buffer = self.buffer.clone();
@@ -437,7 +434,7 @@ pub struct SelectionContextHandle {
 #[derive(Debug, Clone)]
 pub struct SelectionContext {
     pub handle: SelectionContextHandle,
-    pub full_path: String,
+    pub full_path: Arc<Path>,
     pub line_range: Range<Point>,
     pub text: SharedString,
 }
@@ -476,7 +473,7 @@ impl SelectionContextHandle {
         let text = self.text(cx);
         let buffer = self.buffer.clone();
         let context = AgentContext::Selection(SelectionContext {
-            full_path: full_path.to_string_lossy().to_string(),
+            full_path: full_path.into(),
             line_range: self.line_range(cx),
             text,
             handle: self,
@@ -706,7 +703,7 @@ impl Display for RulesContext {
 #[derive(Debug, Clone)]
 pub struct ImageContext {
     pub project_path: Option<ProjectPath>,
-    pub full_path: Option<String>,
+    pub full_path: Option<Arc<Path>>,
     pub original_image: Arc<gpui::Image>,
     // TODO: handle this elsewhere and remove `ignore-interior-mutability` opt-out in clippy.toml
     // needed due to a false positive of `clippy::mutable_key_type`.
@@ -986,17 +983,14 @@ fn collect_files_in_path(worktree: &Worktree, path: &RelPath) -> Vec<Arc<RelPath
     files
 }
 
-fn codeblock_tag(full_path: &str, line_range: Option<Range<Point>>) -> String {
+fn codeblock_tag(full_path: &Path, line_range: Option<Range<Point>>) -> String {
     let mut result = String::new();
 
-    if let Some(extension) = Path::new(full_path)
-        .extension()
-        .and_then(|ext| ext.to_str())
-    {
+    if let Some(extension) = full_path.extension().and_then(|ext| ext.to_str()) {
         let _ = write!(result, "{} ", extension);
     }
 
-    let _ = write!(result, "{}", full_path);
+    let _ = write!(result, "{}", full_path.display());
 
     if let Some(range) = line_range {
         if range.start.row == range.end.row {
diff --git a/crates/agent/src/context_store.rs b/crates/agent/src/context_store.rs
index c4aa0abc25..9b96537000 100644
--- a/crates/agent/src/context_store.rs
+++ b/crates/agent/src/context_store.rs
@@ -312,7 +312,7 @@ impl ContextStore {
                 let item = image_item.read(cx);
                 this.insert_image(
                     Some(item.project_path(cx)),
-                    Some(item.file.full_path(cx).to_string_lossy().to_string()),
+                    Some(item.file.full_path(cx).into()),
                     item.image.clone(),
                     remove_if_exists,
                     cx,
@@ -328,7 +328,7 @@ impl ContextStore {
     fn insert_image(
         &mut self,
         project_path: Option<ProjectPath>,
-        full_path: Option<String>,
+        full_path: Option<Arc<Path>>,
         image: Arc<Image>,
         remove_if_exists: bool,
         cx: &mut Context<ContextStore>,
diff --git a/crates/agent/src/thread_store.rs b/crates/agent/src/thread_store.rs
index 91b2f3b684..fe73b959b7 100644
--- a/crates/agent/src/thread_store.rs
+++ b/crates/agent/src/thread_store.rs
@@ -235,7 +235,7 @@ impl ThreadStore {
                 if items.iter().any(|(path, _, _)| {
                     RULES_FILE_NAMES
                         .iter()
-                        .any(|name| path.as_ref() == RelPath::unix(name).unwrap())
+                        .any(|name| path.as_ref() == RelPath::new(name).unwrap())
                 }) {
                     self.enqueue_system_prompt_reload();
                 }
@@ -368,7 +368,7 @@ impl ThreadStore {
             .into_iter()
             .filter_map(|name| {
                 worktree
-                    .entry_for_path(RelPath::unix(name).unwrap())
+                    .entry_for_path(RelPath::new(name).unwrap())
                     .filter(|entry| entry.is_file())
                     .map(|entry| entry.path.clone())
             })
diff --git a/crates/agent2/src/agent.rs b/crates/agent2/src/agent.rs
index fe47c66fea..f3324da448 100644
--- a/crates/agent2/src/agent.rs
+++ b/crates/agent2/src/agent.rs
@@ -475,7 +475,7 @@ impl NativeAgent {
             .into_iter()
             .filter_map(|name| {
                 worktree
-                    .entry_for_path(RelPath::unix(name).unwrap())
+                    .entry_for_path(RelPath::new(name).unwrap())
                     .filter(|entry| entry.is_file())
                     .map(|entry| entry.path.clone())
             })
@@ -559,7 +559,7 @@ impl NativeAgent {
                 if items.iter().any(|(path, _, _)| {
                     RULES_FILE_NAMES
                         .iter()
-                        .any(|name| path.as_ref() == RelPath::unix(name).unwrap())
+                        .any(|name| path.as_ref() == RelPath::new(name).unwrap())
                 }) {
                     self.project_context_needs_refresh.send(()).ok();
                 }
@@ -1205,7 +1205,7 @@ mod tests {
     use acp_thread::{AgentConnection, AgentModelGroupName, AgentModelInfo, MentionUri};
     use fs::FakeFs;
     use gpui::TestAppContext;
-    use indoc::formatdoc;
+    use indoc::indoc;
     use language_model::fake_provider::FakeLanguageModel;
     use serde_json::json;
     use settings::SettingsStore;
@@ -1502,17 +1502,13 @@ mod tests {
         summary_model.end_last_completion_stream();
 
         send.await.unwrap();
-        let uri = MentionUri::File {
-            abs_path: path!("/a/b.md").into(),
-        }
-        .to_uri();
         acp_thread.read_with(cx, |thread, cx| {
             assert_eq!(
                 thread.to_markdown(cx),
-                formatdoc! {"
+                indoc! {"
                     ## User
 
-                    What does [@b.md]({uri}) mean?
+                    What does [@b.md](file:///a/b.md) mean?
 
                     ## Assistant
 
@@ -1548,10 +1544,10 @@ mod tests {
         acp_thread.read_with(cx, |thread, cx| {
             assert_eq!(
                 thread.to_markdown(cx),
-                formatdoc! {"
+                indoc! {"
                     ## User
 
-                    What does [@b.md]({uri}) mean?
+                    What does [@b.md](file:///a/b.md) mean?
 
                     ## Assistant
 
diff --git a/crates/agent2/src/tools/edit_file_tool.rs b/crates/agent2/src/tools/edit_file_tool.rs
index 3b1bf6f408..9f2e8e3e31 100644
--- a/crates/agent2/src/tools/edit_file_tool.rs
+++ b/crates/agent2/src/tools/edit_file_tool.rs
@@ -541,7 +541,7 @@ fn resolve_path(
                 .path
                 .file_name()
                 .and_then(|file_name| file_name.to_str())
-                .and_then(|file_name| RelPath::unix(file_name).ok())
+                .and_then(|file_name| RelPath::new(file_name).ok())
                 .context("Can't create file: invalid filename")?;
 
             let new_file_path = parent_project_path.map(|parent| ProjectPath {
@@ -565,7 +565,7 @@ mod tests {
     use prompt_store::ProjectContext;
     use serde_json::json;
     use settings::SettingsStore;
-    use util::{path, rel_path::rel_path};
+    use util::path;
 
     #[gpui::test]
     async fn test_edit_nonexistent_file(cx: &mut TestAppContext) {
@@ -614,13 +614,13 @@ mod tests {
         let mode = &EditFileMode::Create;
 
         let result = test_resolve_path(mode, "root/new.txt", cx);
-        assert_resolved_path_eq(result.await, rel_path("new.txt"));
+        assert_resolved_path_eq(result.await, "new.txt");
 
         let result = test_resolve_path(mode, "new.txt", cx);
-        assert_resolved_path_eq(result.await, rel_path("new.txt"));
+        assert_resolved_path_eq(result.await, "new.txt");
 
         let result = test_resolve_path(mode, "dir/new.txt", cx);
-        assert_resolved_path_eq(result.await, rel_path("dir/new.txt"));
+        assert_resolved_path_eq(result.await, "dir/new.txt");
 
         let result = test_resolve_path(mode, "root/dir/subdir/existing.txt", cx);
         assert_eq!(
@@ -642,10 +642,10 @@ mod tests {
         let path_with_root = "root/dir/subdir/existing.txt";
         let path_without_root = "dir/subdir/existing.txt";
         let result = test_resolve_path(mode, path_with_root, cx);
-        assert_resolved_path_eq(result.await, rel_path(path_without_root));
+        assert_resolved_path_eq(result.await, path_without_root);
 
         let result = test_resolve_path(mode, path_without_root, cx);
-        assert_resolved_path_eq(result.await, rel_path(path_without_root));
+        assert_resolved_path_eq(result.await, path_without_root);
 
         let result = test_resolve_path(mode, "root/nonexistent.txt", cx);
         assert_eq!(
@@ -691,9 +691,10 @@ mod tests {
     }
 
     #[track_caller]
-    fn assert_resolved_path_eq(path: anyhow::Result<ProjectPath>, expected: &RelPath) {
+    fn assert_resolved_path_eq(path: anyhow::Result<ProjectPath>, expected: &str) {
         let actual = path.expect("Should return valid path").path;
-        assert_eq!(actual.as_ref(), expected);
+        let actual = actual.as_str();
+        assert_eq!(actual, expected);
     }
 
     #[gpui::test]
diff --git a/crates/agent2/src/tools/read_file_tool.rs b/crates/agent2/src/tools/read_file_tool.rs
index ce8dcba102..fcbe897858 100644
--- a/crates/agent2/src/tools/read_file_tool.rs
+++ b/crates/agent2/src/tools/read_file_tool.rs
@@ -225,12 +225,9 @@ impl AgentTool for ReadFileTool {
                 Ok(result.into())
             } else {
                 // No line ranges specified, so check file size to see if it's too big.
-                let buffer_content = outline::get_buffer_content_or_outline(
-                    buffer.clone(),
-                    Some(&abs_path.to_string_lossy()),
-                    cx,
-                )
-                .await?;
+                let buffer_content =
+                    outline::get_buffer_content_or_outline(buffer.clone(), Some(&abs_path), cx)
+                        .await?;
 
                 action_log.update(cx, |log, cx| {
                     log.buffer_read(buffer.clone(), cx);
diff --git a/crates/agent_ui/src/acp/message_editor.rs b/crates/agent_ui/src/acp/message_editor.rs
index dec9b0beb2..689d3e25eb 100644
--- a/crates/agent_ui/src/acp/message_editor.rs
+++ b/crates/agent_ui/src/acp/message_editor.rs
@@ -48,7 +48,7 @@ use std::{
 use text::OffsetRangeExt;
 use theme::ThemeSettings;
 use ui::{ButtonLike, TintColor, Toggleable, prelude::*};
-use util::{ResultExt, debug_panic, rel_path::RelPath};
+use util::{ResultExt, debug_panic, paths::PathStyle, rel_path::RelPath};
 use workspace::{Workspace, notifications::NotifyResultExt as _};
 use zed_actions::agent::Chat;
 
@@ -108,6 +108,11 @@ impl MessageEditor {
             available_commands.clone(),
         ));
         let mention_set = MentionSet::default();
+        // TODO: fix mentions when remoting with mixed path styles.
+        let host_and_guest_paths_differ = project
+            .read(cx)
+            .remote_client()
+            .is_some_and(|client| client.read(cx).path_style() != PathStyle::local());
         let editor = cx.new(|cx| {
             let buffer = cx.new(|cx| Buffer::local("", cx).with_language(Arc::new(language), cx));
             let buffer = cx.new(|cx| MultiBuffer::singleton(buffer, cx));
@@ -117,7 +122,9 @@ impl MessageEditor {
             editor.set_show_indent_guides(false, cx);
             editor.set_soft_wrap();
             editor.set_use_modal_editing(true);
-            editor.set_completion_provider(Some(completion_provider.clone()));
+            if !host_and_guest_paths_differ {
+                editor.set_completion_provider(Some(completion_provider.clone()));
+            }
             editor.set_context_menu_options(ContextMenuOptions {
                 min_entries_visible: 12,
                 max_entries_visible: 12,
@@ -452,12 +459,9 @@ impl MessageEditor {
             .update(cx, |project, cx| project.open_buffer(project_path, cx));
         cx.spawn(async move |_, cx| {
             let buffer = buffer.await?;
-            let buffer_content = outline::get_buffer_content_or_outline(
-                buffer.clone(),
-                Some(&abs_path.to_string_lossy()),
-                &cx,
-            )
-            .await?;
+            let buffer_content =
+                outline::get_buffer_content_or_outline(buffer.clone(), Some(&abs_path), &cx)
+                    .await?;
 
             Ok(Mention::Text {
                 content: buffer_content.text,
@@ -1177,20 +1181,14 @@ fn full_mention_for_directory(
     abs_path: &Path,
     cx: &mut App,
 ) -> Task<Result<Mention>> {
-    fn collect_files_in_path(worktree: &Worktree, path: &RelPath) -> Vec<(Arc<RelPath>, String)> {
+    fn collect_files_in_path(worktree: &Worktree, path: &RelPath) -> Vec<(Arc<RelPath>, PathBuf)> {
         let mut files = Vec::new();
 
         for entry in worktree.child_entries(path) {
             if entry.is_dir() {
                 files.extend(collect_files_in_path(worktree, &entry.path));
             } else if entry.is_file() {
-                files.push((
-                    entry.path.clone(),
-                    worktree
-                        .full_path(&entry.path)
-                        .to_string_lossy()
-                        .to_string(),
-                ));
+                files.push((entry.path.clone(), worktree.full_path(&entry.path)));
             }
         }
 
@@ -1268,7 +1266,7 @@ fn full_mention_for_directory(
     })
 }
 
-fn render_directory_contents(entries: Vec<(Arc<RelPath>, String, String)>) -> String {
+fn render_directory_contents(entries: Vec<(Arc<RelPath>, PathBuf, String)>) -> String {
     let mut output = String::new();
     for (_relative_path, full_path, content) in entries {
         let fence = codeblock_fence_for_path(Some(&full_path), None);
@@ -1602,7 +1600,7 @@ mod tests {
     use serde_json::json;
     use text::Point;
     use ui::{App, Context, IntoElement, Render, SharedString, Window};
-    use util::{path, paths::PathStyle, rel_path::rel_path};
+    use util::{path, paths::PathStyle, rel_path::rel_path, uri};
     use workspace::{AppState, Item, Workspace};
 
     use crate::acp::{
@@ -2268,11 +2266,7 @@ mod tests {
             editor.confirm_completion(&editor::actions::ConfirmCompletion::default(), window, cx);
         });
 
-        let url_one = MentionUri::File {
-            abs_path: path!("/dir/a/one.txt").into(),
-        }
-        .to_uri()
-        .to_string();
+        let url_one = uri!("file:///dir/a/one.txt");
         editor.update(&mut cx, |editor, cx| {
             let text = editor.text(cx);
             assert_eq!(text, format!("Lorem [@one.txt]({url_one}) "));
@@ -2377,11 +2371,7 @@ mod tests {
             .into_values()
             .collect::<Vec<_>>();
 
-        let url_eight = MentionUri::File {
-            abs_path: path!("/dir/b/eight.txt").into(),
-        }
-        .to_uri()
-        .to_string();
+        let url_eight = uri!("file:///dir/b/eight.txt");
 
         {
             let [_, (uri, Mention::Text { content, .. })] = contents.as_slice() else {
@@ -2480,12 +2470,6 @@ mod tests {
             editor.confirm_completion(&editor::actions::ConfirmCompletion::default(), window, cx);
         });
 
-        let symbol = MentionUri::Symbol {
-            abs_path: path!("/dir/a/one.txt").into(),
-            name: "MySymbol".into(),
-            line_range: 0..=0,
-        };
-
         let contents = message_editor
             .update(&mut cx, |message_editor, cx| {
                 message_editor.mention_set().contents(
@@ -2505,7 +2489,12 @@ mod tests {
                 panic!("Unexpected mentions");
             };
             pretty_assertions::assert_eq!(content, "1");
-            pretty_assertions::assert_eq!(uri, &symbol);
+            pretty_assertions::assert_eq!(
+                uri,
+                &format!("{url_one}?symbol=MySymbol#L1:1")
+                    .parse::<MentionUri>()
+                    .unwrap()
+            );
         }
 
         cx.run_until_parked();
@@ -2513,10 +2502,7 @@ mod tests {
         editor.read_with(&cx, |editor, cx| {
             assert_eq!(
                 editor.text(cx),
-                format!(
-                    "Lorem [@one.txt]({url_one})  Ipsum [@eight.txt]({url_eight}) [@MySymbol]({}) ",
-                    symbol.to_uri(),
-                )
+                format!("Lorem [@one.txt]({url_one})  Ipsum [@eight.txt]({url_eight}) [@MySymbol]({url_one}?symbol=MySymbol#L1:1) ")
             );
         });
 
@@ -2526,7 +2512,7 @@ mod tests {
         editor.update(&mut cx, |editor, cx| {
             assert_eq!(
                 editor.text(cx),
-                format!("Lorem [@one.txt]({url_one})  Ipsum [@eight.txt]({url_eight}) [@MySymbol]({}) @file x.png", symbol.to_uri())
+                format!("Lorem [@one.txt]({url_one})  Ipsum [@eight.txt]({url_eight}) [@MySymbol]({url_one}?symbol=MySymbol#L1:1) @file x.png")
             );
             assert!(editor.has_visible_completions_menu());
             assert_eq!(current_completion_labels(editor), &[format!("x.png dir{slash}")]);
@@ -2555,10 +2541,7 @@ mod tests {
         editor.read_with(&cx, |editor, cx| {
             assert_eq!(
                 editor.text(cx),
-                format!(
-                    "Lorem [@one.txt]({url_one})  Ipsum [@eight.txt]({url_eight}) [@MySymbol]({}) ",
-                    symbol.to_uri()
-                )
+                format!("Lorem [@one.txt]({url_one})  Ipsum [@eight.txt]({url_eight}) [@MySymbol]({url_one}?symbol=MySymbol#L1:1) ")
             );
         });
 
@@ -2568,7 +2551,7 @@ mod tests {
         editor.update(&mut cx, |editor, cx| {
                     assert_eq!(
                         editor.text(cx),
-                        format!("Lorem [@one.txt]({url_one})  Ipsum [@eight.txt]({url_eight}) [@MySymbol]({}) @file x.png", symbol.to_uri())
+                        format!("Lorem [@one.txt]({url_one})  Ipsum [@eight.txt]({url_eight}) [@MySymbol]({url_one}?symbol=MySymbol#L1:1) @file x.png")
                     );
                     assert!(editor.has_visible_completions_menu());
                     assert_eq!(current_completion_labels(editor), &[format!("x.png dir{slash}")]);
@@ -2583,14 +2566,11 @@ mod tests {
 
         // Mention was removed
         editor.read_with(&cx, |editor, cx| {
-            assert_eq!(
-                editor.text(cx),
-                format!(
-                    "Lorem [@one.txt]({url_one})  Ipsum [@eight.txt]({url_eight}) [@MySymbol]({}) ",
-                    symbol.to_uri()
-                )
-            );
-        });
+                    assert_eq!(
+                        editor.text(cx),
+                        format!("Lorem [@one.txt]({url_one})  Ipsum [@eight.txt]({url_eight}) [@MySymbol]({url_one}?symbol=MySymbol#L1:1) ")
+                    );
+                });
 
         // Now getting the contents succeeds, because the invalid mention was removed
         let contents = message_editor
diff --git a/crates/agent_ui/src/ui/context_pill.rs b/crates/agent_ui/src/ui/context_pill.rs
index c42d33c6d3..a015d6305e 100644
--- a/crates/agent_ui/src/ui/context_pill.rs
+++ b/crates/agent_ui/src/ui/context_pill.rs
@@ -17,7 +17,6 @@ use agent::context::{
     FileContextHandle, ImageContext, ImageStatus, RulesContextHandle, SelectionContextHandle,
     SymbolContextHandle, TextThreadContextHandle, ThreadContextHandle,
 };
-use util::paths::PathStyle;
 
 #[derive(IntoElement)]
 pub enum ContextPill {
@@ -304,54 +303,33 @@ impl AddedContext {
         cx: &App,
     ) -> Option<AddedContext> {
         match handle {
-            AgentContextHandle::File(handle) => {
-                Self::pending_file(handle, project.path_style(cx), cx)
-            }
+            AgentContextHandle::File(handle) => Self::pending_file(handle, cx),
             AgentContextHandle::Directory(handle) => Self::pending_directory(handle, project, cx),
-            AgentContextHandle::Symbol(handle) => {
-                Self::pending_symbol(handle, project.path_style(cx), cx)
-            }
-            AgentContextHandle::Selection(handle) => {
-                Self::pending_selection(handle, project.path_style(cx), cx)
-            }
+            AgentContextHandle::Symbol(handle) => Self::pending_symbol(handle, cx),
+            AgentContextHandle::Selection(handle) => Self::pending_selection(handle, cx),
             AgentContextHandle::FetchedUrl(handle) => Some(Self::fetched_url(handle)),
             AgentContextHandle::Thread(handle) => Some(Self::pending_thread(handle, cx)),
             AgentContextHandle::TextThread(handle) => Some(Self::pending_text_thread(handle, cx)),
             AgentContextHandle::Rules(handle) => Self::pending_rules(handle, prompt_store, cx),
-            AgentContextHandle::Image(handle) => {
-                Some(Self::image(handle, model, project.path_style(cx), cx))
-            }
+            AgentContextHandle::Image(handle) => Some(Self::image(handle, model, cx)),
         }
     }
 
-    fn pending_file(
-        handle: FileContextHandle,
-        path_style: PathStyle,
-        cx: &App,
-    ) -> Option<AddedContext> {
-        let full_path = handle
-            .buffer
-            .read(cx)
-            .file()?
-            .full_path(cx)
-            .to_string_lossy()
-            .to_string();
-        Some(Self::file(handle, &full_path, path_style, cx))
+    fn pending_file(handle: FileContextHandle, cx: &App) -> Option<AddedContext> {
+        let full_path = handle.buffer.read(cx).file()?.full_path(cx);
+        Some(Self::file(handle, &full_path, cx))
     }
 
-    fn file(
-        handle: FileContextHandle,
-        full_path: &str,
-        path_style: PathStyle,
-        cx: &App,
-    ) -> AddedContext {
-        let (name, parent) = extract_file_name_and_directory_from_full_path(full_path, path_style);
+    fn file(handle: FileContextHandle, full_path: &Path, cx: &App) -> AddedContext {
+        let full_path_string: SharedString = full_path.to_string_lossy().into_owned().into();
+        let (name, parent) =
+            extract_file_name_and_directory_from_full_path(full_path, &full_path_string);
         AddedContext {
             kind: ContextKind::File,
             name,
             parent,
-            tooltip: Some(SharedString::new(full_path)),
-            icon_path: FileIcons::get_icon(Path::new(full_path), cx),
+            tooltip: Some(full_path_string),
+            icon_path: FileIcons::get_icon(full_path, cx),
             status: ContextStatus::Ready,
             render_hover: None,
             handle: AgentContextHandle::File(handle),
@@ -365,24 +343,19 @@ impl AddedContext {
     ) -> Option<AddedContext> {
         let worktree = project.worktree_for_entry(handle.entry_id, cx)?.read(cx);
         let entry = worktree.entry_for_id(handle.entry_id)?;
-        let full_path = worktree
-            .full_path(&entry.path)
-            .to_string_lossy()
-            .to_string();
-        Some(Self::directory(handle, &full_path, project.path_style(cx)))
+        let full_path = worktree.full_path(&entry.path);
+        Some(Self::directory(handle, &full_path))
     }
 
-    fn directory(
-        handle: DirectoryContextHandle,
-        full_path: &str,
-        path_style: PathStyle,
-    ) -> AddedContext {
-        let (name, parent) = extract_file_name_and_directory_from_full_path(full_path, path_style);
+    fn directory(handle: DirectoryContextHandle, full_path: &Path) -> AddedContext {
+        let full_path_string: SharedString = full_path.to_string_lossy().into_owned().into();
+        let (name, parent) =
+            extract_file_name_and_directory_from_full_path(full_path, &full_path_string);
         AddedContext {
             kind: ContextKind::Directory,
             name,
             parent,
-            tooltip: Some(SharedString::new(full_path)),
+            tooltip: Some(full_path_string),
             icon_path: None,
             status: ContextStatus::Ready,
             render_hover: None,
@@ -390,17 +363,9 @@ impl AddedContext {
         }
     }
 
-    fn pending_symbol(
-        handle: SymbolContextHandle,
-        path_style: PathStyle,
-        cx: &App,
-    ) -> Option<AddedContext> {
-        let excerpt = ContextFileExcerpt::new(
-            &handle.full_path(cx)?.to_string_lossy(),
-            handle.enclosing_line_range(cx),
-            path_style,
-            cx,
-        );
+    fn pending_symbol(handle: SymbolContextHandle, cx: &App) -> Option<AddedContext> {
+        let excerpt =
+            ContextFileExcerpt::new(&handle.full_path(cx)?, handle.enclosing_line_range(cx), cx);
         Some(AddedContext {
             kind: ContextKind::Symbol,
             name: handle.symbol.clone(),
@@ -418,17 +383,8 @@ impl AddedContext {
         })
     }
 
-    fn pending_selection(
-        handle: SelectionContextHandle,
-        path_style: PathStyle,
-        cx: &App,
-    ) -> Option<AddedContext> {
-        let excerpt = ContextFileExcerpt::new(
-            &handle.full_path(cx)?.to_string_lossy(),
-            handle.line_range(cx),
-            path_style,
-            cx,
-        );
+    fn pending_selection(handle: SelectionContextHandle, cx: &App) -> Option<AddedContext> {
+        let excerpt = ContextFileExcerpt::new(&handle.full_path(cx)?, handle.line_range(cx), cx);
         Some(AddedContext {
             kind: ContextKind::Selection,
             name: excerpt.file_name_and_range.clone(),
@@ -529,13 +485,13 @@ impl AddedContext {
     fn image(
         context: ImageContext,
         model: Option<&Arc<dyn language_model::LanguageModel>>,
-        path_style: PathStyle,
         cx: &App,
     ) -> AddedContext {
         let (name, parent, icon_path) = if let Some(full_path) = context.full_path.as_ref() {
+            let full_path_string: SharedString = full_path.to_string_lossy().into_owned().into();
             let (name, parent) =
-                extract_file_name_and_directory_from_full_path(full_path, path_style);
-            let icon_path = FileIcons::get_icon(Path::new(full_path), cx);
+                extract_file_name_and_directory_from_full_path(full_path, &full_path_string);
+            let icon_path = FileIcons::get_icon(full_path, cx);
             (name, parent, icon_path)
         } else {
             ("Image".into(), None, None)
@@ -584,20 +540,19 @@ impl AddedContext {
 }
 
 fn extract_file_name_and_directory_from_full_path(
-    path: &str,
-    path_style: PathStyle,
+    path: &Path,
+    name_fallback: &SharedString,
 ) -> (SharedString, Option<SharedString>) {
-    let (parent, file_name) = path_style.split(path);
-    let parent = parent.and_then(|parent| {
-        let parent = parent.trim_end_matches(path_style.separator());
-        let (_, parent) = path_style.split(parent);
-        if parent.is_empty() {
-            None
-        } else {
-            Some(SharedString::new(parent))
-        }
-    });
-    (SharedString::new(file_name), parent)
+    let name = path
+        .file_name()
+        .map(|n| n.to_string_lossy().into_owned().into())
+        .unwrap_or_else(|| name_fallback.clone());
+    let parent = path
+        .parent()
+        .and_then(|p| p.file_name())
+        .map(|n| n.to_string_lossy().into_owned().into());
+
+    (name, parent)
 }
 
 #[derive(Debug, Clone)]
@@ -609,25 +564,25 @@ struct ContextFileExcerpt {
 }
 
 impl ContextFileExcerpt {
-    pub fn new(full_path: &str, line_range: Range<Point>, path_style: PathStyle, cx: &App) -> Self {
-        let (parent, file_name) = path_style.split(full_path);
+    pub fn new(full_path: &Path, line_range: Range<Point>, cx: &App) -> Self {
+        let full_path_string = full_path.to_string_lossy().into_owned();
+        let file_name = full_path
+            .file_name()
+            .map(|n| n.to_string_lossy().into_owned())
+            .unwrap_or_else(|| full_path_string.clone());
+
         let line_range_text = format!(" ({}-{})", line_range.start.row + 1, line_range.end.row + 1);
-        let mut full_path_and_range = full_path.to_owned();
+        let mut full_path_and_range = full_path_string;
         full_path_and_range.push_str(&line_range_text);
-        let mut file_name_and_range = file_name.to_owned();
+        let mut file_name_and_range = file_name;
         file_name_and_range.push_str(&line_range_text);
 
-        let parent_name = parent.and_then(|parent| {
-            let parent = parent.trim_end_matches(path_style.separator());
-            let (_, parent) = path_style.split(parent);
-            if parent.is_empty() {
-                None
-            } else {
-                Some(SharedString::new(parent))
-            }
-        });
+        let parent_name = full_path
+            .parent()
+            .and_then(|p| p.file_name())
+            .map(|n| n.to_string_lossy().into_owned().into());
 
-        let icon_path = FileIcons::get_icon(Path::new(full_path), cx);
+        let icon_path = FileIcons::get_icon(full_path, cx);
 
         ContextFileExcerpt {
             file_name_and_range: file_name_and_range.into(),
@@ -735,7 +690,6 @@ impl Component for AddedContext {
                     image_task: Task::ready(Some(LanguageModelImage::empty())).shared(),
                 },
                 None,
-                PathStyle::local(),
                 cx,
             ),
         );
@@ -756,7 +710,6 @@ impl Component for AddedContext {
                         .shared(),
                 },
                 None,
-                PathStyle::local(),
                 cx,
             ),
         );
@@ -772,7 +725,6 @@ impl Component for AddedContext {
                     image_task: Task::ready(None).shared(),
                 },
                 None,
-                PathStyle::local(),
                 cx,
             ),
         );
@@ -815,8 +767,7 @@ mod tests {
             full_path: None,
         };
 
-        let added_context =
-            AddedContext::image(image_context, Some(&model), PathStyle::local(), cx);
+        let added_context = AddedContext::image(image_context, Some(&model), cx);
 
         assert!(matches!(
             added_context.status,
@@ -839,7 +790,7 @@ mod tests {
             full_path: None,
         };
 
-        let added_context = AddedContext::image(image_context, None, PathStyle::local(), cx);
+        let added_context = AddedContext::image(image_context, None, cx);
 
         assert!(
             matches!(added_context.status, ContextStatus::Ready),
diff --git a/crates/ai_onboarding/Cargo.toml b/crates/ai_onboarding/Cargo.toml
index 95a45b1a6f..cf3e6e9cd6 100644
--- a/crates/ai_onboarding/Cargo.toml
+++ b/crates/ai_onboarding/Cargo.toml
@@ -18,6 +18,7 @@ default = []
 client.workspace = true
 cloud_llm_client.workspace = true
 component.workspace = true
+feature_flags.workspace = true
 gpui.workspace = true
 language_model.workspace = true
 serde.workspace = true
diff --git a/crates/ai_onboarding/src/ai_onboarding.rs b/crates/ai_onboarding/src/ai_onboarding.rs
index d953ae6121..35e5832d3e 100644
--- a/crates/ai_onboarding/src/ai_onboarding.rs
+++ b/crates/ai_onboarding/src/ai_onboarding.rs
@@ -18,6 +18,7 @@ pub use young_account_banner::YoungAccountBanner;
 use std::sync::Arc;
 
 use client::{Client, UserStore, zed_urls};
+use feature_flags::{BillingV2FeatureFlag, FeatureFlagAppExt as _};
 use gpui::{AnyElement, Entity, IntoElement, ParentElement};
 use ui::{Divider, RegisterComponent, Tooltip, prelude::*};
 
@@ -84,7 +85,7 @@ impl ZedAiOnboarding {
         self
     }
 
-    fn render_sign_in_disclaimer(&self, _cx: &mut App) -> AnyElement {
+    fn render_sign_in_disclaimer(&self, cx: &mut App) -> AnyElement {
         let signing_in = matches!(self.sign_in_status, SignInStatus::SigningIn);
 
         v_flex()
@@ -95,7 +96,7 @@ impl ZedAiOnboarding {
                     .color(Color::Muted)
                     .mb_2(),
             )
-            .child(PlanDefinitions.pro_plan(true, false))
+            .child(PlanDefinitions.pro_plan(cx.has_flag::<BillingV2FeatureFlag>(), false))
             .child(
                 Button::new("sign_in", "Try Zed Pro for Free")
                     .disabled(signing_in)
@@ -119,7 +120,7 @@ impl ZedAiOnboarding {
                 .max_w_full()
                 .gap_1()
                 .child(Headline::new("Welcome to Zed AI"))
-                .child(YoungAccountBanner)
+                .child(YoungAccountBanner::new(is_v2))
                 .child(
                     v_flex()
                         .mt_2()
@@ -306,7 +307,7 @@ impl RenderOnce for ZedAiOnboarding {
     fn render(self, _window: &mut ui::Window, cx: &mut App) -> impl IntoElement {
         if matches!(self.sign_in_status, SignInStatus::SignedIn) {
             match self.plan {
-                None => self.render_free_plan_state(true, cx),
+                None => self.render_free_plan_state(cx.has_flag::<BillingV2FeatureFlag>(), cx),
                 Some(plan @ (Plan::V1(PlanV1::ZedFree) | Plan::V2(PlanV2::ZedFree))) => {
                     self.render_free_plan_state(plan.is_v2(), cx)
                 }
diff --git a/crates/ai_onboarding/src/ai_upsell_card.rs b/crates/ai_onboarding/src/ai_upsell_card.rs
index 91191688b5..f6a4759666 100644
--- a/crates/ai_onboarding/src/ai_upsell_card.rs
+++ b/crates/ai_onboarding/src/ai_upsell_card.rs
@@ -2,6 +2,7 @@ use std::sync::Arc;
 
 use client::{Client, UserStore, zed_urls};
 use cloud_llm_client::{Plan, PlanV1, PlanV2};
+use feature_flags::{BillingV2FeatureFlag, FeatureFlagAppExt};
 use gpui::{AnyElement, App, Entity, IntoElement, RenderOnce, Window};
 use ui::{CommonAnimationExt, Divider, Vector, VectorName, prelude::*};
 
@@ -49,7 +50,9 @@ impl AiUpsellCard {
 
 impl RenderOnce for AiUpsellCard {
     fn render(self, _window: &mut Window, cx: &mut App) -> impl IntoElement {
-        let is_v2_plan = self.user_plan.map_or(true, |plan| plan.is_v2());
+        let is_v2_plan = self
+            .user_plan
+            .map_or(cx.has_flag::<BillingV2FeatureFlag>(), |plan| plan.is_v2());
 
         let pro_section = v_flex()
             .flex_grow()
@@ -172,7 +175,7 @@ impl RenderOnce for AiUpsellCard {
                     .child(Label::new("Try Zed AI").size(LabelSize::Large))
                     .map(|this| {
                         if self.account_too_young {
-                            this.child(YoungAccountBanner).child(
+                            this.child(YoungAccountBanner::new(is_v2_plan)).child(
                                 v_flex()
                                     .mt_2()
                                     .gap_1()
diff --git a/crates/ai_onboarding/src/young_account_banner.rs b/crates/ai_onboarding/src/young_account_banner.rs
index c4a7887364..fde9a31c49 100644
--- a/crates/ai_onboarding/src/young_account_banner.rs
+++ b/crates/ai_onboarding/src/young_account_banner.rs
@@ -2,17 +2,30 @@ use gpui::{IntoElement, ParentElement};
 use ui::{Banner, prelude::*};
 
 #[derive(IntoElement)]
-pub struct YoungAccountBanner;
+pub struct YoungAccountBanner {
+    is_v2: bool,
+}
+
+impl YoungAccountBanner {
+    pub fn new(is_v2: bool) -> Self {
+        Self { is_v2 }
+    }
+}
 
 impl RenderOnce for YoungAccountBanner {
     fn render(self, _window: &mut Window, cx: &mut App) -> impl IntoElement {
-        const YOUNG_ACCOUNT_DISCLAIMER: &str = "To prevent abuse of our service, GitHub accounts created fewer than 30 days ago are not eligible for the Pro trial. You can request an exception by reaching out to billing-support@zed.dev";
+        const YOUNG_ACCOUNT_DISCLAIMER: &str = "To prevent abuse of our service, GitHub accounts created fewer than 30 days ago are not eligible for free plan usage or Pro plan free trial. You can request an exception by reaching out to billing-support@zed.dev";
+        const YOUNG_ACCOUNT_DISCLAIMER_V2: &str = "To prevent abuse of our service, GitHub accounts created fewer than 30 days ago are not eligible for the Pro trial. You can request an exception by reaching out to billing-support@zed.dev";
 
         let label = div()
             .w_full()
             .text_sm()
             .text_color(cx.theme().colors().text_muted)
-            .child(YOUNG_ACCOUNT_DISCLAIMER);
+            .child(if self.is_v2 {
+                YOUNG_ACCOUNT_DISCLAIMER_V2
+            } else {
+                YOUNG_ACCOUNT_DISCLAIMER
+            });
 
         div()
             .max_w_full()
diff --git a/crates/assistant_context/src/assistant_context.rs b/crates/assistant_context/src/assistant_context.rs
index 6c06cc2c8e..23aeabbc89 100644
--- a/crates/assistant_context/src/assistant_context.rs
+++ b/crates/assistant_context/src/assistant_context.rs
@@ -2669,7 +2669,7 @@ impl AssistantContext {
     }
 
     pub fn summarize(&mut self, mut replace_old: bool, cx: &mut Context<Self>) {
-        let Some(model) = LanguageModelRegistry::read_global(cx).thread_summary_model() else {
+        let Some(model) = LanguageModelRegistry::read_global(cx).default_model() else {
             return;
         };
 
diff --git a/crates/assistant_context/src/assistant_context_tests.rs b/crates/assistant_context/src/assistant_context_tests.rs
index 413e32dfcb..8b182685cf 100644
--- a/crates/assistant_context/src/assistant_context_tests.rs
+++ b/crates/assistant_context/src/assistant_context_tests.rs
@@ -1329,12 +1329,13 @@ fn setup_context_editor_with_fake_model(
     cx.update(|cx| {
         init_test(cx);
         LanguageModelRegistry::global(cx).update(cx, |registry, cx| {
-            let configured_model = ConfiguredModel {
-                provider: fake_provider.clone(),
-                model: fake_model.clone(),
-            };
-            registry.set_default_model(Some(configured_model.clone()), cx);
-            registry.set_thread_summary_model(Some(configured_model), cx);
+            registry.set_default_model(
+                Some(ConfiguredModel {
+                    provider: fake_provider.clone(),
+                    model: fake_model.clone(),
+                }),
+                cx,
+            )
         })
     });
 
diff --git a/crates/assistant_slash_commands/src/file_command.rs b/crates/assistant_slash_commands/src/file_command.rs
index 0968a297b8..afb3d942fe 100644
--- a/crates/assistant_slash_commands/src/file_command.rs
+++ b/crates/assistant_slash_commands/src/file_command.rs
@@ -290,7 +290,7 @@ fn collect_files(
                                     folded_directory_names.join(&path_including_worktree_name);
                             } else {
                                 folded_directory_names =
-                                    folded_directory_names.join(RelPath::unix(&filename).unwrap());
+                                    folded_directory_names.join(RelPath::new(&filename).unwrap());
                             }
                             continue;
                         }
@@ -320,7 +320,7 @@ fn collect_files(
                         directory_stack.push(entry.path.clone());
                     } else {
                         let entry_name =
-                            folded_directory_names.join(RelPath::unix(&filename).unwrap());
+                            folded_directory_names.join(RelPath::new(&filename).unwrap());
                         let entry_name = entry_name.display(path_style);
                         events_tx.unbounded_send(Ok(SlashCommandEvent::StartSection {
                             icon: IconName::Folder,
@@ -355,7 +355,9 @@ fn collect_files(
                         let snapshot = buffer.read_with(cx, |buffer, _| buffer.snapshot())?;
                         append_buffer_to_output(
                             &snapshot,
-                            Some(path_including_worktree_name.display(path_style).as_ref()),
+                            Some(Path::new(
+                                path_including_worktree_name.display(path_style).as_ref(),
+                            )),
                             &mut output,
                         )
                         .log_err();
@@ -380,18 +382,18 @@ fn collect_files(
 }
 
 pub fn codeblock_fence_for_path(
-    path: Option<&str>,
+    path: Option<&Path>,
     row_range: Option<RangeInclusive<u32>>,
 ) -> String {
     let mut text = String::new();
     write!(text, "```").unwrap();
 
     if let Some(path) = path {
-        if let Some(extension) = Path::new(path).extension().and_then(|ext| ext.to_str()) {
+        if let Some(extension) = path.extension().and_then(|ext| ext.to_str()) {
             write!(text, "{} ", extension).unwrap();
         }
 
-        write!(text, "{path}").unwrap();
+        write!(text, "{}", path.display()).unwrap();
     } else {
         write!(text, "untitled").unwrap();
     }
@@ -411,12 +413,12 @@ pub struct FileCommandMetadata {
 
 pub fn build_entry_output_section(
     range: Range<usize>,
-    path: Option<&str>,
+    path: Option<&Path>,
     is_directory: bool,
     line_range: Option<Range<u32>>,
 ) -> SlashCommandOutputSection<usize> {
     let mut label = if let Some(path) = path {
-        path.to_string()
+        path.to_string_lossy().to_string()
     } else {
         "untitled".to_string()
     };
@@ -439,7 +441,7 @@ pub fn build_entry_output_section(
         } else {
             path.and_then(|path| {
                 serde_json::to_value(FileCommandMetadata {
-                    path: path.to_string(),
+                    path: path.to_string_lossy().to_string(),
                 })
                 .ok()
             })
@@ -503,7 +505,7 @@ mod custom_path_matcher {
                 .iter()
                 .zip(self.sources_with_trailing_slash.iter())
                 .any(|(source, with_slash)| {
-                    let as_bytes = other.as_unix_str().as_bytes();
+                    let as_bytes = other.as_str().as_bytes();
                     let with_slash = if source.ends_with('/') {
                         source.as_bytes()
                     } else {
@@ -512,12 +514,12 @@ mod custom_path_matcher {
 
                     as_bytes.starts_with(with_slash) || as_bytes.ends_with(source.as_bytes())
                 })
-                || self.glob.is_match(other.as_std_path())
+                || self.glob.is_match(other)
                 || self.check_with_end_separator(other)
         }
 
         fn check_with_end_separator(&self, path: &RelPath) -> bool {
-            let path_str = path.as_unix_str();
+            let path_str = path.as_str();
             let separator = "/";
             if path_str.ends_with(separator) {
                 false
@@ -530,7 +532,7 @@ mod custom_path_matcher {
 
 pub fn append_buffer_to_output(
     buffer: &BufferSnapshot,
-    path: Option<&str>,
+    path: Option<&Path>,
     output: &mut SlashCommandOutput,
 ) -> Result<()> {
     let prev_len = output.text.len();
diff --git a/crates/assistant_slash_commands/src/selection_command.rs b/crates/assistant_slash_commands/src/selection_command.rs
index 068a66339b..c5f01ee94c 100644
--- a/crates/assistant_slash_commands/src/selection_command.rs
+++ b/crates/assistant_slash_commands/src/selection_command.rs
@@ -137,9 +137,7 @@ pub fn selections_creases(
             None
         };
         let language_name = language_name.as_deref().unwrap_or("");
-        let filename = snapshot
-            .file_at(range.start)
-            .map(|file| file.full_path(cx).to_string_lossy().to_string());
+        let filename = snapshot.file_at(range.start).map(|file| file.full_path(cx));
         let text = if language_name == "markdown" {
             selected_text
                 .lines()
@@ -189,9 +187,9 @@ pub fn selections_creases(
             let start_line = range.start.row + 1;
             let end_line = range.end.row + 1;
             if start_line == end_line {
-                format!("{path}, Line {start_line}")
+                format!("{}, Line {}", path.display(), start_line)
             } else {
-                format!("{path}, Lines {start_line} to {end_line}")
+                format!("{}, Lines {} to {}", path.display(), start_line, end_line)
             }
         } else {
             "Quoted selection".to_string()
diff --git a/crates/assistant_slash_commands/src/symbols_command.rs b/crates/assistant_slash_commands/src/symbols_command.rs
index c537ced296..c700319800 100644
--- a/crates/assistant_slash_commands/src/symbols_command.rs
+++ b/crates/assistant_slash_commands/src/symbols_command.rs
@@ -7,8 +7,8 @@ use editor::Editor;
 use gpui::{AppContext as _, Task, WeakEntity};
 use language::{BufferSnapshot, LspAdapterDelegate};
 use std::sync::Arc;
-use std::sync::atomic::AtomicBool;
-use ui::{App, IconName, SharedString, Window};
+use std::{path::Path, sync::atomic::AtomicBool};
+use ui::{App, IconName, Window};
 use workspace::Workspace;
 
 pub struct OutlineSlashCommand;
@@ -67,13 +67,13 @@ impl SlashCommand for OutlineSlashCommand {
             };
 
             let snapshot = buffer.read(cx).snapshot();
-            let path = snapshot.resolve_file_path(true, cx);
+            let path = snapshot.resolve_file_path(cx, true);
 
             cx.background_spawn(async move {
                 let outline = snapshot.outline(None);
 
-                let path = path.as_deref().unwrap_or("untitled");
-                let mut outline_text = format!("Symbols for {path}:\n");
+                let path = path.as_deref().unwrap_or(Path::new("untitled"));
+                let mut outline_text = format!("Symbols for {}:\n", path.display());
                 for item in &outline.path_candidates {
                     outline_text.push_str("- ");
                     outline_text.push_str(&item.string);
@@ -84,7 +84,7 @@ impl SlashCommand for OutlineSlashCommand {
                     sections: vec![SlashCommandOutputSection {
                         range: 0..outline_text.len(),
                         icon: IconName::ListTree,
-                        label: SharedString::new(path),
+                        label: path.to_string_lossy().to_string().into(),
                         metadata: None,
                     }],
                     text: outline_text,
diff --git a/crates/assistant_slash_commands/src/tab_command.rs b/crates/assistant_slash_commands/src/tab_command.rs
index 9fd38128ca..a124beed63 100644
--- a/crates/assistant_slash_commands/src/tab_command.rs
+++ b/crates/assistant_slash_commands/src/tab_command.rs
@@ -8,9 +8,12 @@ use editor::Editor;
 use futures::future::join_all;
 use gpui::{Task, WeakEntity};
 use language::{BufferSnapshot, CodeLabel, HighlightId, LspAdapterDelegate};
-use std::sync::{Arc, atomic::AtomicBool};
+use std::{
+    path::PathBuf,
+    sync::{Arc, atomic::AtomicBool},
+};
 use ui::{ActiveTheme, App, Window, prelude::*};
-use util::{ResultExt, paths::PathStyle};
+use util::ResultExt;
 use workspace::Workspace;
 
 use crate::file_command::append_buffer_to_output;
@@ -69,42 +72,35 @@ impl SlashCommand for TabSlashCommand {
             return Task::ready(Ok(Vec::new()));
         }
 
-        let Some(workspace) = workspace.and_then(|workspace| workspace.upgrade()) else {
-            return Task::ready(Err(anyhow::anyhow!("no workspace")));
-        };
-
-        let active_item_path = workspace.update(cx, |workspace, cx| {
-            let snapshot = active_item_buffer(workspace, cx).ok()?;
-            snapshot.resolve_file_path(true, cx)
+        let active_item_path = workspace.as_ref().and_then(|workspace| {
+            workspace
+                .update(cx, |workspace, cx| {
+                    let snapshot = active_item_buffer(workspace, cx).ok()?;
+                    snapshot.resolve_file_path(cx, true)
+                })
+                .ok()
+                .flatten()
         });
-        let path_style = workspace.read(cx).path_style(cx);
-
         let current_query = arguments.last().cloned().unwrap_or_default();
-        let tab_items_search = tab_items_for_queries(
-            Some(workspace.downgrade()),
-            &[current_query],
-            cancel,
-            false,
-            window,
-            cx,
-        );
+        let tab_items_search =
+            tab_items_for_queries(workspace, &[current_query], cancel, false, window, cx);
 
         let comment_id = cx.theme().syntax().highlight_id("comment").map(HighlightId);
         window.spawn(cx, async move |_| {
             let tab_items = tab_items_search.await?;
             let run_command = tab_items.len() == 1;
             let tab_completion_items = tab_items.into_iter().filter_map(|(path, ..)| {
-                let path = path?;
-                if argument_set.contains(&path) {
+                let path_string = path.as_deref()?.to_string_lossy().to_string();
+                if argument_set.contains(&path_string) {
                     return None;
                 }
-                if active_item_path.as_ref() == Some(&path) {
+                if active_item_path.is_some() && active_item_path == path {
                     return None;
                 }
-                let label = create_tab_completion_label(&path, path_style, comment_id);
+                let label = create_tab_completion_label(path.as_ref()?, comment_id);
                 Some(ArgumentCompletion {
                     label,
-                    new_text: path,
+                    new_text: path_string,
                     replace_previous_arguments: false,
                     after_completion: run_command.into(),
                 })
@@ -113,9 +109,8 @@ impl SlashCommand for TabSlashCommand {
             let active_item_completion = active_item_path
                 .as_deref()
                 .map(|active_item_path| {
-                    let path_string = active_item_path.to_string();
-                    let label =
-                        create_tab_completion_label(active_item_path, path_style, comment_id);
+                    let path_string = active_item_path.to_string_lossy().to_string();
+                    let label = create_tab_completion_label(active_item_path, comment_id);
                     ArgumentCompletion {
                         label,
                         new_text: path_string,
@@ -174,7 +169,7 @@ fn tab_items_for_queries(
     strict_match: bool,
     window: &mut Window,
     cx: &mut App,
-) -> Task<anyhow::Result<Vec<(Option<String>, BufferSnapshot, usize)>>> {
+) -> Task<anyhow::Result<Vec<(Option<PathBuf>, BufferSnapshot, usize)>>> {
     let empty_query = queries.is_empty() || queries.iter().all(|query| query.trim().is_empty());
     let queries = queries.to_owned();
     window.spawn(cx, async move |cx| {
@@ -184,7 +179,7 @@ fn tab_items_for_queries(
                 .update(cx, |workspace, cx| {
                     if strict_match && empty_query {
                         let snapshot = active_item_buffer(workspace, cx)?;
-                        let full_path = snapshot.resolve_file_path(true, cx);
+                        let full_path = snapshot.resolve_file_path(cx, true);
                         return anyhow::Ok(vec![(full_path, snapshot, 0)]);
                     }
 
@@ -206,7 +201,7 @@ fn tab_items_for_queries(
                             && visited_buffers.insert(buffer.read(cx).remote_id())
                         {
                             let snapshot = buffer.read(cx).snapshot();
-                            let full_path = snapshot.resolve_file_path(true, cx);
+                            let full_path = snapshot.resolve_file_path(cx, true);
                             open_buffers.push((full_path, snapshot, *timestamp));
                         }
                     }
@@ -229,7 +224,10 @@ fn tab_items_for_queries(
                 let match_candidates = open_buffers
                     .iter()
                     .enumerate()
-                    .filter_map(|(id, (full_path, ..))| Some((id, full_path.clone()?)))
+                    .filter_map(|(id, (full_path, ..))| {
+                        let path_string = full_path.as_deref()?.to_string_lossy().to_string();
+                        Some((id, path_string))
+                    })
                     .fold(HashMap::default(), |mut candidates, (id, path_string)| {
                         candidates
                             .entry(path_string)
@@ -251,7 +249,8 @@ fn tab_items_for_queries(
                     .iter()
                     .enumerate()
                     .filter_map(|(id, (full_path, ..))| {
-                        Some(fuzzy::StringMatchCandidate::new(id, full_path.as_ref()?))
+                        let path_string = full_path.as_deref()?.to_string_lossy().to_string();
+                        Some(fuzzy::StringMatchCandidate::new(id, &path_string))
                     })
                     .collect::<Vec<_>>();
                 let mut processed_matches = HashSet::default();
@@ -303,15 +302,21 @@ fn active_item_buffer(
 }
 
 fn create_tab_completion_label(
-    path: &str,
-    path_style: PathStyle,
+    path: &std::path::Path,
     comment_id: Option<HighlightId>,
 ) -> CodeLabel {
-    let (parent_path, file_name) = path_style.split(path);
+    let file_name = path
+        .file_name()
+        .map(|f| f.to_string_lossy())
+        .unwrap_or_default();
+    let parent_path = path
+        .parent()
+        .map(|p| p.to_string_lossy())
+        .unwrap_or_default();
     let mut label = CodeLabel::default();
-    label.push_str(file_name, None);
+    label.push_str(&file_name, None);
     label.push_str(" ", None);
-    label.push_str(parent_path.unwrap_or_default(), comment_id);
+    label.push_str(&parent_path, comment_id);
     label.filter_range = 0..file_name.len();
     label
 }
diff --git a/crates/assistant_tool/src/outline.rs b/crates/assistant_tool/src/outline.rs
index 4c8e2efefd..fa5ad561ee 100644
--- a/crates/assistant_tool/src/outline.rs
+++ b/crates/assistant_tool/src/outline.rs
@@ -5,6 +5,7 @@ use language::{Buffer, OutlineItem, ParseStatus};
 use project::Project;
 use regex::Regex;
 use std::fmt::Write;
+use std::path::Path;
 use text::Point;
 
 /// For files over this size, instead of reading them (or including them in context),
@@ -142,7 +143,7 @@ pub struct BufferContent {
 /// For smaller files, returns the full content.
 pub async fn get_buffer_content_or_outline(
     buffer: Entity<Buffer>,
-    path: Option<&str>,
+    path: Option<&Path>,
     cx: &AsyncApp,
 ) -> Result<BufferContent> {
     let file_size = buffer.read_with(cx, |buffer, _| buffer.text().len())?;
@@ -169,10 +170,15 @@ pub async fn get_buffer_content_or_outline(
 
         let text = if let Some(path) = path {
             format!(
-                "# File outline for {path} (file too large to show full content)\n\n{outline_text}",
+                "# File outline for {} (file too large to show full content)\n\n{}",
+                path.display(),
+                outline_text
             )
         } else {
-            format!("# File outline (file too large to show full content)\n\n{outline_text}",)
+            format!(
+                "# File outline (file too large to show full content)\n\n{}",
+                outline_text
+            )
         };
         Ok(BufferContent {
             text,
diff --git a/crates/assistant_tools/src/edit_agent.rs b/crates/assistant_tools/src/edit_agent.rs
index 829287f654..29ac53e2a6 100644
--- a/crates/assistant_tools/src/edit_agent.rs
+++ b/crates/assistant_tools/src/edit_agent.rs
@@ -26,13 +26,13 @@ use language_model::{
 use project::{AgentLocation, Project};
 use schemars::JsonSchema;
 use serde::{Deserialize, Serialize};
-use std::{cmp, iter, mem, ops::Range, pin::Pin, sync::Arc, task::Poll};
+use std::{cmp, iter, mem, ops::Range, path::PathBuf, pin::Pin, sync::Arc, task::Poll};
 use streaming_diff::{CharOperation, StreamingDiff};
 use streaming_fuzzy_matcher::StreamingFuzzyMatcher;
 
 #[derive(Serialize)]
 struct CreateFilePromptTemplate {
-    path: Option<String>,
+    path: Option<PathBuf>,
     edit_description: String,
 }
 
@@ -42,7 +42,7 @@ impl Template for CreateFilePromptTemplate {
 
 #[derive(Serialize)]
 struct EditFileXmlPromptTemplate {
-    path: Option<String>,
+    path: Option<PathBuf>,
     edit_description: String,
 }
 
@@ -52,7 +52,7 @@ impl Template for EditFileXmlPromptTemplate {
 
 #[derive(Serialize)]
 struct EditFileDiffFencedPromptTemplate {
-    path: Option<String>,
+    path: Option<PathBuf>,
     edit_description: String,
 }
 
@@ -115,7 +115,7 @@ impl EditAgent {
         let conversation = conversation.clone();
         let output = cx.spawn(async move |cx| {
             let snapshot = buffer.read_with(cx, |buffer, _| buffer.snapshot())?;
-            let path = cx.update(|cx| snapshot.resolve_file_path(true, cx))?;
+            let path = cx.update(|cx| snapshot.resolve_file_path(cx, true))?;
             let prompt = CreateFilePromptTemplate {
                 path,
                 edit_description,
@@ -229,7 +229,7 @@ impl EditAgent {
         let edit_format = self.edit_format;
         let output = cx.spawn(async move |cx| {
             let snapshot = buffer.read_with(cx, |buffer, _| buffer.snapshot())?;
-            let path = cx.update(|cx| snapshot.resolve_file_path(true, cx))?;
+            let path = cx.update(|cx| snapshot.resolve_file_path(cx, true))?;
             let prompt = match edit_format {
                 EditFormat::XmlTags => EditFileXmlPromptTemplate {
                     path,
diff --git a/crates/assistant_tools/src/edit_file_tool.rs b/crates/assistant_tools/src/edit_file_tool.rs
index c8b7add0b8..f7ed5e28bf 100644
--- a/crates/assistant_tools/src/edit_file_tool.rs
+++ b/crates/assistant_tools/src/edit_file_tool.rs
@@ -554,7 +554,7 @@ fn resolve_path(
                 .context("Can't create file: invalid filename")?;
 
             let new_file_path = parent_project_path.map(|parent| ProjectPath {
-                path: parent.path.join(RelPath::unix(file_name).unwrap()),
+                path: parent.path.join(RelPath::new(file_name).unwrap()),
                 ..parent
             });
 
diff --git a/crates/assistant_tools/src/list_directory_tool.rs b/crates/assistant_tools/src/list_directory_tool.rs
index 7d70f41a8c..d46ac3ac0d 100644
--- a/crates/assistant_tools/src/list_directory_tool.rs
+++ b/crates/assistant_tools/src/list_directory_tool.rs
@@ -86,7 +86,6 @@ impl Tool for ListDirectoryTool {
         _window: Option<AnyWindowHandle>,
         cx: &mut App,
     ) -> ToolResult {
-        let path_style = project.read(cx).path_style(cx);
         let input = match serde_json::from_value::<ListDirectoryToolInput>(input) {
             Ok(input) => input,
             Err(err) => return Task::ready(Err(anyhow!(err))).into(),
@@ -101,7 +100,7 @@ impl Tool for ListDirectoryTool {
                 .filter_map(|worktree| {
                     worktree.read(cx).root_entry().and_then(|entry| {
                         if entry.is_dir() {
-                            Some(entry.path.display(path_style))
+                            Some(entry.path.as_str())
                         } else {
                             None
                         }
diff --git a/crates/assistant_tools/src/read_file_tool.rs b/crates/assistant_tools/src/read_file_tool.rs
index f9f68491e5..7006cc6903 100644
--- a/crates/assistant_tools/src/read_file_tool.rs
+++ b/crates/assistant_tools/src/read_file_tool.rs
@@ -261,8 +261,9 @@ impl Tool for ReadFileTool {
                 Ok(result)
             } else {
                 // No line ranges specified, so check file size to see if it's too big.
+                let path_buf = std::path::PathBuf::from(&file_path);
                 let buffer_content =
-                    outline::get_buffer_content_or_outline(buffer.clone(), Some(&file_path), cx)
+                    outline::get_buffer_content_or_outline(buffer.clone(), Some(&path_buf), cx)
                         .await?;
 
                 action_log.update(cx, |log, cx| {
diff --git a/crates/audio/Cargo.toml b/crates/audio/Cargo.toml
index 7f2fed80e2..c083c9a659 100644
--- a/crates/audio/Cargo.toml
+++ b/crates/audio/Cargo.toml
@@ -18,7 +18,6 @@ async-tar.workspace = true
 collections.workspace = true
 crossbeam.workspace = true
 gpui.workspace = true
-denoise = { path = "../denoise" }
 log.workspace = true
 parking_lot.workspace = true
 rodio = { workspace = true, features = [ "wav", "playback", "wav_output" ] }
diff --git a/crates/audio/src/audio.rs b/crates/audio/src/audio.rs
index 379af34751..f60ddb87b9 100644
--- a/crates/audio/src/audio.rs
+++ b/crates/audio/src/audio.rs
@@ -9,7 +9,7 @@ mod non_windows_and_freebsd_deps {
     pub(super) use log::info;
     pub(super) use parking_lot::Mutex;
     pub(super) use rodio::cpal::Sample;
-    pub(super) use rodio::source::LimitSettings;
+    pub(super) use rodio::source::{LimitSettings, UniformSourceIterator};
     pub(super) use std::sync::Arc;
 }
 
@@ -31,20 +31,18 @@ pub use rodio_ext::RodioExt;
 
 use crate::audio_settings::LIVE_SETTINGS;
 
-// We are migrating to 16kHz sample rate from 48kHz. In the future
-// once we are reasonably sure most users have upgraded we will
-// remove the LEGACY parameters.
+// NOTE: We used to use WebRTC's mixer which only supported
+// 16kHz, 32kHz and 48kHz. As 48 is the most common "next step up"
+// for audio output devices like speakers/bluetooth, we just hard-code
+// this; and downsample when we need to.
 //
-// We migrate to 16kHz because it is sufficient for speech and required
-// by the denoiser and future Speech to Text layers.
-pub const SAMPLE_RATE: NonZero<u32> = nz!(16000);
-pub const CHANNEL_COUNT: NonZero<u16> = nz!(1);
+// Since most noise cancelling requires 16kHz we will move to
+// that in the future.
+pub const SAMPLE_RATE: NonZero<u32> = nz!(48000);
+pub const CHANNEL_COUNT: NonZero<u16> = nz!(2);
 pub const BUFFER_SIZE: usize = // echo canceller and livekit want 10ms of audio
     (SAMPLE_RATE.get() as usize / 100) * CHANNEL_COUNT.get() as usize;
 
-pub const LEGACY_SAMPLE_RATE: NonZero<u32> = nz!(48000);
-pub const LEGACY_CHANNEL_COUNT: NonZero<u16> = nz!(2);
-
 pub const REPLAY_DURATION: Duration = Duration::from_secs(30);
 
 pub fn init(cx: &mut App) {
@@ -108,16 +106,11 @@ impl Global for Audio {}
 
 impl Audio {
     fn ensure_output_exists(&mut self) -> Result<&Mixer> {
-        #[cfg(debug_assertions)]
-        log::warn!(
-            "Audio does not sound correct without optimizations. Use a release build to debug audio issues"
-        );
-
         if self.output_handle.is_none() {
-            let output_handle = OutputStreamBuilder::open_default_stream()
-                .context("Could not open default output stream")?;
-            info!("Output stream: {:?}", output_handle);
-            self.output_handle = Some(output_handle);
+            self.output_handle = Some(
+                OutputStreamBuilder::open_default_stream()
+                    .context("Could not open default output stream")?,
+            );
             if let Some(output_handle) = &self.output_handle {
                 let (mixer, source) = rodio::mixer::mixer(CHANNEL_COUNT, SAMPLE_RATE);
                 // or the mixer will end immediately as its empty.
@@ -167,20 +160,13 @@ impl Audio {
         let stream = rodio::microphone::MicrophoneBuilder::new()
             .default_device()?
             .default_config()?
-            .prefer_sample_rates([
-                SAMPLE_RATE, // sample rates trivially resamplable to `SAMPLE_RATE`
-                SAMPLE_RATE.saturating_mul(nz!(2)),
-                SAMPLE_RATE.saturating_mul(nz!(3)),
-                SAMPLE_RATE.saturating_mul(nz!(4)),
-            ])
-            .prefer_channel_counts([nz!(1), nz!(2), nz!(3), nz!(4)])
+            .prefer_sample_rates([SAMPLE_RATE, SAMPLE_RATE.saturating_mul(nz!(2))])
+            // .prefer_channel_counts([nz!(1), nz!(2)])
             .prefer_buffer_sizes(512..)
             .open_stream()?;
         info!("Opened microphone: {:?}", stream.config());
 
-        let stream = stream
-            .possibly_disconnected_channels_to_mono()
-            .constant_samplerate(SAMPLE_RATE)
+        let (replay, stream) = UniformSourceIterator::new(stream, CHANNEL_COUNT, SAMPLE_RATE)
             .limit(LimitSettings::live_performance())
             .process_buffer::<BUFFER_SIZE, _>(move |buffer| {
                 let mut int_buffer: [i16; _] = buffer.map(|s| s.to_sample());
@@ -201,27 +187,15 @@ impl Audio {
                     }
                 }
             })
-            .denoise()
-            .context("Could not set up denoiser")?
-            .automatic_gain_control(0.90, 1.0, 0.0, 5.0)
+            .automatic_gain_control(1.0, 4.0, 0.0, 5.0)
             .periodic_access(Duration::from_millis(100), move |agc_source| {
-                agc_source
-                    .set_enabled(LIVE_SETTINGS.auto_microphone_volume.load(Ordering::Relaxed));
-                let denoise = agc_source.inner_mut();
-                denoise.set_enabled(LIVE_SETTINGS.denoise.load(Ordering::Relaxed));
-            });
-
-        let stream = if voip_parts.legacy_audio_compatible {
-            stream.constant_params(LEGACY_CHANNEL_COUNT, LEGACY_SAMPLE_RATE)
-        } else {
-            stream.constant_params(CHANNEL_COUNT, SAMPLE_RATE)
-        };
-
-        let (replay, stream) = stream.replayable(REPLAY_DURATION)?;
+                agc_source.set_enabled(LIVE_SETTINGS.control_input_volume.load(Ordering::Relaxed));
+            })
+            .replayable(REPLAY_DURATION)?;
+
         voip_parts
             .replays
             .add_voip_stream("local microphone".to_string(), replay);
-
         Ok(stream)
     }
 
@@ -232,10 +206,9 @@ impl Audio {
         cx: &mut App,
     ) -> anyhow::Result<()> {
         let (replay_source, source) = source
-            .constant_params(CHANNEL_COUNT, SAMPLE_RATE)
-            .automatic_gain_control(0.90, 1.0, 0.0, 5.0)
+            .automatic_gain_control(1.0, 4.0, 0.0, 5.0)
             .periodic_access(Duration::from_millis(100), move |agc_source| {
-                agc_source.set_enabled(LIVE_SETTINGS.auto_speaker_volume.load(Ordering::Relaxed));
+                agc_source.set_enabled(LIVE_SETTINGS.control_input_volume.load(Ordering::Relaxed));
             })
             .replayable(REPLAY_DURATION)
             .expect("REPLAY_DURATION is longer than 100ms");
@@ -296,7 +269,6 @@ impl Audio {
 pub struct VoipParts {
     echo_canceller: Arc<Mutex<apm::AudioProcessingModule>>,
     replays: replays::Replays,
-    legacy_audio_compatible: bool,
 }
 
 #[cfg(not(any(all(target_os = "windows", target_env = "gnu"), target_os = "freebsd")))]
@@ -305,12 +277,8 @@ impl VoipParts {
         let (apm, replays) = cx.try_read_default_global::<Audio, _>(|audio, _| {
             (Arc::clone(&audio.echo_canceller), audio.replays.clone())
         })?;
-        let legacy_audio_compatible =
-            AudioSettings::try_read_global(cx, |settings| settings.legacy_audio_compatible)
-                .unwrap_or(true);
 
         Ok(Self {
-            legacy_audio_compatible,
             echo_canceller: apm,
             replays,
         })
diff --git a/crates/audio/src/audio_settings.rs b/crates/audio/src/audio_settings.rs
index cba7d45c31..2c9db4989e 100644
--- a/crates/audio/src/audio_settings.rs
+++ b/crates/audio/src/audio_settings.rs
@@ -6,38 +6,18 @@ use settings::{Settings, SettingsStore};
 #[derive(Clone, Debug)]
 pub struct AudioSettings {
     /// Opt into the new audio system.
-    ///
-    /// You need to rejoin a call for this setting to apply
     pub rodio_audio: bool, // default is false
     /// Requires 'rodio_audio: true'
     ///
-    /// Automatically increase or decrease you microphone's volume. This affects how
-    /// loud you sound to others.
-    ///
-    /// Recommended: off (default)
-    /// Microphones are too quite in zed, until everyone is on experimental
-    /// audio and has auto speaker volume on this will make you very loud
-    /// compared to other speakers.
-    pub auto_microphone_volume: bool,
-    /// Requires 'rodio_audio: true'
-    ///
-    /// Automatically increate or decrease the volume of other call members.
-    /// This only affects how things sound for you.
-    pub auto_speaker_volume: bool,
-    /// Requires 'rodio_audio: true'
-    ///
-    /// Remove background noises. Works great for typing, cars, dogs, AC. Does
-    /// not work well on music.
-    pub denoise: bool,
+    /// Use the new audio systems automatic gain control for your microphone.
+    /// This affects how loud you sound to others.
+    pub control_input_volume: bool,
     /// Requires 'rodio_audio: true'
     ///
-    /// Use audio parameters compatible with the previous versions of
-    /// experimental audio and non-experimental audio. When this is false you
-    /// will sound strange to anyone not on the latest experimental audio. In
-    /// the future we will migrate by setting this to false
-    ///
-    /// You need to rejoin a call for this setting to apply
-    pub legacy_audio_compatible: bool,
+    /// Use the new audio systems automatic gain control on everyone in the
+    /// call. This makes call members who are too quite louder and those who are
+    /// too loud quieter. This only affects how things sound for you.
+    pub control_output_volume: bool,
 }
 
 /// Configuration of audio in Zed
@@ -45,66 +25,46 @@ impl Settings for AudioSettings {
     fn from_settings(content: &settings::SettingsContent, _cx: &mut App) -> Self {
         let audio = &content.audio.as_ref().unwrap();
         AudioSettings {
+            control_input_volume: audio.control_input_volume.unwrap(),
+            control_output_volume: audio.control_output_volume.unwrap(),
             rodio_audio: audio.rodio_audio.unwrap(),
-            auto_microphone_volume: audio.auto_microphone_volume.unwrap(),
-            auto_speaker_volume: audio.auto_speaker_volume.unwrap(),
-            denoise: audio.denoise.unwrap(),
-            legacy_audio_compatible: audio.legacy_audio_compatible.unwrap(),
         }
     }
+
+    fn import_from_vscode(
+        _vscode: &settings::VsCodeSettings,
+        _current: &mut settings::SettingsContent,
+    ) {
+    }
 }
 
 /// See docs on [LIVE_SETTINGS]
 pub(crate) struct LiveSettings {
-    pub(crate) auto_microphone_volume: AtomicBool,
-    pub(crate) auto_speaker_volume: AtomicBool,
-    pub(crate) denoise: AtomicBool,
+    pub(crate) control_input_volume: AtomicBool,
+    pub(crate) control_output_volume: AtomicBool,
 }
 
 impl LiveSettings {
     pub(crate) fn initialize(&self, cx: &mut App) {
         cx.observe_global::<SettingsStore>(move |cx| {
-            LIVE_SETTINGS.auto_microphone_volume.store(
-                AudioSettings::get_global(cx).auto_microphone_volume,
+            LIVE_SETTINGS.control_input_volume.store(
+                AudioSettings::get_global(cx).control_input_volume,
                 Ordering::Relaxed,
             );
-            LIVE_SETTINGS.auto_speaker_volume.store(
-                AudioSettings::get_global(cx).auto_speaker_volume,
+            LIVE_SETTINGS.control_output_volume.store(
+                AudioSettings::get_global(cx).control_output_volume,
                 Ordering::Relaxed,
             );
-
-            let denoise_enabled = AudioSettings::get_global(cx).denoise;
-            #[cfg(debug_assertions)]
-            {
-                static DENOISE_WARNING_SEND: AtomicBool = AtomicBool::new(false);
-                if denoise_enabled && !DENOISE_WARNING_SEND.load(Ordering::Relaxed) {
-                    DENOISE_WARNING_SEND.store(true, Ordering::Relaxed);
-                    log::warn!("Denoise does not work on debug builds, not enabling")
-                }
-            }
-            #[cfg(not(debug_assertions))]
-            LIVE_SETTINGS
-                .denoise
-                .store(denoise_enabled, Ordering::Relaxed);
         })
         .detach();
 
         let init_settings = AudioSettings::get_global(cx);
         LIVE_SETTINGS
-            .auto_microphone_volume
-            .store(init_settings.auto_microphone_volume, Ordering::Relaxed);
-        LIVE_SETTINGS
-            .auto_speaker_volume
-            .store(init_settings.auto_speaker_volume, Ordering::Relaxed);
-        let denoise_enabled = AudioSettings::get_global(cx).denoise;
-        #[cfg(debug_assertions)]
-        if denoise_enabled {
-            log::warn!("Denoise does not work on debug builds, not enabling")
-        }
-        #[cfg(not(debug_assertions))]
+            .control_input_volume
+            .store(init_settings.control_input_volume, Ordering::Relaxed);
         LIVE_SETTINGS
-            .denoise
-            .store(denoise_enabled, Ordering::Relaxed);
+            .control_output_volume
+            .store(init_settings.control_output_volume, Ordering::Relaxed);
     }
 }
 
@@ -113,7 +73,6 @@ impl LiveSettings {
 /// real time and must each run in a dedicated OS thread, therefore we can not
 /// use the background executor.
 pub(crate) static LIVE_SETTINGS: LiveSettings = LiveSettings {
-    auto_microphone_volume: AtomicBool::new(true),
-    auto_speaker_volume: AtomicBool::new(true),
-    denoise: AtomicBool::new(true),
+    control_input_volume: AtomicBool::new(true),
+    control_output_volume: AtomicBool::new(true),
 };
diff --git a/crates/audio/src/rodio_ext.rs b/crates/audio/src/rodio_ext.rs
index af4cc89252..e80b00e15a 100644
--- a/crates/audio/src/rodio_ext.rs
+++ b/crates/audio/src/rodio_ext.rs
@@ -1,5 +1,4 @@
 use std::{
-    num::NonZero,
     sync::{
         Arc, Mutex,
         atomic::{AtomicBool, Ordering},
@@ -8,22 +7,12 @@ use std::{
 };
 
 use crossbeam::queue::ArrayQueue;
-use denoise::{Denoiser, DenoiserError};
-use log::warn;
-use rodio::{
-    ChannelCount, Sample, SampleRate, Source, conversions::SampleRateConverter, nz,
-    source::UniformSourceIterator,
-};
-
-const MAX_CHANNELS: usize = 8;
+use rodio::{ChannelCount, Sample, SampleRate, Source};
 
 #[derive(Debug, thiserror::Error)]
 #[error("Replay duration is too short must be >= 100ms")]
 pub struct ReplayDurationTooShort;
 
-// These all require constant sources (so the span is infinitely long)
-// this is not guaranteed by rodio however we know it to be true in all our
-// applications. Rodio desperately needs a constant source concept.
 pub trait RodioExt: Source + Sized {
     fn process_buffer<const N: usize, F>(self, callback: F) -> ProcessBuffer<N, Self, F>
     where
@@ -36,14 +25,6 @@ pub trait RodioExt: Source + Sized {
         duration: Duration,
     ) -> Result<(Replay, Replayable<Self>), ReplayDurationTooShort>;
     fn take_samples(self, n: usize) -> TakeSamples<Self>;
-    fn denoise(self) -> Result<Denoiser<Self>, DenoiserError>;
-    fn constant_params(
-        self,
-        channel_count: ChannelCount,
-        sample_rate: SampleRate,
-    ) -> UniformSourceIterator<Self>;
-    fn constant_samplerate(self, sample_rate: SampleRate) -> ConstantSampleRate<Self>;
-    fn possibly_disconnected_channels_to_mono(self) -> ToMono<Self>;
 }
 
 impl<S: Source> RodioExt for S {
@@ -120,149 +101,8 @@ impl<S: Source> RodioExt for S {
             left_to_take: n,
         }
     }
-    fn denoise(self) -> Result<Denoiser<Self>, DenoiserError> {
-        let res = Denoiser::try_new(self);
-        res
-    }
-    fn constant_params(
-        self,
-        channel_count: ChannelCount,
-        sample_rate: SampleRate,
-    ) -> UniformSourceIterator<Self> {
-        UniformSourceIterator::new(self, channel_count, sample_rate)
-    }
-    fn constant_samplerate(self, sample_rate: SampleRate) -> ConstantSampleRate<Self> {
-        ConstantSampleRate::new(self, sample_rate)
-    }
-    fn possibly_disconnected_channels_to_mono(self) -> ToMono<Self> {
-        ToMono::new(self)
-    }
-}
-
-pub struct ConstantSampleRate<S: Source> {
-    inner: SampleRateConverter<S>,
-    channels: ChannelCount,
-    sample_rate: SampleRate,
-}
-
-impl<S: Source> ConstantSampleRate<S> {
-    fn new(source: S, target_rate: SampleRate) -> Self {
-        let input_sample_rate = source.sample_rate();
-        let channels = source.channels();
-        let inner = SampleRateConverter::new(source, input_sample_rate, target_rate, channels);
-        Self {
-            inner,
-            channels,
-            sample_rate: target_rate,
-        }
-    }
-}
-
-impl<S: Source> Iterator for ConstantSampleRate<S> {
-    type Item = rodio::Sample;
-
-    fn next(&mut self) -> Option<Self::Item> {
-        self.inner.next()
-    }
-
-    fn size_hint(&self) -> (usize, Option<usize>) {
-        self.inner.size_hint()
-    }
-}
-
-impl<S: Source> Source for ConstantSampleRate<S> {
-    fn current_span_len(&self) -> Option<usize> {
-        None
-    }
-
-    fn channels(&self) -> ChannelCount {
-        self.channels
-    }
-
-    fn sample_rate(&self) -> SampleRate {
-        self.sample_rate
-    }
-
-    fn total_duration(&self) -> Option<Duration> {
-        None // not supported (not used by us)
-    }
-}
-
-const TYPICAL_NOISE_FLOOR: Sample = 1e-3;
-
-/// constant source, only works on a single span
-pub struct ToMono<S> {
-    inner: S,
-    input_channel_count: ChannelCount,
-    connected_channels: ChannelCount,
-    /// running mean of second channel 'volume'
-    means: [f32; MAX_CHANNELS],
-}
-impl<S: Source> ToMono<S> {
-    fn new(input: S) -> Self {
-        let channels = input
-            .channels()
-            .min(const { NonZero::<u16>::new(MAX_CHANNELS as u16).unwrap() });
-        if channels < input.channels() {
-            warn!("Ignoring input channels {}..", channels.get());
-        }
-
-        Self {
-            connected_channels: channels,
-            input_channel_count: channels,
-            inner: input,
-            means: [TYPICAL_NOISE_FLOOR; MAX_CHANNELS],
-        }
-    }
-}
-
-impl<S: Source> Source for ToMono<S> {
-    fn current_span_len(&self) -> Option<usize> {
-        None
-    }
-
-    fn channels(&self) -> ChannelCount {
-        rodio::nz!(1)
-    }
-
-    fn sample_rate(&self) -> SampleRate {
-        self.inner.sample_rate()
-    }
-
-    fn total_duration(&self) -> Option<Duration> {
-        self.inner.total_duration()
-    }
-}
-
-fn update_mean(mean: &mut f32, sample: Sample) {
-    const HISTORY: f32 = 500.0;
-    *mean *= (HISTORY - 1.0) / HISTORY;
-    *mean += sample.abs() / HISTORY;
-}
-
-impl<S: Source> Iterator for ToMono<S> {
-    type Item = Sample;
-
-    fn next(&mut self) -> Option<Self::Item> {
-        let mut mono_sample = 0f32;
-        let mut active_channels = 0;
-        for channel in 0..self.input_channel_count.get() as usize {
-            let sample = self.inner.next()?;
-            mono_sample += sample;
-
-            update_mean(&mut self.means[channel], sample);
-            if self.means[channel] > TYPICAL_NOISE_FLOOR / 10.0 {
-                active_channels += 1;
-            }
-        }
-        mono_sample /= self.connected_channels.get() as f32;
-        self.connected_channels = NonZero::new(active_channels).unwrap_or(nz!(1));
-
-        Some(mono_sample)
-    }
 }
 
-/// constant source, only works on a single span
 pub struct TakeSamples<S> {
     inner: S,
     left_to_take: usize,
@@ -307,7 +147,6 @@ impl<S: Source> Source for TakeSamples<S> {
     }
 }
 
-/// constant source, only works on a single span
 #[derive(Debug)]
 struct ReplayQueue {
     inner: ArrayQueue<Vec<Sample>>,
@@ -354,7 +193,6 @@ impl ReplayQueue {
     }
 }
 
-/// constant source, only works on a single span
 pub struct ProcessBuffer<const N: usize, S, F>
 where
     S: Source + Sized,
@@ -422,7 +260,6 @@ where
     }
 }
 
-/// constant source, only works on a single span
 pub struct InspectBuffer<const N: usize, S, F>
 where
     S: Source + Sized,
@@ -487,7 +324,6 @@ where
     }
 }
 
-/// constant source, only works on a single span
 #[derive(Debug)]
 pub struct Replayable<S: Source> {
     inner: S,
@@ -539,7 +375,6 @@ impl<S: Source> Source for Replayable<S> {
     }
 }
 
-/// constant source, only works on a single span
 #[derive(Debug)]
 pub struct Replay {
     rx: Arc<ReplayQueue>,
diff --git a/crates/auto_update/src/auto_update.rs b/crates/auto_update/src/auto_update.rs
index 31121aa6f6..6c46c145c1 100644
--- a/crates/auto_update/src/auto_update.rs
+++ b/crates/auto_update/src/auto_update.rs
@@ -3,8 +3,7 @@ use client::{Client, TelemetrySettings};
 use db::RELEASE_CHANNEL;
 use db::kvp::KEY_VALUE_STORE;
 use gpui::{
-    App, AppContext as _, AsyncApp, BackgroundExecutor, Context, Entity, Global, SemanticVersion,
-    Task, Window, actions,
+    App, AppContext as _, AsyncApp, Context, Entity, Global, SemanticVersion, Task, Window, actions,
 };
 use http_client::{AsyncBody, HttpClient, HttpClientWithUrl};
 use paths::remote_servers_dir;
@@ -13,7 +12,6 @@ use serde::{Deserialize, Serialize};
 use settings::{Settings, SettingsStore};
 use smol::{fs, io::AsyncReadExt};
 use smol::{fs::File, process::Command};
-use std::mem;
 use std::{
     env::{
         self,
@@ -86,37 +84,31 @@ pub struct JsonRelease {
     pub url: String,
 }
 
-struct MacOsUnmounter<'a> {
+struct MacOsUnmounter {
     mount_path: PathBuf,
-    background_executor: &'a BackgroundExecutor,
 }
 
-impl Drop for MacOsUnmounter<'_> {
+impl Drop for MacOsUnmounter {
     fn drop(&mut self) {
-        let mount_path = mem::take(&mut self.mount_path);
-        self.background_executor
-            .spawn(async move {
-                let unmount_output = Command::new("hdiutil")
-                    .args(["detach", "-force"])
-                    .arg(&mount_path)
-                    .output()
-                    .await;
-                match unmount_output {
-                    Ok(output) if output.status.success() => {
-                        log::info!("Successfully unmounted the disk image");
-                    }
-                    Ok(output) => {
-                        log::error!(
-                            "Failed to unmount disk image: {:?}",
-                            String::from_utf8_lossy(&output.stderr)
-                        );
-                    }
-                    Err(error) => {
-                        log::error!("Error while trying to unmount disk image: {:?}", error);
-                    }
-                }
-            })
-            .detach();
+        let unmount_output = std::process::Command::new("hdiutil")
+            .args(["detach", "-force"])
+            .arg(&self.mount_path)
+            .output();
+
+        match unmount_output {
+            Ok(output) if output.status.success() => {
+                log::info!("Successfully unmounted the disk image");
+            }
+            Ok(output) => {
+                log::error!(
+                    "Failed to unmount disk image: {:?}",
+                    String::from_utf8_lossy(&output.stderr)
+                );
+            }
+            Err(error) => {
+                log::error!("Error while trying to unmount disk image: {:?}", error);
+            }
+        }
     }
 }
 
@@ -904,7 +896,6 @@ async fn install_release_macos(
     // Create an MacOsUnmounter that will be dropped (and thus unmount the disk) when this function exits
     let _unmounter = MacOsUnmounter {
         mount_path: mount_path.clone(),
-        background_executor: cx.background_executor(),
     };
 
     let output = Command::new("rsync")
diff --git a/crates/client/src/telemetry.rs b/crates/client/src/telemetry.rs
index 35c8d0d7d0..5d43b4543c 100644
--- a/crates/client/src/telemetry.rs
+++ b/crates/client/src/telemetry.rs
@@ -858,7 +858,7 @@ mod tests {
             .enumerate()
             .filter_map(|(i, path)| {
                 Some((
-                    Arc::from(RelPath::unix(path).ok()?),
+                    Arc::from(RelPath::new(path).ok()?),
                     ProjectEntryId::from_proto(i as u64 + 1),
                     PathChange::Added,
                 ))
diff --git a/crates/cloud_llm_client/Cargo.toml b/crates/cloud_llm_client/Cargo.toml
index 1ef978f0a7..700893dd40 100644
--- a/crates/cloud_llm_client/Cargo.toml
+++ b/crates/cloud_llm_client/Cargo.toml
@@ -5,9 +5,6 @@ publish.workspace = true
 edition.workspace = true
 license = "Apache-2.0"
 
-[features]
-test-support = []
-
 [lints]
 workspace = true
 
diff --git a/crates/cloud_llm_client/src/cloud_llm_client.rs b/crates/cloud_llm_client/src/cloud_llm_client.rs
index 4ae72ce0a4..e0cc42af76 100644
--- a/crates/cloud_llm_client/src/cloud_llm_client.rs
+++ b/crates/cloud_llm_client/src/cloud_llm_client.rs
@@ -55,9 +55,6 @@ pub const CLIENT_SUPPORTS_STATUS_MESSAGES_HEADER_NAME: &str =
 pub const SERVER_SUPPORTS_STATUS_MESSAGES_HEADER_NAME: &str =
     "x-zed-server-supports-status-messages";
 
-/// The name of the header used by the client to indicate that it supports receiving xAI models.
-pub const CLIENT_SUPPORTS_X_AI_HEADER_NAME: &str = "x-zed-client-supports-x-ai";
-
 #[derive(Debug, PartialEq, Clone, Copy, Serialize, Deserialize)]
 #[serde(rename_all = "snake_case")]
 pub enum UsageLimit {
@@ -147,7 +144,6 @@ pub enum LanguageModelProvider {
     Anthropic,
     OpenAi,
     Google,
-    XAi,
 }
 
 #[derive(Debug, Clone, Serialize, Deserialize)]
diff --git a/crates/cloud_llm_client/src/predict_edits_v3.rs b/crates/cloud_llm_client/src/predict_edits_v3.rs
index 03bd5359cd..9c5123fdb8 100644
--- a/crates/cloud_llm_client/src/predict_edits_v3.rs
+++ b/crates/cloud_llm_client/src/predict_edits_v3.rs
@@ -5,7 +5,6 @@ use std::{
     path::{Path, PathBuf},
     sync::Arc,
 };
-use strum::EnumIter;
 use uuid::Uuid;
 
 use crate::PredictEditsGitInfo;
@@ -43,33 +42,14 @@ pub struct PredictEditsRequest {
     pub prompt_format: PromptFormat,
 }
 
-#[derive(Default, Debug, Clone, Copy, Serialize, Deserialize, PartialEq, EnumIter)]
+#[derive(Default, Debug, Clone, Copy, Serialize, Deserialize, PartialEq)]
 pub enum PromptFormat {
     #[default]
     MarkedExcerpt,
     LabeledSections,
-    /// Prompt format intended for use via zeta_cli
-    OnlySnippets,
-}
-
-impl PromptFormat {
-    pub fn iter() -> impl Iterator<Item = Self> {
-        <Self as strum::IntoEnumIterator>::iter()
-    }
-}
-
-impl std::fmt::Display for PromptFormat {
-    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
-        match self {
-            PromptFormat::MarkedExcerpt => write!(f, "Marked Excerpt"),
-            PromptFormat::LabeledSections => write!(f, "Labeled Sections"),
-            PromptFormat::OnlySnippets => write!(f, "Only Snippets"),
-        }
-    }
 }
 
 #[derive(Debug, Clone, Serialize, Deserialize)]
-#[cfg_attr(any(test, feature = "test-support"), derive(PartialEq))]
 #[serde(tag = "event")]
 pub enum Event {
     BufferChange {
diff --git a/crates/cloud_zeta2_prompt/src/cloud_zeta2_prompt.rs b/crates/cloud_zeta2_prompt/src/cloud_zeta2_prompt.rs
index 9c1b64013a..cc5c8cb8b2 100644
--- a/crates/cloud_zeta2_prompt/src/cloud_zeta2_prompt.rs
+++ b/crates/cloud_zeta2_prompt/src/cloud_zeta2_prompt.rs
@@ -54,8 +54,6 @@ pub fn system_prompt(format: PromptFormat) -> &'static str {
     match format {
         PromptFormat::MarkedExcerpt => MARKED_EXCERPT_SYSTEM_PROMPT,
         PromptFormat::LabeledSections => LABELED_SECTIONS_SYSTEM_PROMPT,
-        // only intended for use via zeta_cli
-        PromptFormat::OnlySnippets => "",
     }
 }
 
@@ -345,7 +343,6 @@ impl<'a> PlannedPrompt<'a> {
                 self.request.excerpt_range.start + self.request.cursor_offset,
                 CURSOR_MARKER,
             )],
-            PromptFormat::OnlySnippets => vec![],
         };
 
         let mut prompt = String::new();
@@ -435,13 +432,12 @@ impl<'a> PlannedPrompt<'a> {
             }
 
             writeln!(output, "```{}", file_path.display()).ok();
-            let mut skipped_last_snippet = false;
             for (snippet, range) in disjoint_snippets {
                 let section_index = section_ranges.len();
 
                 match self.request.prompt_format {
-                    PromptFormat::MarkedExcerpt | PromptFormat::OnlySnippets => {
-                        if range.start > 0 && !skipped_last_snippet {
+                    PromptFormat::MarkedExcerpt => {
+                        if range.start > 0 {
                             output.push_str("…\n");
                         }
                     }
@@ -458,38 +454,25 @@ impl<'a> PlannedPrompt<'a> {
                 }
 
                 if is_excerpt_file {
-                    if self.request.prompt_format == PromptFormat::OnlySnippets {
-                        if range.start >= self.request.excerpt_range.start
-                            && range.end <= self.request.excerpt_range.end
-                        {
-                            skipped_last_snippet = true;
-                        } else {
-                            skipped_last_snippet = false;
-                            output.push_str(snippet.text);
+                    excerpt_index = Some(section_index);
+                    let mut last_offset = range.start;
+                    let mut i = 0;
+                    while i < excerpt_file_insertions.len() {
+                        let (offset, insertion) = &excerpt_file_insertions[i];
+                        let found = *offset >= range.start && *offset <= range.end;
+                        if found {
+                            output.push_str(
+                                &snippet.text[last_offset - range.start..offset - range.start],
+                            );
+                            output.push_str(insertion);
+                            last_offset = *offset;
+                            excerpt_file_insertions.remove(i);
+                            continue;
                         }
-                    } else {
-                        let mut last_offset = range.start;
-                        let mut i = 0;
-                        while i < excerpt_file_insertions.len() {
-                            let (offset, insertion) = &excerpt_file_insertions[i];
-                            let found = *offset >= range.start && *offset <= range.end;
-                            if found {
-                                excerpt_index = Some(section_index);
-                                output.push_str(
-                                    &snippet.text[last_offset - range.start..offset - range.start],
-                                );
-                                output.push_str(insertion);
-                                last_offset = *offset;
-                                excerpt_file_insertions.remove(i);
-                                continue;
-                            }
-                            i += 1;
-                        }
-                        skipped_last_snippet = false;
-                        output.push_str(&snippet.text[last_offset - range.start..]);
+                        i += 1;
                     }
+                    output.push_str(&snippet.text[last_offset - range.start..]);
                 } else {
-                    skipped_last_snippet = false;
                     output.push_str(snippet.text);
                 }
 
@@ -500,11 +483,7 @@ impl<'a> PlannedPrompt<'a> {
         }
 
         Ok(SectionLabels {
-            // TODO: Clean this up
-            excerpt_index: match self.request.prompt_format {
-                PromptFormat::OnlySnippets => 0,
-                _ => excerpt_index.context("bug: no snippet found for excerpt")?,
-            },
+            excerpt_index: excerpt_index.context("bug: no snippet found for excerpt")?,
             section_ranges,
         })
     }
diff --git a/crates/collab/src/db/ids.rs b/crates/collab/src/db/ids.rs
index 8f116cfd63..6a536b2b2a 100644
--- a/crates/collab/src/db/ids.rs
+++ b/crates/collab/src/db/ids.rs
@@ -62,8 +62,8 @@ macro_rules! id_type {
         }
 
         impl sea_orm::sea_query::Nullable for $name {
-            fn null() -> Value {
-                Value::Int(None)
+            fn null() -> sea_orm::sea_query::Value {
+                sea_orm::sea_query::Value::Int(None)
             }
         }
     };
diff --git a/crates/collab/src/tests/editor_tests.rs b/crates/collab/src/tests/editor_tests.rs
index 5ead2cd1d1..947af01224 100644
--- a/crates/collab/src/tests/editor_tests.rs
+++ b/crates/collab/src/tests/editor_tests.rs
@@ -1408,12 +1408,12 @@ async fn test_share_project(
     project_b.read_with(cx_b, |project, cx| {
         let worktree = project.worktrees(cx).next().unwrap().read(cx);
         assert_eq!(
-            worktree.paths().collect::<Vec<_>>(),
+            worktree.paths().map(AsRef::as_ref).collect::<Vec<_>>(),
             [
-                rel_path(".gitignore"),
-                rel_path("a.txt"),
-                rel_path("b.txt"),
-                rel_path("ignored-dir"),
+                Path::new(".gitignore"),
+                Path::new("a.txt"),
+                Path::new("b.txt"),
+                Path::new("ignored-dir"),
             ]
         );
     });
@@ -1433,14 +1433,14 @@ async fn test_share_project(
     project_b.read_with(cx_b, |project, cx| {
         let worktree = project.worktrees(cx).next().unwrap().read(cx);
         assert_eq!(
-            worktree.paths().collect::<Vec<_>>(),
+            worktree.paths().map(AsRef::as_ref).collect::<Vec<_>>(),
             [
-                rel_path(".gitignore"),
-                rel_path("a.txt"),
-                rel_path("b.txt"),
-                rel_path("ignored-dir"),
-                rel_path("ignored-dir/c.txt"),
-                rel_path("ignored-dir/d.txt"),
+                Path::new(".gitignore"),
+                Path::new("a.txt"),
+                Path::new("b.txt"),
+                Path::new("ignored-dir"),
+                Path::new("ignored-dir/c.txt"),
+                Path::new("ignored-dir/d.txt"),
             ]
         );
     });
diff --git a/crates/collab/src/tests/following_tests.rs b/crates/collab/src/tests/following_tests.rs
index 6f4a819f44..1bf0a28e34 100644
--- a/crates/collab/src/tests/following_tests.rs
+++ b/crates/collab/src/tests/following_tests.rs
@@ -632,16 +632,13 @@ async fn test_following_tab_order(
     let pane_paths = |pane: &Entity<workspace::Pane>, cx: &mut VisualTestContext| {
         pane.update(cx, |pane, cx| {
             pane.items()
-                .map(|item| item.project_path(cx).unwrap().path)
+                .map(|item| item.project_path(cx).unwrap().path.as_str().to_owned())
                 .collect::<Vec<_>>()
         })
     };
 
     //Verify that the tabs opened in the order we expect
-    assert_eq!(
-        &pane_paths(&pane_a, cx_a),
-        &[rel_path("1.txt").into(), rel_path("3.txt").into()]
-    );
+    assert_eq!(&pane_paths(&pane_a, cx_a), &["1.txt", "3.txt"]);
 
     //Follow client B as client A
     workspace_a.update_in(cx_a, |workspace, window, cx| {
@@ -659,14 +656,7 @@ async fn test_following_tab_order(
     executor.run_until_parked();
 
     // Verify that newly opened followed file is at the end
-    assert_eq!(
-        &pane_paths(&pane_a, cx_a),
-        &[
-            rel_path("1.txt").into(),
-            rel_path("3.txt").into(),
-            rel_path("2.txt").into()
-        ]
-    );
+    assert_eq!(&pane_paths(&pane_a, cx_a), &["1.txt", "3.txt", "2.txt"]);
 
     //Open just 1 on client B
     workspace_b
@@ -675,21 +665,11 @@ async fn test_following_tab_order(
         })
         .await
         .unwrap();
-    assert_eq!(
-        &pane_paths(&pane_b, cx_b),
-        &[rel_path("2.txt").into(), rel_path("1.txt").into()]
-    );
+    assert_eq!(&pane_paths(&pane_b, cx_b), &["2.txt", "1.txt"]);
     executor.run_until_parked();
 
     // Verify that following into 1 did not reorder
-    assert_eq!(
-        &pane_paths(&pane_a, cx_a),
-        &[
-            rel_path("1.txt").into(),
-            rel_path("3.txt").into(),
-            rel_path("2.txt").into()
-        ]
-    );
+    assert_eq!(&pane_paths(&pane_a, cx_a), &["1.txt", "3.txt", "2.txt"]);
 }
 
 #[gpui::test(iterations = 10)]
diff --git a/crates/collab/src/tests/integration_tests.rs b/crates/collab/src/tests/integration_tests.rs
index 98acecb108..93c3665c11 100644
--- a/crates/collab/src/tests/integration_tests.rs
+++ b/crates/collab/src/tests/integration_tests.rs
@@ -1699,8 +1699,13 @@ async fn test_project_reconnect(
         );
         assert!(worktree_a3.read(cx).has_update_observer());
         assert_eq!(
-            worktree_a3.read(cx).snapshot().paths().collect::<Vec<_>>(),
-            vec![rel_path("w.txt"), rel_path("x.txt"), rel_path("y.txt")]
+            worktree_a3
+                .read(cx)
+                .snapshot()
+                .paths()
+                .map(|p| p.as_str())
+                .collect::<Vec<_>>(),
+            vec!["w.txt", "x.txt", "y.txt"]
         );
     });
 
@@ -1732,8 +1737,9 @@ async fn test_project_reconnect(
                 .read(cx)
                 .snapshot()
                 .paths()
+                .map(|p| p.as_str())
                 .collect::<Vec<_>>(),
-            vec![rel_path("w.txt"), rel_path("x.txt"), rel_path("y.txt")]
+            vec!["w.txt", "x.txt", "y.txt"]
         );
     });
 
@@ -1827,7 +1833,7 @@ async fn test_project_reconnect(
                 .read(cx)
                 .snapshot()
                 .paths()
-                .map(|p| p.as_unix_str())
+                .map(|p| p.as_str())
                 .collect::<Vec<_>>(),
             vec!["z.txt"]
         );
@@ -2465,39 +2471,39 @@ async fn test_propagate_saves_and_fs_changes(
 
     worktree_a.read_with(cx_a, |tree, _| {
         assert_eq!(
-            tree.paths().collect::<Vec<_>>(),
-            [rel_path("file1.js"), rel_path("file3"), rel_path("file4")]
+            tree.paths().map(|p| p.as_str()).collect::<Vec<_>>(),
+            ["file1.js", "file3", "file4"]
         )
     });
 
     worktree_b.read_with(cx_b, |tree, _| {
         assert_eq!(
-            tree.paths().collect::<Vec<_>>(),
-            [rel_path("file1.js"), rel_path("file3"), rel_path("file4")]
+            tree.paths().map(|p| p.as_str()).collect::<Vec<_>>(),
+            ["file1.js", "file3", "file4"]
         )
     });
 
     worktree_c.read_with(cx_c, |tree, _| {
         assert_eq!(
-            tree.paths().collect::<Vec<_>>(),
-            [rel_path("file1.js"), rel_path("file3"), rel_path("file4")]
+            tree.paths().map(|p| p.as_str()).collect::<Vec<_>>(),
+            ["file1.js", "file3", "file4"]
         )
     });
 
     // Ensure buffer files are updated as well.
 
     buffer_a.read_with(cx_a, |buffer, _| {
-        assert_eq!(buffer.file().unwrap().path().as_ref(), rel_path("file1.js"));
+        assert_eq!(buffer.file().unwrap().path().as_str(), "file1.js");
         assert_eq!(buffer.language().unwrap().name(), "JavaScript".into());
     });
 
     buffer_b.read_with(cx_b, |buffer, _| {
-        assert_eq!(buffer.file().unwrap().path().as_ref(), rel_path("file1.js"));
+        assert_eq!(buffer.file().unwrap().path().as_str(), "file1.js");
         assert_eq!(buffer.language().unwrap().name(), "JavaScript".into());
     });
 
     buffer_c.read_with(cx_c, |buffer, _| {
-        assert_eq!(buffer.file().unwrap().path().as_ref(), rel_path("file1.js"));
+        assert_eq!(buffer.file().unwrap().path().as_str(), "file1.js");
         assert_eq!(buffer.language().unwrap().name(), "JavaScript".into());
     });
 
@@ -3211,15 +3217,15 @@ async fn test_fs_operations(
 
     worktree_a.read_with(cx_a, |worktree, _| {
         assert_eq!(
-            worktree.paths().collect::<Vec<_>>(),
-            [rel_path("a.txt"), rel_path("b.txt"), rel_path("c.txt")]
+            worktree.paths().map(|p| p.as_str()).collect::<Vec<_>>(),
+            ["a.txt", "b.txt", "c.txt"]
         );
     });
 
     worktree_b.read_with(cx_b, |worktree, _| {
         assert_eq!(
-            worktree.paths().collect::<Vec<_>>(),
-            [rel_path("a.txt"), rel_path("b.txt"), rel_path("c.txt")]
+            worktree.paths().map(|p| p.as_str()).collect::<Vec<_>>(),
+            ["a.txt", "b.txt", "c.txt"]
         );
     });
 
@@ -3234,17 +3240,14 @@ async fn test_fs_operations(
 
     worktree_a.read_with(cx_a, |worktree, _| {
         assert_eq!(
-            worktree.paths().collect::<Vec<_>>(),
-            [rel_path("a.txt"), rel_path("b.txt"), rel_path("d.txt")]
+            worktree.paths().map(|p| p.as_str()).collect::<Vec<_>>(),
+            ["a.txt", "b.txt", "d.txt"]
         );
     });
 
     worktree_b.read_with(cx_b, |worktree, _| {
         assert_eq!(
-            worktree
-                .paths()
-                .map(|p| p.as_unix_str())
-                .collect::<Vec<_>>(),
+            worktree.paths().map(|p| p.as_str()).collect::<Vec<_>>(),
             ["a.txt", "b.txt", "d.txt"]
         );
     });
@@ -3260,20 +3263,14 @@ async fn test_fs_operations(
 
     worktree_a.read_with(cx_a, |worktree, _| {
         assert_eq!(
-            worktree
-                .paths()
-                .map(|p| p.as_unix_str())
-                .collect::<Vec<_>>(),
+            worktree.paths().map(|p| p.as_str()).collect::<Vec<_>>(),
             ["DIR", "a.txt", "b.txt", "d.txt"]
         );
     });
 
     worktree_b.read_with(cx_b, |worktree, _| {
         assert_eq!(
-            worktree
-                .paths()
-                .map(|p| p.as_unix_str())
-                .collect::<Vec<_>>(),
+            worktree.paths().map(|p| p.as_str()).collect::<Vec<_>>(),
             ["DIR", "a.txt", "b.txt", "d.txt"]
         );
     });
@@ -3389,20 +3386,14 @@ async fn test_fs_operations(
 
     worktree_a.read_with(cx_a, |worktree, _| {
         assert_eq!(
-            worktree
-                .paths()
-                .map(|p| p.as_unix_str())
-                .collect::<Vec<_>>(),
+            worktree.paths().map(|p| p.as_str()).collect::<Vec<_>>(),
             ["a.txt", "b.txt", "d.txt", "f.txt"]
         );
     });
 
     worktree_b.read_with(cx_b, |worktree, _| {
         assert_eq!(
-            worktree
-                .paths()
-                .map(|p| p.as_unix_str())
-                .collect::<Vec<_>>(),
+            worktree.paths().map(|p| p.as_str()).collect::<Vec<_>>(),
             ["a.txt", "b.txt", "d.txt", "f.txt"]
         );
     });
@@ -3416,20 +3407,14 @@ async fn test_fs_operations(
 
     worktree_a.read_with(cx_a, |worktree, _| {
         assert_eq!(
-            worktree
-                .paths()
-                .map(|p| p.as_unix_str())
-                .collect::<Vec<_>>(),
+            worktree.paths().map(|p| p.as_str()).collect::<Vec<_>>(),
             ["a.txt", "b.txt", "f.txt"]
         );
     });
 
     worktree_b.read_with(cx_b, |worktree, _| {
         assert_eq!(
-            worktree
-                .paths()
-                .map(|p| p.as_unix_str())
-                .collect::<Vec<_>>(),
+            worktree.paths().map(|p| p.as_str()).collect::<Vec<_>>(),
             ["a.txt", "b.txt", "f.txt"]
         );
     });
diff --git a/crates/collab/src/tests/random_project_collaboration_tests.rs b/crates/collab/src/tests/random_project_collaboration_tests.rs
index 7e9b84c057..0cc4a4eade 100644
--- a/crates/collab/src/tests/random_project_collaboration_tests.rs
+++ b/crates/collab/src/tests/random_project_collaboration_tests.rs
@@ -973,7 +973,7 @@ impl RandomizedTest for ProjectCollaborationTest {
                     let dot_git_dir = repo_path.join(".git");
                     let contents = contents
                         .iter()
-                        .map(|(path, contents)| (path.as_unix_str(), contents.clone()))
+                        .map(|(path, contents)| (path.as_str(), contents.clone()))
                         .collect::<Vec<_>>();
                     if client.fs().metadata(&dot_git_dir).await?.is_none() {
                         client.fs().create_dir(&dot_git_dir).await?;
@@ -1031,7 +1031,7 @@ impl RandomizedTest for ProjectCollaborationTest {
 
                     let statuses = statuses
                         .iter()
-                        .map(|(path, val)| (path.as_unix_str(), *val))
+                        .map(|(path, val)| (path.as_str(), *val))
                         .collect::<Vec<_>>();
 
                     if client.fs().metadata(&dot_git_dir).await?.is_none() {
@@ -1463,7 +1463,7 @@ fn generate_git_operation(rng: &mut StdRng, client: &TestClient) -> GitOperation
         paths
             .iter()
             .map(|path| {
-                RelPath::new(path.strip_prefix(repo_path).unwrap(), PathStyle::local())
+                RelPath::from_std_path(path.strip_prefix(repo_path).unwrap(), PathStyle::local())
                     .unwrap()
                     .to_rel_path_buf()
             })
diff --git a/crates/dap_adapters/src/python.rs b/crates/dap_adapters/src/python.rs
index 5a6bd729ce..468edf5664 100644
--- a/crates/dap_adapters/src/python.rs
+++ b/crates/dap_adapters/src/python.rs
@@ -726,7 +726,7 @@ impl DebugAdapter for PythonDebugAdapter {
             .config
             .get("cwd")
             .and_then(|cwd| {
-                RelPath::new(
+                RelPath::from_std_path(
                     cwd.as_str()
                         .map(Path::new)?
                         .strip_prefix(delegate.worktree_root_path())
@@ -740,7 +740,7 @@ impl DebugAdapter for PythonDebugAdapter {
             .toolchain_store()
             .active_toolchain(
                 delegate.worktree_id(),
-                base_path.into_arc(),
+                base_path,
                 language::LanguageName::new(Self::LANGUAGE_NAME),
                 cx,
             )
diff --git a/crates/debugger_ui/src/debugger_panel.rs b/crates/debugger_ui/src/debugger_panel.rs
index 9154047aa5..57f17e577e 100644
--- a/crates/debugger_ui/src/debugger_panel.rs
+++ b/crates/debugger_ui/src/debugger_panel.rs
@@ -1062,10 +1062,10 @@ impl DebugPanel {
                 directory_in_worktree: dir,
                 ..
             } => {
-                let relative_path = if dir.ends_with(RelPath::unix(".vscode").unwrap()) {
-                    dir.join(RelPath::unix("launch.json").unwrap())
+                let relative_path = if dir.ends_with(RelPath::new(".vscode").unwrap()) {
+                    dir.join(RelPath::new("launch.json").unwrap())
                 } else {
-                    dir.join(RelPath::unix("debug.json").unwrap())
+                    dir.join(RelPath::new("debug.json").unwrap())
                 };
                 ProjectPath {
                     worktree_id: id,
@@ -1136,7 +1136,7 @@ impl DebugPanel {
                     }
                     path.pop();
 
-                    path.push(paths::local_debug_file_relative_path().as_std_path());
+                    path.push(paths::local_debug_file_relative_path());
                     let path = path.as_path();
 
                     if !fs.is_file(path).await {
diff --git a/crates/debugger_ui/src/new_process_modal.rs b/crates/debugger_ui/src/new_process_modal.rs
index cb8edb88b5..2ee8d13732 100644
--- a/crates/debugger_ui/src/new_process_modal.rs
+++ b/crates/debugger_ui/src/new_process_modal.rs
@@ -1037,10 +1037,10 @@ impl DebugDelegate {
 
                     match path.components().next_back() {
                         Some(".zed") => {
-                            path.push(RelPath::unix("debug.json").unwrap());
+                            path.push(RelPath::new("debug.json").unwrap());
                         }
                         Some(".vscode") => {
-                            path.push(RelPath::unix("launch.json").unwrap());
+                            path.push(RelPath::new("launch.json").unwrap());
                         }
                         _ => {}
                     }
@@ -1133,7 +1133,7 @@ impl DebugDelegate {
                         id: _,
                         directory_in_worktree: dir,
                         id_base: _,
-                    } => dir.ends_with(RelPath::unix(".zed").unwrap()),
+                    } => dir.ends_with(RelPath::new(".zed").unwrap()),
                     _ => false,
                 });
 
@@ -1154,7 +1154,7 @@ impl DebugDelegate {
                                     id_base: _,
                                 } => {
                                     !(hide_vscode
-                                        && dir.ends_with(RelPath::unix(".vscode").unwrap()))
+                                        && dir.ends_with(RelPath::new(".vscode").unwrap()))
                                 }
                                 _ => true,
                             })
diff --git a/crates/debugger_ui/src/session/running/breakpoint_list.rs b/crates/debugger_ui/src/session/running/breakpoint_list.rs
index cec906e293..f0f86b124a 100644
--- a/crates/debugger_ui/src/session/running/breakpoint_list.rs
+++ b/crates/debugger_ui/src/session/running/breakpoint_list.rs
@@ -682,11 +682,10 @@ impl Render for BreakpointList {
             breakpoints.into_iter().filter_map(move |breakpoint| {
                 debug_assert_eq!(&path, &breakpoint.path);
                 let file_name = breakpoint.path.file_name()?;
-                let breakpoint_path = RelPath::new(&breakpoint.path, path_style).ok();
 
                 let dir = relative_worktree_path
-                    .as_deref()
-                    .or(breakpoint_path.as_deref())?
+                    .clone()
+                    .or_else(|| RelPath::from_std_path(&breakpoint.path, path_style).ok())?
                     .parent()
                     .map(|parent| SharedString::from(parent.display(path_style).to_string()));
                 let name = file_name
diff --git a/crates/denoise/src/engine.rs b/crates/denoise/src/engine.rs
index be0548c689..5196b70b5b 100644
--- a/crates/denoise/src/engine.rs
+++ b/crates/denoise/src/engine.rs
@@ -138,13 +138,13 @@ impl Engine {
 
         const SPECTRUM_INPUT: &str = "input_2";
         const MEMORY_INPUT: &str = "input_3";
-        let spectrum =
+        let memory_input =
             Tensor::from_slice::<_, f32>(&self.in_magnitude, (1, 1, FFT_OUT_SIZE), &Device::Cpu)
                 .expect("the in magnitude has enough elements to fill the Tensor");
 
         let inputs = HashMap::from([
-            (SPECTRUM_INPUT.to_string(), spectrum),
-            (MEMORY_INPUT.to_string(), self.spectral_memory.clone()),
+            (MEMORY_INPUT.to_string(), memory_input),
+            (SPECTRUM_INPUT.to_string(), self.spectral_memory.clone()),
         ]);
         inputs
     }
diff --git a/crates/denoise/src/lib.rs b/crates/denoise/src/lib.rs
index f6cbf0fadf..1422c81a4b 100644
--- a/crates/denoise/src/lib.rs
+++ b/crates/denoise/src/lib.rs
@@ -84,7 +84,7 @@ impl<S: Source> Denoiser<S> {
             .spawn(move || {
                 run_neural_denoiser(denoised_tx, input_rx);
             })
-            .expect("Should be ablet to spawn threads");
+            .unwrap();
 
         Ok(Self {
             inner: source,
diff --git a/crates/editor/src/editor.rs b/crates/editor/src/editor.rs
index b9fe990dca..01655dd12e 100644
--- a/crates/editor/src/editor.rs
+++ b/crates/editor/src/editor.rs
@@ -592,22 +592,11 @@ pub fn make_inlay_hints_style(cx: &mut App) -> HighlightStyle {
         .inlay_hints
         .show_background;
 
-    let mut style = cx.theme().syntax().get("hint");
-
-    if style.color.is_none() {
-        style.color = Some(cx.theme().status().hint);
-    }
-
-    if !show_background {
-        style.background_color = None;
-        return style;
+    HighlightStyle {
+        color: Some(cx.theme().status().hint),
+        background_color: show_background.then(|| cx.theme().status().hint_background),
+        ..HighlightStyle::default()
     }
-
-    if style.background_color.is_none() {
-        style.background_color = Some(cx.theme().status().hint_background);
-    }
-
-    style
 }
 
 pub fn make_suggestion_styles(cx: &mut App) -> EditPredictionStyles {
@@ -3069,7 +3058,7 @@ impl Editor {
             self.buffer.update(cx, |buffer, cx| {
                 buffer.set_active_selections(
                     &selection_anchors,
-                    self.selections.line_mode(),
+                    self.selections.line_mode,
                     self.cursor_shape,
                     cx,
                 )
@@ -6911,7 +6900,7 @@ impl Editor {
         if !EditorSettings::get_global(cx).selection_highlight {
             return None;
         }
-        if self.selections.count() != 1 || self.selections.line_mode() {
+        if self.selections.count() != 1 || self.selections.line_mode {
             return None;
         }
         let selection = self.selections.newest::<Point>(cx);
@@ -12280,7 +12269,7 @@ impl Editor {
             let mut is_first = true;
             for selection in &mut selections {
                 let is_entire_line =
-                    (selection.is_empty() && cut_no_selection_line) || self.selections.line_mode();
+                    (selection.is_empty() && cut_no_selection_line) || self.selections.line_mode;
                 if is_entire_line {
                     selection.start = Point::new(selection.start.row, 0);
                     if !selection.is_empty() && selection.end.column == 0 {
@@ -12380,7 +12369,7 @@ impl Editor {
             for selection in &selections {
                 let mut start = selection.start;
                 let mut end = selection.end;
-                let is_entire_line = selection.is_empty() || self.selections.line_mode();
+                let is_entire_line = selection.is_empty() || self.selections.line_mode;
                 if is_entire_line {
                     start = Point::new(start.row, 0);
                     end = cmp::min(max_point, Point::new(end.row + 1, 0));
@@ -21368,7 +21357,7 @@ impl Editor {
                 if self.leader_id.is_none() {
                     buffer.set_active_selections(
                         &self.selections.disjoint_anchors_arc(),
-                        self.selections.line_mode(),
+                        self.selections.line_mode,
                         self.cursor_shape,
                         cx,
                     );
diff --git a/crates/editor/src/editor_tests.rs b/crates/editor/src/editor_tests.rs
index b85998c6b8..7a1a6f4983 100644
--- a/crates/editor/src/editor_tests.rs
+++ b/crates/editor/src/editor_tests.rs
@@ -5370,8 +5370,8 @@ async fn test_manipulate_text(cx: &mut TestAppContext) {
         «HeLlO, wOrLD!ˇ»
     "});
 
-    // Test selections with `line_mode() = true`.
-    cx.update_editor(|editor, _window, _cx| editor.selections.set_line_mode(true));
+    // Test selections with `line_mode = true`.
+    cx.update_editor(|editor, _window, _cx| editor.selections.line_mode = true);
     cx.set_state(indoc! {"
         «The quick brown
         fox jumps over
@@ -20905,10 +20905,7 @@ async fn test_display_diff_hunks(cx: &mut TestAppContext) {
         for buffer in &buffers {
             let snapshot = buffer.read(cx).snapshot();
             multibuffer.set_excerpts_for_path(
-                PathKey::namespaced(
-                    0,
-                    buffer.read(cx).file().unwrap().path().as_unix_str().into(),
-                ),
+                PathKey::namespaced(0, buffer.read(cx).file().unwrap().path().as_str().into()),
                 buffer.clone(),
                 vec![text::Anchor::MIN.to_point(&snapshot)..text::Anchor::MAX.to_point(&snapshot)],
                 2,
diff --git a/crates/editor/src/element.rs b/crates/editor/src/element.rs
index 73ee2ae01e..90dd2a599a 100644
--- a/crates/editor/src/element.rs
+++ b/crates/editor/src/element.rs
@@ -1371,7 +1371,7 @@ impl EditorElement {
 
                     let layout = SelectionLayout::new(
                         selection,
-                        editor.selections.line_mode(),
+                        editor.selections.line_mode,
                         editor.cursor_shape,
                         &snapshot.display_snapshot,
                         is_newest,
@@ -3149,7 +3149,7 @@ impl EditorElement {
                 let newest = editor.selections.newest::<Point>(cx);
                 SelectionLayout::new(
                     newest,
-                    editor.selections.line_mode(),
+                    editor.selections.line_mode,
                     editor.cursor_shape,
                     &snapshot.display_snapshot,
                     true,
@@ -3782,17 +3782,13 @@ impl EditorElement {
         let file = for_excerpt.buffer.file();
         let can_open_excerpts = Editor::can_open_excerpts_in_file(file);
         let path_style = file.map(|file| file.path_style(cx));
-        let relative_path = for_excerpt.buffer.resolve_file_path(include_root, cx);
-        let (parent_path, filename) = if let Some(path) = &relative_path {
-            if let Some(path_style) = path_style {
-                let (dir, file_name) = path_style.split(path);
-                (dir.map(|dir| dir.to_owned()), Some(file_name.to_owned()))
-            } else {
-                (None, Some(path.clone()))
-            }
-        } else {
-            (None, None)
-        };
+        let relative_path = for_excerpt.buffer.resolve_file_path(cx, include_root);
+        let filename = relative_path
+            .as_ref()
+            .and_then(|path| Some(path.file_name()?.to_string_lossy().to_string()));
+        let parent_path = relative_path.as_ref().and_then(|path| {
+            Some(path.parent()?.to_string_lossy().to_string() + path_style?.separator())
+        });
         let focus_handle = editor.focus_handle(cx);
         let colors = cx.theme().colors();
 
diff --git a/crates/editor/src/hover_links.rs b/crates/editor/src/hover_links.rs
index c2a0108915..8177a4dca1 100644
--- a/crates/editor/src/hover_links.rs
+++ b/crates/editor/src/hover_links.rs
@@ -666,7 +666,9 @@ pub(crate) fn find_url(
 ) -> Option<(Range<text::Anchor>, String)> {
     const LIMIT: usize = 2048;
 
-    let snapshot = buffer.read_with(&cx, |buffer, _| buffer.snapshot()).ok()?;
+    let Ok(snapshot) = buffer.read_with(&cx, |buffer, _| buffer.snapshot()) else {
+        return None;
+    };
 
     let offset = position.to_offset(&snapshot);
     let mut token_start = offset;
diff --git a/crates/editor/src/items.rs b/crates/editor/src/items.rs
index e8ce3b81f3..3e592e4bdc 100644
--- a/crates/editor/src/items.rs
+++ b/crates/editor/src/items.rs
@@ -190,7 +190,7 @@ impl FollowableItem for Editor {
             self.buffer.update(cx, |buffer, cx| {
                 buffer.set_active_selections(
                     &self.selections.disjoint_anchors_arc(),
-                    self.selections.line_mode(),
+                    self.selections.line_mode,
                     self.cursor_shape,
                     cx,
                 );
@@ -963,12 +963,13 @@ impl Item for Editor {
             buffer
                 .snapshot()
                 .resolve_file_path(
+                    cx,
                     self.project
                         .as_ref()
                         .map(|project| project.read(cx).visible_worktrees(cx).count() > 1)
                         .unwrap_or_default(),
-                    cx,
                 )
+                .map(|path| path.to_string_lossy().to_string())
                 .unwrap_or_else(|| {
                     if multibuffer.is_singleton() {
                         multibuffer.title(cx).to_string()
diff --git a/crates/editor/src/selections_collection.rs b/crates/editor/src/selections_collection.rs
index 7fb44ab4b4..4343443ff8 100644
--- a/crates/editor/src/selections_collection.rs
+++ b/crates/editor/src/selections_collection.rs
@@ -1,6 +1,6 @@
 use std::{
     cell::Ref,
-    cmp, fmt, iter, mem,
+    cmp, iter, mem,
     ops::{Deref, DerefMut, Range, Sub},
     sync::Arc,
 };
@@ -29,7 +29,7 @@ pub struct SelectionsCollection {
     display_map: Entity<DisplayMap>,
     buffer: Entity<MultiBuffer>,
     next_selection_id: usize,
-    line_mode: bool,
+    pub line_mode: bool,
     /// The non-pending, non-overlapping selections.
     /// The [SelectionsCollection::pending] selection could possibly overlap these
     disjoint: Arc<[Selection<Anchor>]>,
@@ -424,14 +424,6 @@ impl SelectionsCollection {
     pub fn next_selection_id(&self) -> usize {
         self.next_selection_id
     }
-
-    pub fn line_mode(&self) -> bool {
-        self.line_mode
-    }
-
-    pub fn set_line_mode(&mut self, line_mode: bool) {
-        self.line_mode = line_mode;
-    }
 }
 
 pub struct MutableSelectionsCollection<'a> {
@@ -922,10 +914,10 @@ fn selection_to_anchor_selection<T>(
 where
     T: ToOffset + Ord,
 {
-    let end_bias = if selection.start == selection.end {
-        Bias::Right
-    } else {
+    let end_bias = if selection.end > selection.start {
         Bias::Left
+    } else {
+        Bias::Right
     };
     Selection {
         id: selection.id,
@@ -936,59 +928,49 @@ where
     }
 }
 
-fn resolve_selections_point<'a>(
+// Panics if passed selections are not in order
+fn resolve_selections_display<'a>(
     selections: impl 'a + IntoIterator<Item = &'a Selection<Anchor>>,
     map: &'a DisplaySnapshot,
-) -> impl 'a + Iterator<Item = Selection<Point>> {
+) -> impl 'a + Iterator<Item = Selection<DisplayPoint>> {
     let (to_summarize, selections) = selections.into_iter().tee();
     let mut summaries = map
         .buffer_snapshot
         .summaries_for_anchors::<Point, _>(to_summarize.flat_map(|s| [&s.start, &s.end]))
         .into_iter();
-    selections.map(move |s| {
-        let start = summaries.next().unwrap();
-        let end = summaries.next().unwrap();
-        assert!(start <= end, "start: {:?}, end: {:?}", start, end);
-        Selection {
-            id: s.id,
-            start,
-            end,
-            reversed: s.reversed,
-            goal: s.goal,
-        }
-    })
-}
+    let mut selections = selections
+        .map(move |s| {
+            let start = summaries.next().unwrap();
+            let end = summaries.next().unwrap();
+
+            let display_start = map.point_to_display_point(start, Bias::Left);
+            let display_end = if start == end {
+                map.point_to_display_point(end, Bias::Right)
+            } else {
+                map.point_to_display_point(end, Bias::Left)
+            };
 
-// Panics if passed selections are not in order
-fn resolve_selections_display<'a>(
-    selections: impl 'a + IntoIterator<Item = &'a Selection<Anchor>>,
-    map: &'a DisplaySnapshot,
-) -> impl 'a + Iterator<Item = Selection<DisplayPoint>> {
-    let selections = resolve_selections_point(selections, map).map(move |s| {
-        let display_start = map.point_to_display_point(s.start, Bias::Left);
-        let display_end = map.point_to_display_point(
-            s.end,
-            if s.start == s.end {
-                Bias::Right
+            Selection {
+                id: s.id,
+                start: display_start,
+                end: display_end,
+                reversed: s.reversed,
+                goal: s.goal,
+            }
+        })
+        .peekable();
+    iter::from_fn(move || {
+        let mut selection = selections.next()?;
+        while let Some(next_selection) = selections.peek() {
+            if selection.end >= next_selection.start {
+                selection.end = cmp::max(selection.end, next_selection.end);
+                selections.next();
             } else {
-                Bias::Left
-            },
-        );
-        assert!(
-            display_start <= display_end,
-            "display_start: {:?}, display_end: {:?}",
-            display_start,
-            display_end
-        );
-        Selection {
-            id: s.id,
-            start: display_start,
-            end: display_end,
-            reversed: s.reversed,
-            goal: s.goal,
+                break;
+            }
         }
-    });
-    coalesce_selections(selections)
+        Some(selection)
+    })
 }
 
 // Panics if passed selections are not in order
@@ -1006,13 +988,11 @@ where
             .dimensions_from_points::<D>(to_convert.flat_map(|s| {
                 let start = map.display_point_to_point(s.start, Bias::Left);
                 let end = map.display_point_to_point(s.end, Bias::Right);
-                assert!(start <= end, "start: {:?}, end: {:?}", start, end);
                 [start, end]
             }));
     selections.map(move |s| {
         let start = converted_endpoints.next().unwrap();
         let end = converted_endpoints.next().unwrap();
-        assert!(start <= end, "start: {:?}, end: {:?}", start, end);
         Selection {
             id: s.id,
             start,
@@ -1022,33 +1002,3 @@ where
         }
     })
 }
-
-fn coalesce_selections<D: Ord + fmt::Debug + Copy>(
-    selections: impl Iterator<Item = Selection<D>>,
-) -> impl Iterator<Item = Selection<D>> {
-    let mut selections = selections.peekable();
-    iter::from_fn(move || {
-        let mut selection = selections.next()?;
-        while let Some(next_selection) = selections.peek() {
-            if selection.end >= next_selection.start {
-                if selection.reversed == next_selection.reversed {
-                    selection.end = cmp::max(selection.end, next_selection.end);
-                    selections.next();
-                } else {
-                    selection.end = cmp::max(selection.start, next_selection.start);
-                    break;
-                }
-            } else {
-                break;
-            }
-        }
-        assert!(
-            selection.start <= selection.end,
-            "selection.start: {:?}, selection.end: {:?}, selection.reversed: {:?}",
-            selection.start,
-            selection.end,
-            selection.reversed
-        );
-        Some(selection)
-    })
-}
diff --git a/crates/editor/src/test/editor_test_context.rs b/crates/editor/src/test/editor_test_context.rs
index 8cf1608374..06fd01c85f 100644
--- a/crates/editor/src/test/editor_test_context.rs
+++ b/crates/editor/src/test/editor_test_context.rs
@@ -296,7 +296,7 @@ impl EditorTestContext {
         let path = self.update_buffer(|buffer, _| buffer.file().unwrap().path().clone());
         fs.set_head_for_repo(
             &Self::root_path().join(".git"),
-            &[(path.as_unix_str(), diff_base.to_string())],
+            &[(path.as_str(), diff_base.to_string())],
             "deadbeef",
         );
         self.cx.run_until_parked();
@@ -317,7 +317,7 @@ impl EditorTestContext {
         let path = self.update_buffer(|buffer, _| buffer.file().unwrap().path().clone());
         fs.set_index_for_repo(
             &Self::root_path().join(".git"),
-            &[(path.as_unix_str(), diff_base.to_string())],
+            &[(path.as_str(), diff_base.to_string())],
         );
         self.cx.run_until_parked();
     }
diff --git a/crates/eval/src/examples/add_arg_to_trait_method.rs b/crates/eval/src/examples/add_arg_to_trait_method.rs
index 41fa7c3dc6..0626be5a4e 100644
--- a/crates/eval/src/examples/add_arg_to_trait_method.rs
+++ b/crates/eval/src/examples/add_arg_to_trait_method.rs
@@ -67,7 +67,7 @@ impl Example for AddArgToTraitMethod {
 
         for tool_name in add_ignored_window_paths {
             let path_str = format!("crates/assistant_tools/src/{}.rs", tool_name);
-            let edits = edits.get(RelPath::unix(&path_str).unwrap());
+            let edits = edits.get(RelPath::new(&path_str).unwrap());
 
             let ignored = edits.is_some_and(|edits| {
                 edits.has_added_line("        _window: Option<gpui::AnyWindowHandle>,\n")
@@ -86,7 +86,7 @@ impl Example for AddArgToTraitMethod {
         // Adds unignored argument to `batch_tool`
 
         let batch_tool_edits =
-            edits.get(RelPath::unix("crates/assistant_tools/src/batch_tool.rs").unwrap());
+            edits.get(RelPath::new("crates/assistant_tools/src/batch_tool.rs").unwrap());
 
         cx.assert(
             batch_tool_edits.is_some_and(|edits| {
diff --git a/crates/extension_host/src/wasm_host/wit/since_v0_1_0.rs b/crates/extension_host/src/wasm_host/wit/since_v0_1_0.rs
index 73207b3036..16e695f04f 100644
--- a/crates/extension_host/src/wasm_host/wit/since_v0_1_0.rs
+++ b/crates/extension_host/src/wasm_host/wit/since_v0_1_0.rs
@@ -425,7 +425,7 @@ impl ExtensionImports for WasmState {
                 let location = location.as_ref().and_then(|location| {
                     Some(::settings::SettingsLocation {
                         worktree_id: WorktreeId::from_proto(location.worktree_id),
-                        path: RelPath::unix(&location.path).ok()?,
+                        path: RelPath::new(&location.path).ok()?,
                     })
                 });
 
diff --git a/crates/extension_host/src/wasm_host/wit/since_v0_6_0.rs b/crates/extension_host/src/wasm_host/wit/since_v0_6_0.rs
index 861f73f4a4..9e608b9e8e 100644
--- a/crates/extension_host/src/wasm_host/wit/since_v0_6_0.rs
+++ b/crates/extension_host/src/wasm_host/wit/since_v0_6_0.rs
@@ -564,7 +564,7 @@ impl HostWorktree for WasmState {
     ) -> wasmtime::Result<Result<String, String>> {
         let delegate = self.table.get(&delegate)?;
         Ok(delegate
-            .read_text_file(RelPath::unix(&path)?)
+            .read_text_file(RelPath::new(&path)?)
             .await
             .map_err(|error| error.to_string()))
     }
@@ -917,7 +917,7 @@ impl ExtensionImports for WasmState {
                 let location = location.as_ref().and_then(|location| {
                     Some(::settings::SettingsLocation {
                         worktree_id: WorktreeId::from_proto(location.worktree_id),
-                        path: RelPath::unix(&location.path).ok()?,
+                        path: RelPath::new(&location.path).ok()?,
                     })
                 });
 
diff --git a/crates/feature_flags/src/flags.rs b/crates/feature_flags/src/flags.rs
index 47b6f1230a..bacb22bd8d 100644
--- a/crates/feature_flags/src/flags.rs
+++ b/crates/feature_flags/src/flags.rs
@@ -6,6 +6,16 @@ impl FeatureFlag for PredictEditsRateCompletionsFeatureFlag {
     const NAME: &'static str = "predict-edits-rate-completions";
 }
 
+pub struct BillingV2FeatureFlag {}
+
+impl FeatureFlag for BillingV2FeatureFlag {
+    const NAME: &'static str = "billing-v2";
+
+    fn enabled_for_all() -> bool {
+        true
+    }
+}
+
 pub struct NotebookFeatureFlag;
 
 impl FeatureFlag for NotebookFeatureFlag {
diff --git a/crates/file_finder/src/file_finder.rs b/crates/file_finder/src/file_finder.rs
index 08c54dabc2..4126d37a3f 100644
--- a/crates/file_finder/src/file_finder.rs
+++ b/crates/file_finder/src/file_finder.rs
@@ -666,7 +666,7 @@ impl Matches {
         }
 
         if let Some(filename) = panel_match.0.path.file_name() {
-            let path_str = panel_match.0.path.as_unix_str();
+            let path_str = panel_match.0.path.as_str();
 
             if let Some(filename_pos) = path_str.rfind(filename)
                 && panel_match.0.positions[0] >= filename_pos
@@ -940,7 +940,7 @@ impl FileFinderDelegate {
 
             let path_style = self.project.read(cx).path_style(cx);
             let query_path = query.raw_query.as_str();
-            if let Ok(mut query_path) = RelPath::new(Path::new(query_path), path_style) {
+            if let Ok(mut query_path) = RelPath::from_std_path(Path::new(query_path), path_style) {
                 let available_worktree = self
                     .project
                     .read(cx)
@@ -953,7 +953,7 @@ impl FileFinderDelegate {
                     let worktree_root = worktree.read(cx).root_name();
                     if worktree_count > 1 {
                         if let Ok(suffix) = query_path.strip_prefix(worktree_root) {
-                            query_path = Cow::Owned(suffix.to_owned());
+                            query_path = suffix.into();
                             expect_worktree = Some(worktree);
                             break;
                         }
@@ -973,7 +973,7 @@ impl FileFinderDelegate {
                     {
                         self.matches.matches.push(Match::CreateNew(ProjectPath {
                             worktree_id: worktree.id(),
-                            path: query_path.into_arc(),
+                            path: query_path,
                         }));
                     }
                 }
@@ -1128,7 +1128,7 @@ impl FileFinderDelegate {
         let mut path_positions = path_match.positions.clone();
 
         let file_name = full_path.file_name().unwrap_or("");
-        let file_name_start = full_path.as_unix_str().len() - file_name.len();
+        let file_name_start = full_path.as_str().len() - file_name.len();
         let file_name_positions = path_positions
             .iter()
             .filter_map(|pos| {
@@ -1315,8 +1315,8 @@ impl PickerDelegate for FileFinderDelegate {
         let raw_query = raw_query.trim();
 
         let raw_query = match &raw_query.get(0..2) {
-            Some(".\\" | "./") => &raw_query[2..],
-            Some(prefix @ ("a\\" | "a/" | "b\\" | "b/")) => {
+            Some(".\\") | Some("./") => &raw_query[2..],
+            Some("a\\") | Some("a/") => {
                 if self
                     .workspace
                     .upgrade()
@@ -1325,7 +1325,25 @@ impl PickerDelegate for FileFinderDelegate {
                     .all(|worktree| {
                         worktree
                             .read(cx)
-                            .entry_for_path(RelPath::unix(prefix.split_at(1).0).unwrap())
+                            .entry_for_path(RelPath::new("a").unwrap())
+                            .is_none_or(|entry| !entry.is_dir())
+                    })
+                {
+                    &raw_query[2..]
+                } else {
+                    raw_query
+                }
+            }
+            Some("b\\") | Some("b/") => {
+                if self
+                    .workspace
+                    .upgrade()
+                    .into_iter()
+                    .flat_map(|workspace| workspace.read(cx).worktrees(cx))
+                    .all(|worktree| {
+                        worktree
+                            .read(cx)
+                            .entry_for_path(RelPath::new("b").unwrap())
                             .is_none_or(|entry| !entry.is_dir())
                     })
                 {
diff --git a/crates/file_finder/src/file_finder_tests.rs b/crates/file_finder/src/file_finder_tests.rs
index dffbaff797..75b2101101 100644
--- a/crates/file_finder/src/file_finder_tests.rs
+++ b/crates/file_finder/src/file_finder_tests.rs
@@ -2192,7 +2192,7 @@ async fn test_nonexistent_history_items_not_shown(cx: &mut gpui::TestAppContext)
             collect_search_matches(picker).history,
             vec![
                 rel_path("test/first.rs").into(),
-                rel_path("test/third.rs").into()
+                rel_path("test/third.rs").into(),
             ],
             "Should have all opened files in the history, except the ones that do not exist on disk"
         );
diff --git a/crates/fs/src/fake_git_repo.rs b/crates/fs/src/fake_git_repo.rs
index 91c7113214..940210a710 100644
--- a/crates/fs/src/fake_git_repo.rs
+++ b/crates/fs/src/fake_git_repo.rs
@@ -226,7 +226,7 @@ impl GitRepository for FakeGitRepository {
                     .read_file_sync(path)
                     .ok()
                     .map(|content| String::from_utf8(content).unwrap())?;
-                let repo_path = RelPath::new(repo_path, PathStyle::local()).ok()?;
+                let repo_path = RelPath::from_std_path(repo_path, PathStyle::local()).ok()?;
                 Some((repo_path.into(), (content, is_ignored)))
             })
             .collect();
diff --git a/crates/fs/src/fs.rs b/crates/fs/src/fs.rs
index 11ff637ad4..a1ee23cf5f 100644
--- a/crates/fs/src/fs.rs
+++ b/crates/fs/src/fs.rs
@@ -1671,10 +1671,10 @@ impl FakeFs {
             for (path, content) in workdir_contents {
                 use util::{paths::PathStyle, rel_path::RelPath};
 
-                let repo_path: RepoPath = RelPath::new(path.strip_prefix(&workdir_path).unwrap(), PathStyle::local()).unwrap().into();
+                let repo_path: RepoPath = RelPath::from_std_path(path.strip_prefix(&workdir_path).unwrap(), PathStyle::local()).unwrap().into();
                 let status = statuses
                     .iter()
-                    .find_map(|(p, status)| (*p == repo_path.as_unix_str()).then_some(status));
+                    .find_map(|(p, status)| (*p == repo_path.as_str()).then_some(status));
                 let mut content = String::from_utf8_lossy(&content).to_string();
 
                 let mut index_content = None;
diff --git a/crates/fuzzy/src/paths.rs b/crates/fuzzy/src/paths.rs
index 6fc52361e3..fa6d3f8504 100644
--- a/crates/fuzzy/src/paths.rs
+++ b/crates/fuzzy/src/paths.rs
@@ -52,7 +52,7 @@ impl<'a> MatchCandidate for PathMatchCandidate<'a> {
     }
 
     fn candidate_chars(&self) -> impl Iterator<Item = char> {
-        self.path.as_unix_str().chars()
+        self.path.as_str().chars()
     }
 }
 
@@ -184,11 +184,8 @@ pub async fn match_path_sets<'a, Set: PathMatchCandidateSet<'a>>(
                             let candidates = candidate_set.candidates(start).take(end - start);
 
                             let worktree_id = candidate_set.id();
-                            let mut prefix = candidate_set
-                                .prefix()
-                                .as_unix_str()
-                                .chars()
-                                .collect::<Vec<_>>();
+                            let mut prefix =
+                                candidate_set.prefix().as_str().chars().collect::<Vec<_>>();
                             if !candidate_set.root_is_file() && !prefix.is_empty() {
                                 prefix.push('/');
                             }
diff --git a/crates/git/src/blame.rs b/crates/git/src/blame.rs
index e58b9cb7e0..a06d5081b7 100644
--- a/crates/git/src/blame.rs
+++ b/crates/git/src/blame.rs
@@ -77,7 +77,7 @@ async fn run_git_blame(
         .arg("-w")
         .arg("--contents")
         .arg("-")
-        .arg(path.as_unix_str())
+        .arg(path.as_str())
         .stdin(Stdio::piped())
         .stdout(Stdio::piped())
         .stderr(Stdio::piped())
diff --git a/crates/git/src/repository.rs b/crates/git/src/repository.rs
index 5708999860..b455f5b14c 100644
--- a/crates/git/src/repository.rs
+++ b/crates/git/src/repository.rs
@@ -12,7 +12,6 @@ use parking_lot::Mutex;
 use rope::Rope;
 use schemars::JsonSchema;
 use serde::Deserialize;
-use std::borrow::Cow;
 use std::ffi::{OsStr, OsString};
 use std::io::prelude::*;
 use std::process::{ExitStatus, Stdio};
@@ -720,7 +719,7 @@ impl GitRepository for RealGitRepository {
             let mut newline = [b'\0'];
             for (path, status_code) in changes {
                 // git-show outputs `/`-delimited paths even on Windows.
-                let Some(rel_path) = RelPath::unix(path).log_err() else {
+                let Ok(rel_path) = RelPath::new(path) else {
                     continue;
                 };
 
@@ -829,7 +828,7 @@ impl GitRepository for RealGitRepository {
                 .current_dir(&working_directory?)
                 .envs(env.iter())
                 .args(["checkout", &commit, "--"])
-                .args(paths.iter().map(|path| path.as_unix_str()))
+                .args(paths.iter().map(|path| path.as_str()))
                 .output()
                 .await?;
             anyhow::ensure!(
@@ -921,7 +920,7 @@ impl GitRepository for RealGitRepository {
                         .current_dir(&working_directory)
                         .envs(env.iter())
                         .args(["update-index", "--add", "--cacheinfo", "100644", sha])
-                        .arg(path.as_unix_str())
+                        .arg(path.as_str())
                         .output()
                         .await?;
 
@@ -936,7 +935,7 @@ impl GitRepository for RealGitRepository {
                         .current_dir(&working_directory)
                         .envs(env.iter())
                         .args(["update-index", "--force-remove"])
-                        .arg(path.as_unix_str())
+                        .arg(path.as_str())
                         .output()
                         .await?;
                     anyhow::ensure!(
@@ -1254,7 +1253,7 @@ impl GitRepository for RealGitRepository {
                         .current_dir(&working_directory?)
                         .envs(env.iter())
                         .args(["update-index", "--add", "--remove", "--"])
-                        .args(paths.iter().map(|p| p.as_unix_str()))
+                        .args(paths.iter().map(|p| p.as_str()))
                         .output()
                         .await?;
                     anyhow::ensure!(
@@ -1283,7 +1282,7 @@ impl GitRepository for RealGitRepository {
                         .current_dir(&working_directory?)
                         .envs(env.iter())
                         .args(["reset", "--quiet", "--"])
-                        .args(paths.iter().map(|p| p.as_std_path()))
+                        .args(paths.iter().map(|p| p.as_ref()))
                         .output()
                         .await?;
 
@@ -1312,7 +1311,7 @@ impl GitRepository for RealGitRepository {
                     .args(["stash", "push", "--quiet"])
                     .arg("--include-untracked");
 
-                cmd.args(paths.iter().map(|p| p.as_unix_str()));
+                cmd.args(paths.iter().map(|p| p.as_ref()));
 
                 let output = cmd.output().await?;
 
@@ -1818,7 +1817,7 @@ fn git_status_args(path_prefixes: &[RepoPath]) -> Vec<OsString> {
         if path_prefix.is_empty() {
             Path::new(".").into()
         } else {
-            path_prefix.as_std_path().into()
+            path_prefix.as_os_str().into()
         }
     }));
     args
@@ -2074,7 +2073,7 @@ pub struct RepoPath(pub Arc<RelPath>);
 
 impl RepoPath {
     pub fn new<S: AsRef<str> + ?Sized>(s: &S) -> Result<Self> {
-        let rel_path = RelPath::unix(s.as_ref())?;
+        let rel_path = RelPath::new(s)?;
         Ok(rel_path.into())
     }
 
@@ -2084,14 +2083,14 @@ impl RepoPath {
     }
 
     pub fn from_std_path(path: &Path, path_style: PathStyle) -> Result<Self> {
-        let rel_path = RelPath::new(path, path_style)?;
-        Ok(Self(rel_path.as_ref().into()))
+        let rel_path = RelPath::from_std_path(path, path_style)?;
+        Ok(rel_path.into())
     }
 }
 
 #[cfg(any(test, feature = "test-support"))]
 pub fn repo_path<S: AsRef<str> + ?Sized>(s: &S) -> RepoPath {
-    RepoPath(RelPath::unix(s.as_ref()).unwrap().into())
+    RepoPath(RelPath::new(s).unwrap().into())
 }
 
 impl From<&RelPath> for RepoPath {
@@ -2100,12 +2099,6 @@ impl From<&RelPath> for RepoPath {
     }
 }
 
-impl<'a> From<Cow<'a, RelPath>> for RepoPath {
-    fn from(value: Cow<'a, RelPath>) -> Self {
-        value.as_ref().into()
-    }
-}
-
 impl From<Arc<RelPath>> for RepoPath {
     fn from(value: Arc<RelPath>) -> Self {
         RepoPath(value)
@@ -2126,11 +2119,11 @@ impl std::ops::Deref for RepoPath {
     }
 }
 
-// impl AsRef<Path> for RepoPath {
-//     fn as_ref(&self) -> &Path {
-//         RelPath::as_ref(&self.0)
-//     }
-// }
+impl AsRef<Path> for RepoPath {
+    fn as_ref(&self) -> &Path {
+        RelPath::as_ref(&self.0)
+    }
+}
 
 #[derive(Debug)]
 pub struct RepoPathDescendants<'a>(pub &'a RepoPath);
diff --git a/crates/git/src/status.rs b/crates/git/src/status.rs
index c3f28aa204..2bcd0809db 100644
--- a/crates/git/src/status.rs
+++ b/crates/git/src/status.rs
@@ -448,7 +448,7 @@ impl FromStr for GitStatus {
                 let status = entry.as_bytes()[0..2].try_into().unwrap();
                 let status = FileStatus::from_bytes(status).log_err()?;
                 // git-status outputs `/`-delimited repo paths, even on Windows.
-                let path = RepoPath(RelPath::unix(path).log_err()?.into());
+                let path = RepoPath(RelPath::new(path).log_err()?.into());
                 Some((path, status))
             })
             .collect::<Vec<_>>();
diff --git a/crates/git_ui/src/commit_view.rs b/crates/git_ui/src/commit_view.rs
index ac00955b61..038a5beaac 100644
--- a/crates/git_ui/src/commit_view.rs
+++ b/crates/git_ui/src/commit_view.rs
@@ -128,7 +128,7 @@ impl CommitView {
         let mut metadata_buffer_id = None;
         if let Some(worktree_id) = first_worktree_id {
             let file = Arc::new(CommitMetadataFile {
-                title: RelPath::unix(&format!("commit {}", commit.sha))
+                title: RelPath::new(&format!("commit {}", commit.sha))
                     .unwrap()
                     .into(),
                 worktree_id,
@@ -145,7 +145,7 @@ impl CommitView {
             });
             multibuffer.update(cx, |multibuffer, cx| {
                 multibuffer.set_excerpts_for_path(
-                    PathKey::namespaced(COMMIT_METADATA_NAMESPACE, file.title.as_unix_str().into()),
+                    PathKey::namespaced(COMMIT_METADATA_NAMESPACE, file.title.as_str().into()),
                     buffer.clone(),
                     vec![Point::zero()..buffer.read(cx).max_point()],
                     0,
@@ -193,7 +193,7 @@ impl CommitView {
                             .collect::<Vec<_>>();
                         let path = snapshot.file().unwrap().path().clone();
                         let _is_newly_added = multibuffer.set_excerpts_for_path(
-                            PathKey::namespaced(FILE_NAMESPACE, path.as_unix_str().into()),
+                            PathKey::namespaced(FILE_NAMESPACE, path.as_str().into()),
                             buffer,
                             diff_hunk_ranges,
                             multibuffer_context_lines(cx),
@@ -275,7 +275,7 @@ impl language::File for CommitMetadataFile {
     }
 
     fn full_path(&self, _: &App) -> PathBuf {
-        PathBuf::from(self.title.as_unix_str().to_owned())
+        PathBuf::from(self.title.as_str().to_owned())
     }
 
     fn file_name<'a>(&'a self, _: &'a App) -> &'a str {
diff --git a/crates/git_ui/src/git_panel.rs b/crates/git_ui/src/git_panel.rs
index 6ab2b24e2a..e66da36576 100644
--- a/crates/git_ui/src/git_panel.rs
+++ b/crates/git_ui/src/git_panel.rs
@@ -4550,6 +4550,7 @@ impl RenderOnce for PanelRepoFooter {
         };
 
         let repo_selector_trigger = Button::new("repo-selector", truncated_repo_name)
+            .style(ButtonStyle::Transparent)
             .size(ButtonSize::None)
             .label_size(LabelSize::Small)
             .color(Color::Muted);
@@ -4570,6 +4571,7 @@ impl RenderOnce for PanelRepoFooter {
             .into_any_element();
 
         let branch_selector_button = Button::new("branch-selector", truncated_branch_name)
+            .style(ButtonStyle::Transparent)
             .size(ButtonSize::None)
             .label_size(LabelSize::Small)
             .truncate(true)
@@ -4590,31 +4592,34 @@ impl RenderOnce for PanelRepoFooter {
             });
 
         h_flex()
-            .h(px(36.))
             .w_full()
             .px_2()
+            .h(px(36.))
+            .items_center()
             .justify_between()
             .gap_1()
             .child(
                 h_flex()
                     .flex_1()
                     .overflow_hidden()
-                    .gap_px()
+                    .items_center()
                     .child(
-                        Icon::new(IconName::GitBranchAlt)
-                            .size(IconSize::Small)
-                            .color(if single_repo {
-                                Color::Disabled
-                            } else {
-                                Color::Muted
-                            }),
+                        div().child(
+                            Icon::new(IconName::GitBranchAlt)
+                                .size(IconSize::Small)
+                                .color(if single_repo {
+                                    Color::Disabled
+                                } else {
+                                    Color::Muted
+                                }),
+                        ),
                     )
                     .child(repo_selector)
                     .when(show_separator, |this| {
                         this.child(
                             div()
+                                .text_color(cx.theme().colors().text_muted)
                                 .text_sm()
-                                .text_color(cx.theme().colors().icon_muted.opacity(0.5))
                                 .child("/"),
                         )
                     })
diff --git a/crates/git_ui/src/project_diff.rs b/crates/git_ui/src/project_diff.rs
index 0508cd4c25..a226caab34 100644
--- a/crates/git_ui/src/project_diff.rs
+++ b/crates/git_ui/src/project_diff.rs
@@ -243,7 +243,7 @@ impl ProjectDiff {
             TRACKED_NAMESPACE
         };
 
-        let path_key = PathKey::namespaced(namespace, entry.repo_path.as_unix_str().into());
+        let path_key = PathKey::namespaced(namespace, entry.repo_path.as_str().into());
 
         self.move_to_path(path_key, window, cx)
     }
@@ -397,7 +397,7 @@ impl ProjectDiff {
                 } else {
                     TRACKED_NAMESPACE
                 };
-                let path_key = PathKey::namespaced(namespace, entry.repo_path.as_unix_str().into());
+                let path_key = PathKey::namespaced(namespace, entry.repo_path.as_str().into());
 
                 previous_paths.remove(&path_key);
                 let load_buffer = self
diff --git a/crates/gpui/Cargo.toml b/crates/gpui/Cargo.toml
index 4544b561c3..2919fecabf 100644
--- a/crates/gpui/Cargo.toml
+++ b/crates/gpui/Cargo.toml
@@ -230,10 +230,9 @@ collections = { workspace = true, features = ["test-support"] }
 env_logger.workspace = true
 http_client = { workspace = true, features = ["test-support"] }
 lyon = { version = "1.0", features = ["extra"] }
-pretty_assertions.workspace = true
 rand.workspace = true
-reqwest_client = { workspace = true, features = ["test-support"] }
 unicode-segmentation.workspace = true
+reqwest_client = { workspace = true, features = ["test-support"] }
 util = { workspace = true, features = ["test-support"] }
 
 [target.'cfg(target_os = "windows")'.build-dependencies]
diff --git a/crates/gpui/examples/set_menus.rs b/crates/gpui/examples/set_menus.rs
index 8a97a8d8a2..2488b5c100 100644
--- a/crates/gpui/examples/set_menus.rs
+++ b/crates/gpui/examples/set_menus.rs
@@ -1,13 +1,17 @@
 use gpui::{
-    App, Application, Context, Menu, MenuItem, SystemMenuType, Window, WindowOptions, actions, div,
-    prelude::*, rgb,
+    App, Application, Context, FocusHandle, KeyBinding, Menu, MenuItem, PromptLevel,
+    SystemMenuType, Window, WindowOptions, actions, div, prelude::*, rgb,
 };
 
-struct SetMenus;
+struct SetMenus {
+    focus_handle: FocusHandle,
+}
 
 impl Render for SetMenus {
     fn render(&mut self, _window: &mut Window, _cx: &mut Context<Self>) -> impl IntoElement {
         div()
+            .key_context("root")
+            .track_focus(&self.focus_handle)
             .flex()
             .bg(rgb(0x2e7d32))
             .size_full()
@@ -15,6 +19,16 @@ impl Render for SetMenus {
             .items_center()
             .text_xl()
             .text_color(rgb(0xffffff))
+            // Actions can also be registered within elements so they are only active when relevant
+            .on_action(|_: &Open, window, cx| {
+                let _ = window.prompt(PromptLevel::Info, "Open action fired", None, &["OK"], cx);
+            })
+            .on_action(|_: &Copy, window, cx| {
+                let _ = window.prompt(PromptLevel::Info, "Copy action fired", None, &["OK"], cx);
+            })
+            .on_action(|_: &Paste, window, cx| {
+                let _ = window.prompt(PromptLevel::Info, "Paste action fired", None, &["OK"], cx);
+            })
             .child("Set Menus Example")
     }
 }
@@ -23,24 +37,47 @@ fn main() {
     Application::new().run(|cx: &mut App| {
         // Bring the menu bar to the foreground (so you can see the menu bar)
         cx.activate(true);
+        // Bind keys to some menu actions
+        cx.bind_keys([
+            KeyBinding::new("secondary-o", Open, None),
+            KeyBinding::new("secondary-c", Copy, None),
+            KeyBinding::new("secondary-v", Paste, None),
+        ]);
         // Register the `quit` function so it can be referenced by the `MenuItem::action` in the menu bar
         cx.on_action(quit);
         // Add menu items
-        cx.set_menus(vec![Menu {
-            name: "set_menus".into(),
-            items: vec![
-                MenuItem::os_submenu("Services", SystemMenuType::Services),
-                MenuItem::separator(),
-                MenuItem::action("Quit", Quit),
-            ],
-        }]);
-        cx.open_window(WindowOptions::default(), |_, cx| cx.new(|_| SetMenus {}))
-            .unwrap();
+        cx.set_menus(vec![
+            Menu {
+                name: "set_menus".into(),
+                items: vec![
+                    MenuItem::os_submenu("Services", SystemMenuType::Services),
+                    MenuItem::separator(),
+                    MenuItem::action("Quit", Quit),
+                ],
+            },
+            Menu {
+                name: "File".into(),
+                items: vec![MenuItem::action("Open", Open)],
+            },
+            Menu {
+                name: "Edit".into(),
+                items: vec![
+                    MenuItem::action("Copy", Copy),
+                    MenuItem::action("Paste", Paste),
+                ],
+            },
+        ]);
+        cx.open_window(WindowOptions::default(), |_, cx| {
+            cx.new(|cx| SetMenus {
+                focus_handle: cx.focus_handle(),
+            })
+        })
+        .unwrap();
     });
 }
 
 // Associate actions using the `actions!` macro (or `Action` derive macro)
-actions!(set_menus, [Quit]);
+actions!(set_menus, [Quit, Open, Copy, Paste]);
 
 // Define the quit function that is registered with the App
 fn quit(_: &Quit, cx: &mut App) {
diff --git a/crates/gpui/src/color.rs b/crates/gpui/src/color.rs
index 3af5731bb5..b84f8699e3 100644
--- a/crates/gpui/src/color.rs
+++ b/crates/gpui/src/color.rs
@@ -362,7 +362,7 @@ pub const fn transparent_black() -> Hsla {
     }
 }
 
-/// Transparent white in [`Hsla`]
+/// Transparent black in [`Hsla`]
 pub const fn transparent_white() -> Hsla {
     Hsla {
         h: 0.,
diff --git a/crates/gpui/src/elements/div.rs b/crates/gpui/src/elements/div.rs
index 9e747d864b..bd2eed3397 100644
--- a/crates/gpui/src/elements/div.rs
+++ b/crates/gpui/src/elements/div.rs
@@ -618,32 +618,13 @@ pub trait InteractiveElement: Sized {
         self
     }
 
-    /// Designate this element as a tab stop, equivalent to `tab_index(0)`.
-    /// This should be the primary mechanism for tab navigation within the application.
-    fn tab_stop(mut self) -> Self {
-        self.tab_index(0)
-    }
-
-    /// Set index of the tab stop order. This should only be used in conjunction with `tab_group`
-    /// in order to not interfere with the tab index of other elements.
+    /// Set index of the tab stop order.
     fn tab_index(mut self, index: isize) -> Self {
         self.interactivity().focusable = true;
         self.interactivity().tab_index = Some(index);
         self
     }
 
-    /// Designate this div as a "tab group". Tab groups have their own location in the tab-index order,
-    /// but for children of the tab group, the tab index is reset to 0. This can be useful for swapping
-    /// the order of tab stops within the group, without having to renumber all the tab stops in the whole
-    /// application.
-    fn tab_group(mut self) -> Self {
-        self.interactivity().tab_group = true;
-        if self.interactivity().tab_index.is_none() {
-            self.interactivity().tab_index = Some(0);
-        }
-        self
-    }
-
     /// Set the keymap context for this element. This will be used to determine
     /// which action to dispatch from the keymap.
     fn key_context<C, E>(mut self, key_context: C) -> Self
@@ -1500,7 +1481,6 @@ pub struct Interactivity {
     pub(crate) window_control: Option<WindowControlArea>,
     pub(crate) hitbox_behavior: HitboxBehavior,
     pub(crate) tab_index: Option<isize>,
-    pub(crate) tab_group: bool,
 
     #[cfg(any(feature = "inspector", debug_assertions))]
     pub(crate) source_location: Option<&'static core::panic::Location<'static>>,
@@ -1786,12 +1766,8 @@ impl Interactivity {
                     return ((), element_state);
                 }
 
-                let mut tab_group = None;
-                if self.tab_group {
-                    tab_group = self.tab_index;
-                }
                 if let Some(focus_handle) = &self.tracked_focus_handle {
-                    window.next_frame.tab_stops.insert(focus_handle);
+                    window.next_frame.tab_handles.insert(focus_handle);
                 }
 
                 window.with_element_opacity(style.opacity, |window| {
@@ -1800,59 +1776,55 @@ impl Interactivity {
                             window.with_content_mask(
                                 style.overflow_mask(bounds, window.rem_size()),
                                 |window| {
-                                    window.with_tab_group(tab_group, |window| {
-                                        if let Some(hitbox) = hitbox {
-                                            #[cfg(debug_assertions)]
-                                            self.paint_debug_info(
-                                                global_id, hitbox, &style, window, cx,
-                                            );
-
-                                            if let Some(drag) = cx.active_drag.as_ref() {
-                                                if let Some(mouse_cursor) = drag.cursor_style {
-                                                    window.set_window_cursor_style(mouse_cursor);
-                                                }
-                                            } else {
-                                                if let Some(mouse_cursor) = style.mouse_cursor {
-                                                    window.set_cursor_style(mouse_cursor, hitbox);
-                                                }
+                                    if let Some(hitbox) = hitbox {
+                                        #[cfg(debug_assertions)]
+                                        self.paint_debug_info(
+                                            global_id, hitbox, &style, window, cx,
+                                        );
+
+                                        if let Some(drag) = cx.active_drag.as_ref() {
+                                            if let Some(mouse_cursor) = drag.cursor_style {
+                                                window.set_window_cursor_style(mouse_cursor);
                                             }
-
-                                            if let Some(group) = self.group.clone() {
-                                                GroupHitboxes::push(group, hitbox.id, cx);
+                                        } else {
+                                            if let Some(mouse_cursor) = style.mouse_cursor {
+                                                window.set_cursor_style(mouse_cursor, hitbox);
                                             }
+                                        }
 
-                                            if let Some(area) = self.window_control {
-                                                window.insert_window_control_hitbox(
-                                                    area,
-                                                    hitbox.clone(),
-                                                );
-                                            }
+                                        if let Some(group) = self.group.clone() {
+                                            GroupHitboxes::push(group, hitbox.id, cx);
+                                        }
 
-                                            self.paint_mouse_listeners(
-                                                hitbox,
-                                                element_state.as_mut(),
-                                                window,
-                                                cx,
-                                            );
-                                            self.paint_scroll_listener(hitbox, &style, window, cx);
+                                        if let Some(area) = self.window_control {
+                                            window
+                                                .insert_window_control_hitbox(area, hitbox.clone());
                                         }
 
-                                        self.paint_keyboard_listeners(window, cx);
-                                        f(&style, window, cx);
+                                        self.paint_mouse_listeners(
+                                            hitbox,
+                                            element_state.as_mut(),
+                                            window,
+                                            cx,
+                                        );
+                                        self.paint_scroll_listener(hitbox, &style, window, cx);
+                                    }
 
-                                        if let Some(_hitbox) = hitbox {
-                                            #[cfg(any(feature = "inspector", debug_assertions))]
-                                            window.insert_inspector_hitbox(
-                                                _hitbox.id,
-                                                _inspector_id,
-                                                cx,
-                                            );
+                                    self.paint_keyboard_listeners(window, cx);
+                                    f(&style, window, cx);
 
-                                            if let Some(group) = self.group.as_ref() {
-                                                GroupHitboxes::pop(group, cx);
-                                            }
+                                    if let Some(_hitbox) = hitbox {
+                                        #[cfg(any(feature = "inspector", debug_assertions))]
+                                        window.insert_inspector_hitbox(
+                                            _hitbox.id,
+                                            _inspector_id,
+                                            cx,
+                                        );
+
+                                        if let Some(group) = self.group.as_ref() {
+                                            GroupHitboxes::pop(group, cx);
                                         }
-                                    })
+                                    }
                                 },
                             );
                         });
diff --git a/crates/gpui/src/platform.rs b/crates/gpui/src/platform.rs
index 444b60ac15..05b597e9b6 100644
--- a/crates/gpui/src/platform.rs
+++ b/crates/gpui/src/platform.rs
@@ -250,6 +250,7 @@ pub(crate) trait Platform: 'static {
     fn on_app_menu_action(&self, callback: Box<dyn FnMut(&dyn Action)>);
     fn on_will_open_app_menu(&self, callback: Box<dyn FnMut()>);
     fn on_validate_app_menu_command(&self, callback: Box<dyn FnMut(&dyn Action) -> bool>);
+    fn on_action_triggered(&self, action: &dyn Action);
 
     fn compositor_name(&self) -> &'static str {
         ""
diff --git a/crates/gpui/src/platform/blade/blade_renderer.rs b/crates/gpui/src/platform/blade/blade_renderer.rs
index 7796af806f..1f60920bcc 100644
--- a/crates/gpui/src/platform/blade/blade_renderer.rs
+++ b/crates/gpui/src/platform/blade/blade_renderer.rs
@@ -83,8 +83,6 @@ struct ShaderUnderlinesData {
 #[derive(blade_macros::ShaderData)]
 struct ShaderMonoSpritesData {
     globals: GlobalParams,
-    gamma_ratios: [f32; 4],
-    grayscale_enhanced_contrast: f32,
     t_sprite: gpu::TextureView,
     s_sprite: gpu::Sampler,
     b_mono_sprites: gpu::BufferPiece,
@@ -336,11 +334,11 @@ pub struct BladeRenderer {
     atlas_sampler: gpu::Sampler,
     #[cfg(target_os = "macos")]
     core_video_texture_cache: CVMetalTextureCache,
+    path_sample_count: u32,
     path_intermediate_texture: gpu::Texture,
     path_intermediate_texture_view: gpu::TextureView,
     path_intermediate_msaa_texture: Option<gpu::Texture>,
     path_intermediate_msaa_texture_view: Option<gpu::TextureView>,
-    rendering_parameters: RenderingParameters,
 }
 
 impl BladeRenderer {
@@ -366,12 +364,17 @@ impl BladeRenderer {
             name: "main",
             buffer_count: 2,
         });
-        let rendering_parameters = RenderingParameters::from_env(context);
-        let pipelines = BladePipelines::new(
-            &context.gpu,
-            surface.info(),
-            rendering_parameters.path_sample_count,
-        );
+        // workaround for https://github.com/zed-industries/zed/issues/26143
+        let path_sample_count = std::env::var("ZED_PATH_SAMPLE_COUNT")
+            .ok()
+            .and_then(|v| v.parse().ok())
+            .or_else(|| {
+                [4, 2, 1]
+                    .into_iter()
+                    .find(|&n| (context.gpu.capabilities().sample_count_mask & n) != 0)
+            })
+            .unwrap_or(1);
+        let pipelines = BladePipelines::new(&context.gpu, surface.info(), path_sample_count);
         let instance_belt = BufferBelt::new(BufferBeltDescriptor {
             memory: gpu::Memory::Shared,
             min_chunk_size: 0x1000,
@@ -398,7 +401,7 @@ impl BladeRenderer {
                 surface.info().format,
                 config.size.width,
                 config.size.height,
-                rendering_parameters.path_sample_count,
+                path_sample_count,
             )
             .unzip();
 
@@ -422,11 +425,11 @@ impl BladeRenderer {
             atlas_sampler,
             #[cfg(target_os = "macos")]
             core_video_texture_cache,
+            path_sample_count,
             path_intermediate_texture,
             path_intermediate_texture_view,
             path_intermediate_msaa_texture,
             path_intermediate_msaa_texture_view,
-            rendering_parameters,
         })
     }
 
@@ -503,7 +506,7 @@ impl BladeRenderer {
                     self.surface.info().format,
                     gpu_size.width,
                     gpu_size.height,
-                    self.rendering_parameters.path_sample_count,
+                    self.path_sample_count,
                 )
                 .unzip();
             self.path_intermediate_msaa_texture = path_intermediate_msaa_texture;
@@ -518,11 +521,8 @@ impl BladeRenderer {
             self.gpu
                 .reconfigure_surface(&mut self.surface, self.surface_config);
             self.pipelines.destroy(&self.gpu);
-            self.pipelines = BladePipelines::new(
-                &self.gpu,
-                self.surface.info(),
-                self.rendering_parameters.path_sample_count,
-            );
+            self.pipelines =
+                BladePipelines::new(&self.gpu, self.surface.info(), self.path_sample_count);
         }
     }
 
@@ -783,10 +783,6 @@ impl BladeRenderer {
                         0,
                         &ShaderMonoSpritesData {
                             globals,
-                            gamma_ratios: self.rendering_parameters.gamma_ratios,
-                            grayscale_enhanced_contrast: self
-                                .rendering_parameters
-                                .grayscale_enhanced_contrast,
                             t_sprite: tex_info.raw_view,
                             s_sprite: self.atlas_sampler,
                             b_mono_sprites: instance_buf,
@@ -988,85 +984,3 @@ fn create_msaa_texture_if_needed(
 
     Some((texture_msaa, texture_view_msaa))
 }
-
-/// A set of parameters that can be set using a corresponding environment variable.
-struct RenderingParameters {
-    // Env var: ZED_PATH_SAMPLE_COUNT
-    // workaround for https://github.com/zed-industries/zed/issues/26143
-    path_sample_count: u32,
-
-    // Env var: ZED_FONTS_GAMMA
-    // Allowed range [1.0, 2.2], other values are clipped
-    // Default: 1.8
-    gamma_ratios: [f32; 4],
-    // Env var: ZED_FONTS_GRAYSCALE_ENHANCED_CONTRAST
-    // Allowed range: [0.0, ..), other values are clipped
-    // Default: 1.0
-    grayscale_enhanced_contrast: f32,
-}
-
-impl RenderingParameters {
-    fn from_env(context: &BladeContext) -> Self {
-        use std::env;
-
-        let path_sample_count = env::var("ZED_PATH_SAMPLE_COUNT")
-            .ok()
-            .and_then(|v| v.parse().ok())
-            .or_else(|| {
-                [4, 2, 1]
-                    .into_iter()
-                    .find(|&n| (context.gpu.capabilities().sample_count_mask & n) != 0)
-            })
-            .unwrap_or(1);
-        let gamma = env::var("ZED_FONTS_GAMMA")
-            .ok()
-            .and_then(|v| v.parse().ok())
-            .unwrap_or(1.8_f32)
-            .clamp(1.0, 2.2);
-        let gamma_ratios = Self::get_gamma_ratios(gamma);
-        let grayscale_enhanced_contrast = env::var("ZED_FONTS_GRAYSCALE_ENHANCED_CONTRAST")
-            .ok()
-            .and_then(|v| v.parse().ok())
-            .unwrap_or(1.0_f32)
-            .max(0.0);
-
-        Self {
-            path_sample_count,
-            gamma_ratios,
-            grayscale_enhanced_contrast,
-        }
-    }
-
-    // Gamma ratios for brightening/darkening edges for better contrast
-    // https://github.com/microsoft/terminal/blob/1283c0f5b99a2961673249fa77c6b986efb5086c/src/renderer/atlas/dwrite.cpp#L50
-    fn get_gamma_ratios(gamma: f32) -> [f32; 4] {
-        const GAMMA_INCORRECT_TARGET_RATIOS: [[f32; 4]; 13] = [
-            [0.0000 / 4.0, 0.0000 / 4.0, 0.0000 / 4.0, 0.0000 / 4.0], // gamma = 1.0
-            [0.0166 / 4.0, -0.0807 / 4.0, 0.2227 / 4.0, -0.0751 / 4.0], // gamma = 1.1
-            [0.0350 / 4.0, -0.1760 / 4.0, 0.4325 / 4.0, -0.1370 / 4.0], // gamma = 1.2
-            [0.0543 / 4.0, -0.2821 / 4.0, 0.6302 / 4.0, -0.1876 / 4.0], // gamma = 1.3
-            [0.0739 / 4.0, -0.3963 / 4.0, 0.8167 / 4.0, -0.2287 / 4.0], // gamma = 1.4
-            [0.0933 / 4.0, -0.5161 / 4.0, 0.9926 / 4.0, -0.2616 / 4.0], // gamma = 1.5
-            [0.1121 / 4.0, -0.6395 / 4.0, 1.1588 / 4.0, -0.2877 / 4.0], // gamma = 1.6
-            [0.1300 / 4.0, -0.7649 / 4.0, 1.3159 / 4.0, -0.3080 / 4.0], // gamma = 1.7
-            [0.1469 / 4.0, -0.8911 / 4.0, 1.4644 / 4.0, -0.3234 / 4.0], // gamma = 1.8
-            [0.1627 / 4.0, -1.0170 / 4.0, 1.6051 / 4.0, -0.3347 / 4.0], // gamma = 1.9
-            [0.1773 / 4.0, -1.1420 / 4.0, 1.7385 / 4.0, -0.3426 / 4.0], // gamma = 2.0
-            [0.1908 / 4.0, -1.2652 / 4.0, 1.8650 / 4.0, -0.3476 / 4.0], // gamma = 2.1
-            [0.2031 / 4.0, -1.3864 / 4.0, 1.9851 / 4.0, -0.3501 / 4.0], // gamma = 2.2
-        ];
-
-        const NORM13: f32 = ((0x10000 as f64) / (255.0 * 255.0) * 4.0) as f32;
-        const NORM24: f32 = ((0x100 as f64) / (255.0) * 4.0) as f32;
-
-        let index = ((gamma * 10.0).round() as usize).clamp(10, 22) - 10;
-        let ratios = GAMMA_INCORRECT_TARGET_RATIOS[index];
-
-        [
-            ratios[0] * NORM13,
-            ratios[1] * NORM24,
-            ratios[2] * NORM13,
-            ratios[3] * NORM24,
-        ]
-    }
-}
diff --git a/crates/gpui/src/platform/blade/shaders.wgsl b/crates/gpui/src/platform/blade/shaders.wgsl
index 55a85c1ec8..95980b54fe 100644
--- a/crates/gpui/src/platform/blade/shaders.wgsl
+++ b/crates/gpui/src/platform/blade/shaders.wgsl
@@ -28,35 +28,6 @@ fn heat_map_color(value: f32, minValue: f32, maxValue: f32, position: vec2<f32>)
 
 */
 
-fn color_brightness(color: vec3<f32>) -> f32 {
-    // REC. 601 luminance coefficients for perceived brightness
-    return dot(color, vec3<f32>(0.30, 0.59, 0.11));
-}
-
-fn light_on_dark_contrast(enhancedContrast: f32, color: vec3<f32>) -> f32 {
-    let brightness = color_brightness(color);
-    let multiplier = saturate(4.0 * (0.75 - brightness));
-    return enhancedContrast * multiplier;
-}
-
-fn enhance_contrast(alpha: f32, k: f32) -> f32 {
-    return alpha * (k + 1.0) / (alpha * k + 1.0);
-}
-
-fn apply_alpha_correction(a: f32, b: f32, g: vec4<f32>) -> f32 {
-    let brightness_adjustment = g.x * b + g.y;
-    let correction = brightness_adjustment * a + (g.z * b + g.w);
-    return a + a * (1.0 - a) * correction;
-}
-
-fn apply_contrast_and_gamma_correction(sample: f32, color: vec3<f32>, enhanced_contrast_factor: f32, gamma_ratios: vec4<f32>) -> f32 {
-    let enhanced_contrast = light_on_dark_contrast(enhanced_contrast_factor, color);
-    let brightness = color_brightness(color);
-
-    let contrasted = enhance_contrast(sample, enhanced_contrast);
-    return apply_alpha_correction(contrasted, brightness, gamma_ratios);
-}
-
 struct GlobalParams {
     viewport_size: vec2<f32>,
     premultiplied_alpha: u32,
@@ -64,8 +35,6 @@ struct GlobalParams {
 }
 
 var<uniform> globals: GlobalParams;
-var<uniform> gamma_ratios: vec4<f32>;
-var<uniform> grayscale_enhanced_contrast: f32;
 var t_sprite: texture_2d<f32>;
 var s_sprite: sampler;
 
@@ -1155,13 +1124,11 @@ fn vs_mono_sprite(@builtin(vertex_index) vertex_id: u32, @builtin(instance_index
 @fragment
 fn fs_mono_sprite(input: MonoSpriteVarying) -> @location(0) vec4<f32> {
     let sample = textureSample(t_sprite, s_sprite, input.tile_position).r;
-    let alpha_corrected = apply_contrast_and_gamma_correction(sample, input.color.rgb, grayscale_enhanced_contrast, gamma_ratios);
-
     // Alpha clip after using the derivatives.
     if (any(input.clip_distances < vec4<f32>(0.0))) {
         return vec4<f32>(0.0);
     }
-    return blend_color(input.color, alpha_corrected);
+    return blend_color(input.color, sample);
 }
 
 // --- polychrome sprites --- //
diff --git a/crates/gpui/src/platform/linux/platform.rs b/crates/gpui/src/platform/linux/platform.rs
index 196e5b65d0..a6e22c42da 100644
--- a/crates/gpui/src/platform/linux/platform.rs
+++ b/crates/gpui/src/platform/linux/platform.rs
@@ -442,6 +442,8 @@ impl<P: LinuxClient + 'static> Platform for P {
         });
     }
 
+    fn on_action_triggered(&self, _action: &dyn Action) {}
+
     fn app_path(&self) -> Result<PathBuf> {
         // get the path of the executable of the current process
         let app_path = env::current_exe()?;
diff --git a/crates/gpui/src/platform/mac/platform.rs b/crates/gpui/src/platform/mac/platform.rs
index 9909c78c47..e0a1d7770d 100644
--- a/crates/gpui/src/platform/mac/platform.rs
+++ b/crates/gpui/src/platform/mac/platform.rs
@@ -177,6 +177,8 @@ pub(crate) struct MacPlatformState {
     dock_menu: Option<id>,
     menus: Option<Vec<OwnedMenu>>,
     keyboard_mapper: Rc<MacKeyboardMapper>,
+    action_menus: Vec<(Box<dyn Action>, id)>,
+    handling_menu_item: bool,
 }
 
 impl Default for MacPlatform {
@@ -219,6 +221,8 @@ impl MacPlatform {
             on_keyboard_layout_change: None,
             menus: None,
             keyboard_mapper,
+            handling_menu_item: false,
+            action_menus: Vec::new(),
         }))
     }
 
@@ -241,6 +245,7 @@ impl MacPlatform {
         menus: &Vec<Menu>,
         delegate: id,
         actions: &mut Vec<Box<dyn Action>>,
+        action_menus: &mut Vec<(Box<dyn Action>, id)>,
         keymap: &Keymap,
     ) -> id {
         unsafe {
@@ -258,6 +263,7 @@ impl MacPlatform {
                         item_config,
                         delegate,
                         actions,
+                        action_menus,
                         keymap,
                     ));
                 }
@@ -292,6 +298,7 @@ impl MacPlatform {
                     &item_config,
                     delegate,
                     actions,
+                    &mut Vec::new(),
                     keymap,
                 ));
             }
@@ -304,6 +311,7 @@ impl MacPlatform {
         item: &MenuItem,
         delegate: id,
         actions: &mut Vec<Box<dyn Action>>,
+        action_menus: &mut Vec<(Box<dyn Action>, id)>,
         keymap: &Keymap,
     ) -> id {
         static DEFAULT_CONTEXT: OnceLock<Vec<KeyContext>> = OnceLock::new();
@@ -412,6 +420,7 @@ impl MacPlatform {
                     let tag = actions.len() as NSInteger;
                     let _: () = msg_send![item, setTag: tag];
                     actions.push(action.boxed_clone());
+                    action_menus.push((action.boxed_clone(), item));
                     item
                 }
                 MenuItem::Submenu(Menu { name, items }) => {
@@ -419,7 +428,13 @@ impl MacPlatform {
                     let submenu = NSMenu::new(nil).autorelease();
                     submenu.setDelegate_(delegate);
                     for item in items {
-                        submenu.addItem_(Self::create_menu_item(item, delegate, actions, keymap));
+                        submenu.addItem_(Self::create_menu_item(
+                            item,
+                            delegate,
+                            actions,
+                            action_menus,
+                            keymap,
+                        ));
                     }
                     item.setSubmenu_(submenu);
                     item.setTitle_(ns_string(name));
@@ -888,6 +903,30 @@ impl Platform for MacPlatform {
         self.0.lock().validate_menu_command = Some(callback);
     }
 
+    fn on_action_triggered(&self, action: &dyn Action) {
+        let menu_item = {
+            let mut state = self.0.lock();
+            let Some(menu_item) = state
+                .action_menus
+                .iter()
+                .find(|(menu_action, _)| menu_action.partial_eq(action))
+                .map(|(_, menu)| *menu)
+            else {
+                return;
+            };
+
+            state.handling_menu_item = true;
+            menu_item
+        };
+
+        unsafe {
+            let parent: id = msg_send![menu_item, menu];
+            let index: NSInteger = msg_send![parent, indexOfItem: menu_item];
+            let _: () = msg_send![parent, performActionForItemAtIndex: index];
+        }
+        self.0.lock().handling_menu_item = false;
+    }
+
     fn keyboard_layout(&self) -> Box<dyn PlatformKeyboardLayout> {
         Box::new(MacKeyboardLayout::new())
     }
@@ -905,15 +944,24 @@ impl Platform for MacPlatform {
     }
 
     fn set_menus(&self, menus: Vec<Menu>, keymap: &Keymap) {
+        let mut action_menus = Vec::new();
         unsafe {
             let app: id = msg_send![APP_CLASS, sharedApplication];
             let mut state = self.0.lock();
             let actions = &mut state.menu_actions;
-            let menu = self.create_menu_bar(&menus, NSWindow::delegate(app), actions, keymap);
+            let menu = self.create_menu_bar(
+                &menus,
+                NSWindow::delegate(app),
+                actions,
+                &mut action_menus,
+                keymap,
+            );
             drop(state);
             app.setMainMenu_(menu);
         }
-        self.0.lock().menus = Some(menus.into_iter().map(|menu| menu.owned()).collect());
+        let mut state = self.0.lock();
+        state.menus = Some(menus.into_iter().map(|menu| menu.owned()).collect());
+        state.action_menus = action_menus;
     }
 
     fn get_menus(&self) -> Option<Vec<OwnedMenu>> {
@@ -1465,6 +1513,12 @@ extern "C" fn handle_menu_item(this: &mut Object, _: Sel, item: id) {
     unsafe {
         let platform = get_mac_platform(this);
         let mut lock = platform.0.lock();
+
+        // If the menu item is currently being handled, i.e., this action is being triggered as a
+        // result of a keyboard shortcut causing the menu to flash, don't do anything.
+        if lock.handling_menu_item {
+            return;
+        }
         if let Some(mut callback) = lock.menu_command.take() {
             let tag: NSInteger = msg_send![item, tag];
             let index = tag as usize;
diff --git a/crates/gpui/src/platform/test/platform.rs b/crates/gpui/src/platform/test/platform.rs
index 15b909199f..85b84248ff 100644
--- a/crates/gpui/src/platform/test/platform.rs
+++ b/crates/gpui/src/platform/test/platform.rs
@@ -1,5 +1,5 @@
 use crate::{
-    AnyWindowHandle, BackgroundExecutor, ClipboardItem, CursorStyle, DevicePixels,
+    Action, AnyWindowHandle, BackgroundExecutor, ClipboardItem, CursorStyle, DevicePixels,
     DummyKeyboardMapper, ForegroundExecutor, Keymap, NoopTextSystem, Platform, PlatformDisplay,
     PlatformKeyboardLayout, PlatformKeyboardMapper, PlatformTextSystem, PromptButton,
     ScreenCaptureFrame, ScreenCaptureSource, ScreenCaptureStream, SourceMetadata, Task,
@@ -378,6 +378,8 @@ impl Platform for TestPlatform {
 
     fn on_validate_app_menu_command(&self, _callback: Box<dyn FnMut(&dyn crate::Action) -> bool>) {}
 
+    fn on_action_triggered(&self, _action: &dyn Action) {}
+
     fn app_path(&self) -> Result<std::path::PathBuf> {
         unimplemented!()
     }
diff --git a/crates/gpui/src/platform/windows/platform.rs b/crates/gpui/src/platform/windows/platform.rs
index 2eb1862f36..0ad343f2d3 100644
--- a/crates/gpui/src/platform/windows/platform.rs
+++ b/crates/gpui/src/platform/windows/platform.rs
@@ -536,6 +536,8 @@ impl Platform for WindowsPlatform {
             .validate_app_menu_command = Some(callback);
     }
 
+    fn on_action_triggered(&self, _action: &dyn Action) {}
+
     fn app_path(&self) -> Result<PathBuf> {
         Ok(std::env::current_exe()?)
     }
diff --git a/crates/gpui/src/tab_stop.rs b/crates/gpui/src/tab_stop.rs
index ea69bd1130..c4d2fda6e9 100644
--- a/crates/gpui/src/tab_stop.rs
+++ b/crates/gpui/src/tab_stop.rs
@@ -1,320 +1,74 @@
-use std::fmt::Debug;
-
-use ::sum_tree::SumTree;
-use collections::FxHashMap;
-use sum_tree::Bias;
-
 use crate::{FocusHandle, FocusId};
 
-/// Represents a collection of focus handles using the tab-index APIs.
-#[derive(Debug)]
-pub(crate) struct TabStopMap {
-    current_path: TabStopPath,
-    pub(crate) insertion_history: Vec<TabStopOperation>,
-    by_id: FxHashMap<FocusId, TabStopNode>,
-    order: SumTree<TabStopNode>,
+/// Represents a collection of tab handles.
+///
+/// Used to manage the `Tab` event to switch between focus handles.
+#[derive(Default)]
+pub(crate) struct TabHandles {
+    pub(crate) handles: Vec<FocusHandle>,
 }
 
-#[derive(Debug, Clone)]
-pub enum TabStopOperation {
-    Insert(FocusHandle),
-    Group(TabIndex),
-    GroupEnd,
-}
-
-impl TabStopOperation {
-    fn focus_handle(&self) -> Option<&FocusHandle> {
-        match self {
-            TabStopOperation::Insert(focus_handle) => Some(focus_handle),
-            _ => None,
+impl TabHandles {
+    pub(crate) fn insert(&mut self, focus_handle: &FocusHandle) {
+        if !focus_handle.tab_stop {
+            return;
         }
-    }
-}
-
-type TabIndex = isize;
-
-#[derive(Debug, Default, PartialEq, Eq, Clone, Ord, PartialOrd)]
-struct TabStopPath(smallvec::SmallVec<[TabIndex; 6]>);
-
-#[derive(Clone, Debug, Default, Eq, PartialEq)]
-struct TabStopNode {
-    /// Path to access the node in the tree
-    /// The final node in the list is a leaf node corresponding to an actual focus handle,
-    /// all other nodes are group nodes
-    path: TabStopPath,
-    /// index into the backing array of nodes. Corresponds to insertion order
-    node_insertion_index: usize,
 
-    /// Whether this node is a tab stop
-    tab_stop: bool,
-}
+        let focus_handle = focus_handle.clone();
 
-impl Ord for TabStopNode {
-    fn cmp(&self, other: &Self) -> std::cmp::Ordering {
-        self.path
-            .cmp(&other.path)
-            .then(self.node_insertion_index.cmp(&other.node_insertion_index))
-    }
-}
-
-impl PartialOrd for TabStopNode {
-    fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {
-        Some(self.cmp(&other))
-    }
-}
-
-impl Default for TabStopMap {
-    fn default() -> Self {
-        Self {
-            current_path: TabStopPath::default(),
-            insertion_history: Vec::new(),
-            by_id: FxHashMap::default(),
-            order: SumTree::new(()),
-        }
-    }
-}
-
-impl TabStopMap {
-    pub fn insert(&mut self, focus_handle: &FocusHandle) {
-        self.insertion_history
-            .push(TabStopOperation::Insert(focus_handle.clone()));
-        let mut path = self.current_path.clone();
-        path.0.push(focus_handle.tab_index);
-        let order = TabStopNode {
-            node_insertion_index: self.insertion_history.len() - 1,
-            tab_stop: focus_handle.tab_stop,
-            path,
-        };
-        self.by_id.insert(focus_handle.id, order.clone());
-        self.order.insert_or_replace(order, ());
-    }
-
-    pub fn begin_group(&mut self, tab_index: isize) {
-        self.insertion_history
-            .push(TabStopOperation::Group(tab_index));
-        self.current_path.0.push(tab_index);
-    }
-
-    pub fn end_group(&mut self) {
-        self.insertion_history.push(TabStopOperation::GroupEnd);
-        self.current_path.0.pop();
-    }
-
-    pub fn clear(&mut self) {
-        *self = Self::default();
-        self.current_path.0.clear();
-        self.insertion_history.clear();
-        self.by_id.clear();
-        self.order = SumTree::new(());
-    }
-
-    pub fn next(&self, focused_id: Option<&FocusId>) -> Option<FocusHandle> {
-        let Some(focused_id) = focused_id else {
-            let first = self.order.first()?;
-            if first.tab_stop {
-                return self.focus_handle_for_order(first);
-            } else {
-                return self
-                    .next_inner(first)
-                    .and_then(|order| self.focus_handle_for_order(order));
-            }
-        };
-
-        let node = self.tab_node_for_focus_id(focused_id)?;
-        let item = self.next_inner(node);
-
-        if let Some(item) = item {
-            self.focus_handle_for_order(&item)
-        } else {
-            self.next(None)
-        }
-    }
-
-    fn next_inner(&self, node: &TabStopNode) -> Option<&TabStopNode> {
-        let mut cursor = self.order.cursor::<TabStopNode>(());
-        cursor.seek(&node, Bias::Left);
-        cursor.next();
-        while let Some(item) = cursor.item()
-            && !item.tab_stop
+        // Insert handle with same tab_index last
+        if let Some(ix) = self
+            .handles
+            .iter()
+            .position(|tab| tab.tab_index > focus_handle.tab_index)
         {
-            cursor.next();
-        }
-
-        cursor.item()
-    }
-
-    pub fn prev(&self, focused_id: Option<&FocusId>) -> Option<FocusHandle> {
-        let Some(focused_id) = focused_id else {
-            let last = self.order.last()?;
-            if last.tab_stop {
-                return self.focus_handle_for_order(last);
-            } else {
-                return self
-                    .prev_inner(last)
-                    .and_then(|order| self.focus_handle_for_order(order));
-            }
-        };
-
-        let node = self.tab_node_for_focus_id(focused_id)?;
-        let item = self.prev_inner(node);
-
-        if let Some(item) = item {
-            self.focus_handle_for_order(&item)
+            self.handles.insert(ix, focus_handle);
         } else {
-            self.prev(None)
+            self.handles.push(focus_handle);
         }
     }
 
-    fn prev_inner(&self, node: &TabStopNode) -> Option<&TabStopNode> {
-        let mut cursor = self.order.cursor::<TabStopNode>(());
-        cursor.seek(&node, Bias::Left);
-        cursor.prev();
-        while let Some(item) = cursor.item()
-            && !item.tab_stop
-        {
-            cursor.prev();
-        }
-
-        cursor.item()
+    pub(crate) fn clear(&mut self) {
+        self.handles.clear();
     }
 
-    pub fn replay(&mut self, nodes: &[TabStopOperation]) {
-        for node in nodes {
-            match node {
-                TabStopOperation::Insert(focus_handle) => self.insert(focus_handle),
-                TabStopOperation::Group(tab_index) => self.begin_group(*tab_index),
-                TabStopOperation::GroupEnd => self.end_group(),
-            }
-        }
+    fn current_index(&self, focused_id: Option<&FocusId>) -> Option<usize> {
+        self.handles.iter().position(|h| Some(&h.id) == focused_id)
     }
 
-    pub fn paint_index(&self) -> usize {
-        self.insertion_history.len()
-    }
+    pub(crate) fn next(&self, focused_id: Option<&FocusId>) -> Option<FocusHandle> {
+        let next_ix = self
+            .current_index(focused_id)
+            .and_then(|ix| {
+                let next_ix = ix + 1;
+                (next_ix < self.handles.len()).then_some(next_ix)
+            })
+            .unwrap_or_default();
 
-    fn focus_handle_for_order(&self, order: &TabStopNode) -> Option<FocusHandle> {
-        let handle = self.insertion_history[order.node_insertion_index].focus_handle();
-        debug_assert!(
-            handle.is_some(),
-            "The order node did not correspond to an element, this is a GPUI bug"
-        );
-        handle.cloned()
+        self.handles.get(next_ix).cloned()
     }
 
-    fn tab_node_for_focus_id(&self, focused_id: &FocusId) -> Option<&TabStopNode> {
-        let Some(order) = self.by_id.get(focused_id) else {
-            return None;
+    pub(crate) fn prev(&self, focused_id: Option<&FocusId>) -> Option<FocusHandle> {
+        let ix = self.current_index(focused_id).unwrap_or_default();
+        let prev_ix = if ix == 0 {
+            self.handles.len().saturating_sub(1)
+        } else {
+            ix.saturating_sub(1)
         };
-        Some(order)
-    }
-}
-
-mod sum_tree_impl {
-    use sum_tree::SeekTarget;
-
-    use crate::tab_stop::{TabStopNode, TabStopPath};
-
-    #[derive(Clone, Debug)]
-    pub struct TabStopOrderNodeSummary {
-        max_index: usize,
-        max_path: TabStopPath,
-        pub tab_stops: usize,
-    }
-
-    pub type TabStopCount = usize;
-
-    impl sum_tree::ContextLessSummary for TabStopOrderNodeSummary {
-        fn zero() -> Self {
-            TabStopOrderNodeSummary {
-                max_index: 0,
-                max_path: TabStopPath::default(),
-                tab_stops: 0,
-            }
-        }
-
-        fn add_summary(&mut self, summary: &Self) {
-            self.max_index = summary.max_index;
-            self.max_path = summary.max_path.clone();
-            self.tab_stops += summary.tab_stops;
-        }
-    }
-
-    impl sum_tree::KeyedItem for TabStopNode {
-        type Key = Self;
-
-        fn key(&self) -> Self::Key {
-            self.clone()
-        }
-    }
-
-    impl sum_tree::Item for TabStopNode {
-        type Summary = TabStopOrderNodeSummary;
-
-        fn summary(&self, _cx: <Self::Summary as sum_tree::Summary>::Context<'_>) -> Self::Summary {
-            TabStopOrderNodeSummary {
-                max_index: self.node_insertion_index,
-                max_path: self.path.clone(),
-                tab_stops: if self.tab_stop { 1 } else { 0 },
-            }
-        }
-    }
-
-    impl<'a> sum_tree::Dimension<'a, TabStopOrderNodeSummary> for TabStopCount {
-        fn zero(_: <TabStopOrderNodeSummary as sum_tree::Summary>::Context<'_>) -> Self {
-            0
-        }
-
-        fn add_summary(
-            &mut self,
-            summary: &'a TabStopOrderNodeSummary,
-            _: <TabStopOrderNodeSummary as sum_tree::Summary>::Context<'_>,
-        ) {
-            *self += summary.tab_stops;
-        }
-    }
-
-    impl<'a> sum_tree::Dimension<'a, TabStopOrderNodeSummary> for TabStopNode {
-        fn zero(_: <TabStopOrderNodeSummary as sum_tree::Summary>::Context<'_>) -> Self {
-            TabStopNode::default()
-        }
 
-        fn add_summary(
-            &mut self,
-            summary: &'a TabStopOrderNodeSummary,
-            _: <TabStopOrderNodeSummary as sum_tree::Summary>::Context<'_>,
-        ) {
-            self.node_insertion_index = summary.max_index;
-            self.path = summary.max_path.clone();
-        }
-    }
-
-    impl<'a, 'b> SeekTarget<'a, TabStopOrderNodeSummary, TabStopNode> for &'b TabStopNode {
-        fn cmp(
-            &self,
-            cursor_location: &TabStopNode,
-            _: <TabStopOrderNodeSummary as sum_tree::Summary>::Context<'_>,
-        ) -> std::cmp::Ordering {
-            Iterator::cmp(self.path.0.iter(), cursor_location.path.0.iter()).then(
-                <usize as Ord>::cmp(
-                    &self.node_insertion_index,
-                    &cursor_location.node_insertion_index,
-                ),
-            )
-        }
+        self.handles.get(prev_ix).cloned()
     }
 }
 
 #[cfg(test)]
 mod tests {
-    use itertools::Itertools as _;
-
-    use crate::{FocusHandle, FocusId, FocusMap, TabStopMap};
+    use crate::{FocusHandle, FocusMap, TabHandles};
     use std::sync::Arc;
 
     #[test]
     fn test_tab_handles() {
         let focus_map = Arc::new(FocusMap::default());
-        let mut tab_index_map = TabStopMap::default();
+        let mut tab = TabHandles::default();
 
         let focus_handles = vec![
             FocusHandle::new(&focus_map).tab_stop(true).tab_index(0),
@@ -327,281 +81,72 @@ mod tests {
         ];
 
         for handle in focus_handles.iter() {
-            tab_index_map.insert(handle);
+            tab.insert(handle);
         }
-        let expected = [
-            focus_handles[0].clone(),
-            focus_handles[5].clone(),
-            focus_handles[1].clone(),
-            focus_handles[2].clone(),
-            focus_handles[6].clone(),
-        ];
-
-        let mut prev = None;
-        let mut found = vec![];
-        for _ in 0..expected.len() {
-            let handle = tab_index_map.next(prev.as_ref()).unwrap();
-            prev = Some(handle.id);
-            found.push(handle.id);
-        }
-
         assert_eq!(
-            found,
-            expected.iter().map(|handle| handle.id).collect::<Vec<_>>()
+            tab.handles
+                .iter()
+                .map(|handle| handle.id)
+                .collect::<Vec<_>>(),
+            vec![
+                focus_handles[0].id,
+                focus_handles[5].id,
+                focus_handles[1].id,
+                focus_handles[2].id,
+                focus_handles[6].id,
+            ]
         );
 
         // Select first tab index if no handle is currently focused.
-        assert_eq!(tab_index_map.next(None), Some(expected[0].clone()));
+        assert_eq!(tab.next(None), Some(tab.handles[0].clone()));
         // Select last tab index if no handle is currently focused.
-        assert_eq!(tab_index_map.prev(None), expected.last().cloned(),);
+        assert_eq!(
+            tab.prev(None),
+            Some(tab.handles[tab.handles.len() - 1].clone())
+        );
 
         assert_eq!(
-            tab_index_map.next(Some(&expected[0].id)),
-            Some(expected[1].clone())
+            tab.next(Some(&tab.handles[0].id)),
+            Some(tab.handles[1].clone())
         );
         assert_eq!(
-            tab_index_map.next(Some(&expected[1].id)),
-            Some(expected[2].clone())
+            tab.next(Some(&tab.handles[1].id)),
+            Some(tab.handles[2].clone())
         );
         assert_eq!(
-            tab_index_map.next(Some(&expected[2].id)),
-            Some(expected[3].clone())
+            tab.next(Some(&tab.handles[2].id)),
+            Some(tab.handles[3].clone())
         );
         assert_eq!(
-            tab_index_map.next(Some(&expected[3].id)),
-            Some(expected[4].clone())
+            tab.next(Some(&tab.handles[3].id)),
+            Some(tab.handles[4].clone())
         );
         assert_eq!(
-            tab_index_map.next(Some(&expected[4].id)),
-            Some(expected[0].clone())
+            tab.next(Some(&tab.handles[4].id)),
+            Some(tab.handles[0].clone())
         );
 
         // prev
-        assert_eq!(tab_index_map.prev(None), Some(expected[4].clone()));
+        assert_eq!(tab.prev(None), Some(tab.handles[4].clone()));
         assert_eq!(
-            tab_index_map.prev(Some(&expected[0].id)),
-            Some(expected[4].clone())
+            tab.prev(Some(&tab.handles[0].id)),
+            Some(tab.handles[4].clone())
         );
         assert_eq!(
-            tab_index_map.prev(Some(&expected[1].id)),
-            Some(expected[0].clone())
+            tab.prev(Some(&tab.handles[1].id)),
+            Some(tab.handles[0].clone())
         );
         assert_eq!(
-            tab_index_map.prev(Some(&expected[2].id)),
-            Some(expected[1].clone())
+            tab.prev(Some(&tab.handles[2].id)),
+            Some(tab.handles[1].clone())
         );
         assert_eq!(
-            tab_index_map.prev(Some(&expected[3].id)),
-            Some(expected[2].clone())
+            tab.prev(Some(&tab.handles[3].id)),
+            Some(tab.handles[2].clone())
         );
         assert_eq!(
-            tab_index_map.prev(Some(&expected[4].id)),
-            Some(expected[3].clone())
+            tab.prev(Some(&tab.handles[4].id)),
+            Some(tab.handles[3].clone())
         );
     }
-
-    #[test]
-    fn test_tab_non_stop_filtering() {
-        let focus_map = Arc::new(FocusMap::default());
-        let mut tab_index_map = TabStopMap::default();
-
-        // Check that we can query next from a non-stop tab
-        let tab_non_stop_1 = FocusHandle::new(&focus_map).tab_stop(false).tab_index(1);
-        let tab_stop_2 = FocusHandle::new(&focus_map).tab_stop(true).tab_index(2);
-        tab_index_map.insert(&tab_non_stop_1);
-        tab_index_map.insert(&tab_stop_2);
-        let result = tab_index_map.next(Some(&tab_non_stop_1.id)).unwrap();
-        assert_eq!(result.id, tab_stop_2.id);
-
-        // Check that we skip over non-stop tabs
-        let tab_stop_0 = FocusHandle::new(&focus_map).tab_stop(true).tab_index(0);
-        let tab_non_stop_0 = FocusHandle::new(&focus_map).tab_stop(false).tab_index(0);
-        tab_index_map.insert(&tab_stop_0);
-        tab_index_map.insert(&tab_non_stop_0);
-        let result = tab_index_map.next(Some(&tab_stop_0.id)).unwrap();
-        assert_eq!(result.id, tab_stop_2.id);
-    }
-
-    #[must_use]
-    struct TabStopMapTest {
-        tab_map: TabStopMap,
-        focus_map: Arc<FocusMap>,
-        expected: Vec<(usize, FocusId)>,
-    }
-
-    impl TabStopMapTest {
-        #[must_use]
-        fn new() -> Self {
-            Self {
-                tab_map: TabStopMap::default(),
-                focus_map: Arc::new(FocusMap::default()),
-                expected: Vec::default(),
-            }
-        }
-
-        #[must_use]
-        fn tab_non_stop(mut self, index: isize) -> Self {
-            let handle = FocusHandle::new(&self.focus_map)
-                .tab_stop(false)
-                .tab_index(index);
-            self.tab_map.insert(&handle);
-            self
-        }
-
-        #[must_use]
-        fn tab_stop(mut self, index: isize, expected: usize) -> Self {
-            let handle = FocusHandle::new(&self.focus_map)
-                .tab_stop(true)
-                .tab_index(index);
-            self.tab_map.insert(&handle);
-            self.expected.push((expected, handle.id));
-            self.expected.sort_by_key(|(expected, _)| *expected);
-            self
-        }
-
-        #[must_use]
-        fn tab_group(mut self, tab_index: isize, children: impl FnOnce(Self) -> Self) -> Self {
-            self.tab_map.begin_group(tab_index);
-            self = children(self);
-            self.tab_map.end_group();
-            self
-        }
-
-        fn traverse_tab_map(
-            &self,
-            traverse: impl Fn(&TabStopMap, Option<&FocusId>) -> Option<FocusHandle>,
-        ) -> Vec<FocusId> {
-            let mut last_focus_id = None;
-            let mut found = vec![];
-            for _ in 0..self.expected.len() {
-                let handle = traverse(&self.tab_map, last_focus_id.as_ref()).unwrap();
-                last_focus_id = Some(handle.id);
-                found.push(handle.id);
-            }
-            found
-        }
-
-        fn assert(self) {
-            let mut expected = self.expected.iter().map(|(_, id)| *id).collect_vec();
-
-            // Check next order
-            let forward_found = self.traverse_tab_map(|tab_map, prev| tab_map.next(prev));
-            assert_eq!(forward_found, expected);
-
-            // Test overflow. Last to first
-            assert_eq!(
-                self.tab_map
-                    .next(forward_found.last())
-                    .map(|handle| handle.id),
-                expected.first().cloned()
-            );
-
-            // Check previous order
-            let reversed_found = self.traverse_tab_map(|tab_map, prev| tab_map.prev(prev));
-            expected.reverse();
-            assert_eq!(reversed_found, expected);
-
-            // Test overflow. First to last
-            assert_eq!(
-                self.tab_map
-                    .prev(reversed_found.last())
-                    .map(|handle| handle.id),
-                expected.first().cloned(),
-            );
-        }
-    }
-
-    #[test]
-    fn test_with_disabled_tab_stop() {
-        TabStopMapTest::new()
-            .tab_stop(0, 0)
-            .tab_non_stop(1)
-            .tab_stop(2, 1)
-            .tab_stop(3, 2)
-            .assert();
-    }
-
-    #[test]
-    fn test_with_multiple_disabled_tab_stops() {
-        TabStopMapTest::new()
-            .tab_non_stop(0)
-            .tab_stop(1, 0)
-            .tab_non_stop(3)
-            .tab_stop(3, 1)
-            .tab_non_stop(4)
-            .assert();
-    }
-
-    #[test]
-    fn test_tab_group_functionality() {
-        TabStopMapTest::new()
-            .tab_stop(0, 0)
-            .tab_stop(0, 1)
-            .tab_group(2, |t| t.tab_stop(0, 2).tab_stop(1, 3))
-            .tab_stop(3, 4)
-            .tab_stop(4, 5)
-            .assert()
-    }
-
-    #[test]
-    fn test_sibling_groups() {
-        TabStopMapTest::new()
-            .tab_stop(0, 0)
-            .tab_stop(1, 1)
-            .tab_group(2, |test| test.tab_stop(0, 2).tab_stop(1, 3))
-            .tab_stop(3, 4)
-            .tab_stop(4, 5)
-            .tab_group(6, |test| test.tab_stop(0, 6).tab_stop(1, 7))
-            .tab_stop(7, 8)
-            .tab_stop(8, 9)
-            .assert();
-    }
-
-    #[test]
-    fn test_nested_group() {
-        TabStopMapTest::new()
-            .tab_stop(0, 0)
-            .tab_stop(1, 1)
-            .tab_group(2, |t| {
-                t.tab_group(0, |t| t.tab_stop(0, 2).tab_stop(1, 3))
-                    .tab_stop(1, 4)
-            })
-            .tab_stop(3, 5)
-            .tab_stop(4, 6)
-            .assert();
-    }
-
-    #[test]
-    fn test_sibling_nested_groups() {
-        TabStopMapTest::new()
-            .tab_stop(0, 0)
-            .tab_stop(1, 1)
-            .tab_group(2, |builder| {
-                builder
-                    .tab_stop(0, 2)
-                    .tab_stop(2, 5)
-                    .tab_group(1, |builder| builder.tab_stop(0, 3).tab_stop(1, 4))
-                    .tab_group(3, |builder| builder.tab_stop(0, 6).tab_stop(1, 7))
-            })
-            .tab_stop(3, 8)
-            .tab_stop(4, 9)
-            .assert();
-    }
-
-    #[test]
-    fn test_sibling_nested_groups_out_of_order() {
-        TabStopMapTest::new()
-            .tab_stop(9, 9)
-            .tab_stop(8, 8)
-            .tab_group(7, |builder| {
-                builder
-                    .tab_stop(0, 2)
-                    .tab_stop(2, 5)
-                    .tab_group(3, |builder| builder.tab_stop(1, 7).tab_stop(0, 6))
-                    .tab_group(1, |builder| builder.tab_stop(0, 3).tab_stop(1, 4))
-            })
-            .tab_stop(3, 0)
-            .tab_stop(4, 1)
-            .assert();
-    }
 }
diff --git a/crates/gpui/src/window.rs b/crates/gpui/src/window.rs
index 19faa1135f..e81751f61c 100644
--- a/crates/gpui/src/window.rs
+++ b/crates/gpui/src/window.rs
@@ -13,7 +13,7 @@ use crate::{
     Render, RenderGlyphParams, RenderImage, RenderImageParams, RenderSvgParams, Replay, ResizeEdge,
     SMOOTH_SVG_SCALE_FACTOR, SUBPIXEL_VARIANTS_X, SUBPIXEL_VARIANTS_Y, ScaledPixels, Scene, Shadow,
     SharedString, Size, StrikethroughStyle, Style, SubscriberSet, Subscription, SystemWindowTab,
-    SystemWindowTabController, TabStopMap, TaffyLayoutEngine, Task, TextStyle, TextStyleRefinement,
+    SystemWindowTabController, TabHandles, TaffyLayoutEngine, Task, TextStyle, TextStyleRefinement,
     TransformationMatrix, Underline, UnderlineStyle, WindowAppearance, WindowBackgroundAppearance,
     WindowBounds, WindowControls, WindowDecorations, WindowOptions, WindowParams, WindowTextSystem,
     point, prelude::*, px, rems, size, transparent_black,
@@ -684,7 +684,7 @@ pub(crate) struct Frame {
     pub(crate) next_inspector_instance_ids: FxHashMap<Rc<crate::InspectorElementPath>, usize>,
     #[cfg(any(feature = "inspector", debug_assertions))]
     pub(crate) inspector_hitboxes: FxHashMap<HitboxId, crate::InspectorElementId>,
-    pub(crate) tab_stops: TabStopMap,
+    pub(crate) tab_handles: TabHandles,
 }
 
 #[derive(Clone, Default)]
@@ -733,7 +733,7 @@ impl Frame {
 
             #[cfg(any(feature = "inspector", debug_assertions))]
             inspector_hitboxes: FxHashMap::default(),
-            tab_stops: TabStopMap::default(),
+            tab_handles: TabHandles::default(),
         }
     }
 
@@ -749,7 +749,7 @@ impl Frame {
         self.hitboxes.clear();
         self.window_control_hitboxes.clear();
         self.deferred_draws.clear();
-        self.tab_stops.clear();
+        self.tab_handles.clear();
         self.focus = None;
 
         #[cfg(any(feature = "inspector", debug_assertions))]
@@ -1415,7 +1415,7 @@ impl Window {
             return;
         }
 
-        if let Some(handle) = self.rendered_frame.tab_stops.next(self.focus.as_ref()) {
+        if let Some(handle) = self.rendered_frame.tab_handles.next(self.focus.as_ref()) {
             self.focus(&handle)
         }
     }
@@ -1426,7 +1426,7 @@ impl Window {
             return;
         }
 
-        if let Some(handle) = self.rendered_frame.tab_stops.prev(self.focus.as_ref()) {
+        if let Some(handle) = self.rendered_frame.tab_handles.prev(self.focus.as_ref()) {
             self.focus(&handle)
         }
     }
@@ -2285,7 +2285,7 @@ impl Window {
             input_handlers_index: self.next_frame.input_handlers.len(),
             cursor_styles_index: self.next_frame.cursor_styles.len(),
             accessed_element_states_index: self.next_frame.accessed_element_states.len(),
-            tab_handle_index: self.next_frame.tab_stops.paint_index(),
+            tab_handle_index: self.next_frame.tab_handles.handles.len(),
             line_layout_index: self.text_system.layout_index(),
         }
     }
@@ -2315,9 +2315,11 @@ impl Window {
                 .iter()
                 .map(|(id, type_id)| (GlobalElementId(id.0.clone()), *type_id)),
         );
-        self.next_frame.tab_stops.replay(
-            &self.rendered_frame.tab_stops.insertion_history
-                [range.start.tab_handle_index..range.end.tab_handle_index],
+        self.next_frame.tab_handles.handles.extend(
+            self.rendered_frame.tab_handles.handles
+                [range.start.tab_handle_index..range.end.tab_handle_index]
+                .iter()
+                .cloned(),
         );
 
         self.text_system
@@ -2732,19 +2734,6 @@ impl Window {
         }
     }
 
-    /// Executes the given closure within the context of a tab group.
-    #[inline]
-    pub fn with_tab_group<R>(&mut self, index: Option<isize>, f: impl FnOnce(&mut Self) -> R) -> R {
-        if let Some(index) = index {
-            self.next_frame.tab_stops.begin_group(index);
-            let result = f(self);
-            self.next_frame.tab_stops.end_group();
-            result
-        } else {
-            f(self)
-        }
-    }
-
     /// Defers the drawing of the given element, scheduling it to be painted on top of the currently-drawn tree
     /// at a later time. The `priority` parameter determines the drawing order relative to other deferred elements,
     /// with higher values being drawn on top.
@@ -4034,6 +4023,8 @@ impl Window {
                 let any_action = action.as_any();
                 if action_type == any_action.type_id() {
                     cx.propagate_event = false; // Actions stop propagation by default during the bubble phase
+                    cx.platform.on_action_triggered(action);
+
                     listener(any_action, DispatchPhase::Bubble, self, cx);
 
                     if !cx.propagate_event {
@@ -4051,6 +4042,7 @@ impl Window {
             for listener in global_listeners.iter().rev() {
                 cx.propagate_event = false; // Actions stop propagation by default during the bubble phase
 
+                cx.platform.on_action_triggered(action);
                 listener(action.as_any(), DispatchPhase::Bubble, cx);
                 if !cx.propagate_event {
                     break;
diff --git a/crates/keymap_editor/src/keymap_editor.rs b/crates/keymap_editor/src/keymap_editor.rs
index 23854df2e4..8a1e494d09 100644
--- a/crates/keymap_editor/src/keymap_editor.rs
+++ b/crates/keymap_editor/src/keymap_editor.rs
@@ -1569,7 +1569,7 @@ impl Render for KeymapEditor {
                         h_flex()
                             .gap_2()
                             .child(
-                                h_flex()
+                                div()
                                     .key_context({
                                         let mut context = KeyContext::new_with_defaults();
                                         context.add("BufferSearchBar");
diff --git a/crates/language/src/buffer.rs b/crates/language/src/buffer.rs
index e6f11d38d2..b76bb7521b 100644
--- a/crates/language/src/buffer.rs
+++ b/crates/language/src/buffer.rs
@@ -4628,12 +4628,12 @@ impl BufferSnapshot {
         self.file.as_ref()
     }
 
-    pub fn resolve_file_path(&self, include_root: bool, cx: &App) -> Option<String> {
+    pub fn resolve_file_path(&self, cx: &App, include_root: bool) -> Option<PathBuf> {
         if let Some(file) = self.file() {
             if file.path().file_name().is_none() || include_root {
-                Some(file.full_path(cx).to_string_lossy().to_string())
+                Some(file.full_path(cx))
             } else {
-                Some(file.path().display(file.path_style(cx)).to_string())
+                Some(file.path().as_std_path().to_owned())
             }
         } else {
             None
diff --git a/crates/language_model/src/language_model.rs b/crates/language_model/src/language_model.rs
index 38f2b09590..418a864648 100644
--- a/crates/language_model/src/language_model.rs
+++ b/crates/language_model/src/language_model.rs
@@ -50,9 +50,6 @@ pub const OPEN_AI_PROVIDER_ID: LanguageModelProviderId = LanguageModelProviderId
 pub const OPEN_AI_PROVIDER_NAME: LanguageModelProviderName =
     LanguageModelProviderName::new("OpenAI");
 
-pub const X_AI_PROVIDER_ID: LanguageModelProviderId = LanguageModelProviderId::new("x_ai");
-pub const X_AI_PROVIDER_NAME: LanguageModelProviderName = LanguageModelProviderName::new("xAI");
-
 pub const ZED_CLOUD_PROVIDER_ID: LanguageModelProviderId = LanguageModelProviderId::new("zed.dev");
 pub const ZED_CLOUD_PROVIDER_NAME: LanguageModelProviderName =
     LanguageModelProviderName::new("Zed");
diff --git a/crates/language_models/Cargo.toml b/crates/language_models/Cargo.toml
index 28cfe69d96..d4ae4b26b6 100644
--- a/crates/language_models/Cargo.toml
+++ b/crates/language_models/Cargo.toml
@@ -28,6 +28,8 @@ convert_case.workspace = true
 copilot.workspace = true
 credentials_provider.workspace = true
 deepseek = { workspace = true, features = ["schemars"] }
+editor.workspace = true
+feature_flags.workspace = true
 fs.workspace = true
 futures.workspace = true
 google_ai = { workspace = true, features = ["schemars"] }
@@ -51,6 +53,7 @@ serde_json.workspace = true
 settings.workspace = true
 smol.workspace = true
 strum.workspace = true
+theme.workspace = true
 thiserror.workspace = true
 tiktoken-rs.workspace = true
 tokio = { workspace = true, features = ["rt", "rt-multi-thread"] }
diff --git a/crates/language_models/src/provider/anthropic.rs b/crates/language_models/src/provider/anthropic.rs
index ae2d324b6f..c9cd56f632 100644
--- a/crates/language_models/src/provider/anthropic.rs
+++ b/crates/language_models/src/provider/anthropic.rs
@@ -1,11 +1,14 @@
+use crate::api_key::ApiKeyState;
+use crate::ui::InstructionListItem;
 use anthropic::{
     ANTHROPIC_API_URL, AnthropicError, AnthropicModelMode, ContentDelta, Event, ResponseContent,
     ToolResultContent, ToolResultPart, Usage,
 };
 use anyhow::{Result, anyhow};
 use collections::{BTreeMap, HashMap};
+use editor::{Editor, EditorElement, EditorStyle};
 use futures::{FutureExt, Stream, StreamExt, future, future::BoxFuture, stream::BoxStream};
-use gpui::{AnyView, App, AsyncApp, Context, Entity, Task};
+use gpui::{AnyView, App, AsyncApp, Context, Entity, FontStyle, Task, TextStyle, WhiteSpace};
 use http_client::HttpClient;
 use language_model::{
     AuthenticateError, ConfigurationViewTargetAgent, LanguageModel,
@@ -20,14 +23,11 @@ use std::pin::Pin;
 use std::str::FromStr;
 use std::sync::{Arc, LazyLock};
 use strum::IntoEnumIterator;
+use theme::ThemeSettings;
 use ui::{Icon, IconName, List, Tooltip, prelude::*};
-use ui_input::SingleLineInput;
 use util::{ResultExt, truncate_and_trailoff};
 use zed_env_vars::{EnvVar, env_var};
 
-use crate::api_key::ApiKeyState;
-use crate::ui::InstructionListItem;
-
 pub use settings::AnthropicAvailableModel as AvailableModel;
 
 const PROVIDER_ID: LanguageModelProviderId = language_model::ANTHROPIC_PROVIDER_ID;
@@ -42,7 +42,7 @@ pub struct AnthropicSettings {
 
 pub struct AnthropicLanguageModelProvider {
     http_client: Arc<dyn HttpClient>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
 }
 
 const API_KEY_ENV_VAR_NAME: &str = "ANTHROPIC_API_KEY";
@@ -123,7 +123,7 @@ impl AnthropicLanguageModelProvider {
 impl LanguageModelProviderState for AnthropicLanguageModelProvider {
     type ObservableEntity = State;
 
-    fn observable_entity(&self) -> Option<Entity<Self::ObservableEntity>> {
+    fn observable_entity(&self) -> Option<gpui::Entity<Self::ObservableEntity>> {
         Some(self.state.clone())
     }
 }
@@ -226,7 +226,7 @@ impl LanguageModelProvider for AnthropicLanguageModelProvider {
 pub struct AnthropicModel {
     id: LanguageModelId,
     model: anthropic::Model,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
     http_client: Arc<dyn HttpClient>,
     request_limiter: RateLimiter,
 }
@@ -823,8 +823,8 @@ fn convert_usage(usage: &Usage) -> language_model::TokenUsage {
 }
 
 struct ConfigurationView {
-    api_key_editor: Entity<SingleLineInput>,
-    state: Entity<State>,
+    api_key_editor: Entity<Editor>,
+    state: gpui::Entity<State>,
     load_credentials_task: Option<Task<()>>,
     target_agent: ConfigurationViewTargetAgent,
 }
@@ -833,7 +833,7 @@ impl ConfigurationView {
     const PLACEHOLDER_TEXT: &'static str = "sk-ant-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";
 
     fn new(
-        state: Entity<State>,
+        state: gpui::Entity<State>,
         target_agent: ConfigurationViewTargetAgent,
         window: &mut Window,
         cx: &mut Context<Self>,
@@ -862,7 +862,11 @@ impl ConfigurationView {
         }));
 
         Self {
-            api_key_editor: cx.new(|cx| SingleLineInput::new(window, cx, Self::PLACEHOLDER_TEXT)),
+            api_key_editor: cx.new(|cx| {
+                let mut editor = Editor::single_line(window, cx);
+                editor.set_placeholder_text(Self::PLACEHOLDER_TEXT, window, cx);
+                editor
+            }),
             state,
             load_credentials_task,
             target_agent,
@@ -901,6 +905,31 @@ impl ConfigurationView {
         .detach_and_log_err(cx);
     }
 
+    fn render_api_key_editor(&self, cx: &mut Context<Self>) -> impl IntoElement {
+        let settings = ThemeSettings::get_global(cx);
+        let text_style = TextStyle {
+            color: cx.theme().colors().text,
+            font_family: settings.ui_font.family.clone(),
+            font_features: settings.ui_font.features.clone(),
+            font_fallbacks: settings.ui_font.fallbacks.clone(),
+            font_size: rems(0.875).into(),
+            font_weight: settings.ui_font.weight,
+            font_style: FontStyle::Normal,
+            line_height: relative(1.3),
+            white_space: WhiteSpace::Normal,
+            ..Default::default()
+        };
+        EditorElement::new(
+            &self.api_key_editor,
+            EditorStyle {
+                background: cx.theme().colors().editor_background,
+                local_player: cx.theme().players().local(),
+                text: text_style,
+                ..Default::default()
+            },
+        )
+    }
+
     fn should_render_editor(&self, cx: &mut Context<Self>) -> bool {
         !self.state.read(cx).is_authenticated()
     }
@@ -933,7 +962,18 @@ impl Render for ConfigurationView {
                             InstructionListItem::text_only("Paste your API key below and hit enter to start using the agent")
                         )
                 )
-                .child(self.api_key_editor.clone())
+                .child(
+                    h_flex()
+                        .w_full()
+                        .my_2()
+                        .px_2()
+                        .py_1()
+                        .bg(cx.theme().colors().editor_background)
+                        .border_1()
+                        .border_color(cx.theme().colors().border)
+                        .rounded_sm()
+                        .child(self.render_api_key_editor(cx)),
+                )
                 .child(
                     Label::new(
                         format!("You can also assign the {API_KEY_ENV_VAR_NAME} environment variable and restart Zed."),
diff --git a/crates/language_models/src/provider/bedrock.rs b/crates/language_models/src/provider/bedrock.rs
index 47dd565f6a..a81e4b30d2 100644
--- a/crates/language_models/src/provider/bedrock.rs
+++ b/crates/language_models/src/provider/bedrock.rs
@@ -23,8 +23,12 @@ use bedrock::{
 };
 use collections::{BTreeMap, HashMap};
 use credentials_provider::CredentialsProvider;
+use editor::{Editor, EditorElement, EditorStyle};
 use futures::{FutureExt, Stream, StreamExt, future::BoxFuture, stream::BoxStream};
-use gpui::{AnyView, App, AsyncApp, Context, Entity, FontWeight, Subscription, Task};
+use gpui::{
+    AnyView, App, AsyncApp, Context, Entity, FontStyle, FontWeight, Subscription, Task, TextStyle,
+    WhiteSpace,
+};
 use gpui_tokio::Tokio;
 use http_client::HttpClient;
 use language_model::{
@@ -41,8 +45,8 @@ use serde_json::Value;
 use settings::{BedrockAvailableModel as AvailableModel, Settings, SettingsStore};
 use smol::lock::OnceCell;
 use strum::{EnumIter, IntoEnumIterator, IntoStaticStr};
+use theme::ThemeSettings;
 use ui::{Icon, IconName, List, Tooltip, prelude::*};
-use ui_input::SingleLineInput;
 use util::ResultExt;
 
 use crate::AllLanguageModelSettings;
@@ -239,7 +243,7 @@ impl State {
 pub struct BedrockLanguageModelProvider {
     http_client: AwsHttpClient,
     handle: tokio::runtime::Handle,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
 }
 
 impl BedrockLanguageModelProvider {
@@ -362,7 +366,7 @@ impl LanguageModelProvider for BedrockLanguageModelProvider {
 impl LanguageModelProviderState for BedrockLanguageModelProvider {
     type ObservableEntity = State;
 
-    fn observable_entity(&self) -> Option<Entity<Self::ObservableEntity>> {
+    fn observable_entity(&self) -> Option<gpui::Entity<Self::ObservableEntity>> {
         Some(self.state.clone())
     }
 }
@@ -373,7 +377,7 @@ struct BedrockModel {
     http_client: AwsHttpClient,
     handle: tokio::runtime::Handle,
     client: OnceCell<BedrockClient>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
     request_limiter: RateLimiter,
 }
 
@@ -1006,11 +1010,11 @@ pub fn map_to_language_model_completion_events(
 }
 
 struct ConfigurationView {
-    access_key_id_editor: Entity<SingleLineInput>,
-    secret_access_key_editor: Entity<SingleLineInput>,
-    session_token_editor: Entity<SingleLineInput>,
-    region_editor: Entity<SingleLineInput>,
-    state: Entity<State>,
+    access_key_id_editor: Entity<Editor>,
+    secret_access_key_editor: Entity<Editor>,
+    session_token_editor: Entity<Editor>,
+    region_editor: Entity<Editor>,
+    state: gpui::Entity<State>,
     load_credentials_task: Option<Task<()>>,
 }
 
@@ -1021,7 +1025,7 @@ impl ConfigurationView {
     const PLACEHOLDER_SESSION_TOKEN_TEXT: &'static str = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
     const PLACEHOLDER_REGION: &'static str = "us-east-1";
 
-    fn new(state: Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
+    fn new(state: gpui::Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
         cx.observe(&state, |_, _, cx| {
             cx.notify();
         })
@@ -1047,19 +1051,24 @@ impl ConfigurationView {
 
         Self {
             access_key_id_editor: cx.new(|cx| {
-                SingleLineInput::new(window, cx, Self::PLACEHOLDER_ACCESS_KEY_ID_TEXT)
-                    .label("Access Key ID")
+                let mut editor = Editor::single_line(window, cx);
+                editor.set_placeholder_text(Self::PLACEHOLDER_ACCESS_KEY_ID_TEXT, window, cx);
+                editor
             }),
             secret_access_key_editor: cx.new(|cx| {
-                SingleLineInput::new(window, cx, Self::PLACEHOLDER_SECRET_ACCESS_KEY_TEXT)
-                    .label("Secret Access Key")
+                let mut editor = Editor::single_line(window, cx);
+                editor.set_placeholder_text(Self::PLACEHOLDER_SECRET_ACCESS_KEY_TEXT, window, cx);
+                editor
             }),
             session_token_editor: cx.new(|cx| {
-                SingleLineInput::new(window, cx, Self::PLACEHOLDER_SESSION_TOKEN_TEXT)
-                    .label("Session Token (Optional)")
+                let mut editor = Editor::single_line(window, cx);
+                editor.set_placeholder_text(Self::PLACEHOLDER_SESSION_TOKEN_TEXT, window, cx);
+                editor
             }),
             region_editor: cx.new(|cx| {
-                SingleLineInput::new(window, cx, Self::PLACEHOLDER_REGION).label("Region")
+                let mut editor = Editor::single_line(window, cx);
+                editor.set_placeholder_text(Self::PLACEHOLDER_REGION, window, cx);
+                editor
             }),
             state,
             load_credentials_task,
@@ -1139,6 +1148,41 @@ impl ConfigurationView {
         .detach_and_log_err(cx);
     }
 
+    fn make_text_style(&self, cx: &Context<Self>) -> TextStyle {
+        let settings = ThemeSettings::get_global(cx);
+        TextStyle {
+            color: cx.theme().colors().text,
+            font_family: settings.ui_font.family.clone(),
+            font_features: settings.ui_font.features.clone(),
+            font_fallbacks: settings.ui_font.fallbacks.clone(),
+            font_size: rems(0.875).into(),
+            font_weight: settings.ui_font.weight,
+            font_style: FontStyle::Normal,
+            line_height: relative(1.3),
+            background_color: None,
+            underline: None,
+            strikethrough: None,
+            white_space: WhiteSpace::Normal,
+            text_overflow: None,
+            text_align: Default::default(),
+            line_clamp: None,
+        }
+    }
+
+    fn make_input_styles(&self, cx: &Context<Self>) -> Div {
+        let bg_color = cx.theme().colors().editor_background;
+        let border_color = cx.theme().colors().border;
+
+        h_flex()
+            .w_full()
+            .px_2()
+            .py_1()
+            .bg(bg_color)
+            .border_1()
+            .border_color(border_color)
+            .rounded_sm()
+    }
+
     fn should_render_editor(&self, cx: &Context<Self>) -> bool {
         self.state.read(cx).is_authenticated()
     }
@@ -1221,8 +1265,8 @@ impl Render for ConfigurationView {
                         )
                     )
             )
-            .child(self.render_static_credentials_ui())
-            .child(self.region_editor.clone())
+            .child(self.render_static_credentials_ui(cx))
+            .child(self.render_common_fields(cx))
             .child(
                 Label::new(
                     format!("You can also assign the {ZED_BEDROCK_ACCESS_KEY_ID_VAR}, {ZED_BEDROCK_SECRET_ACCESS_KEY_VAR} AND {ZED_BEDROCK_REGION_VAR} environment variables and restart Zed."),
@@ -1243,7 +1287,63 @@ impl Render for ConfigurationView {
 }
 
 impl ConfigurationView {
-    fn render_static_credentials_ui(&self) -> AnyElement {
+    fn render_access_key_id_editor(&self, cx: &mut Context<Self>) -> impl IntoElement {
+        let text_style = self.make_text_style(cx);
+
+        EditorElement::new(
+            &self.access_key_id_editor,
+            EditorStyle {
+                background: cx.theme().colors().editor_background,
+                local_player: cx.theme().players().local(),
+                text: text_style,
+                ..Default::default()
+            },
+        )
+    }
+
+    fn render_secret_key_editor(&self, cx: &mut Context<Self>) -> impl IntoElement {
+        let text_style = self.make_text_style(cx);
+
+        EditorElement::new(
+            &self.secret_access_key_editor,
+            EditorStyle {
+                background: cx.theme().colors().editor_background,
+                local_player: cx.theme().players().local(),
+                text: text_style,
+                ..Default::default()
+            },
+        )
+    }
+
+    fn render_session_token_editor(&self, cx: &mut Context<Self>) -> impl IntoElement {
+        let text_style = self.make_text_style(cx);
+
+        EditorElement::new(
+            &self.session_token_editor,
+            EditorStyle {
+                background: cx.theme().colors().editor_background,
+                local_player: cx.theme().players().local(),
+                text: text_style,
+                ..Default::default()
+            },
+        )
+    }
+
+    fn render_region_editor(&self, cx: &mut Context<Self>) -> impl IntoElement {
+        let text_style = self.make_text_style(cx);
+
+        EditorElement::new(
+            &self.region_editor,
+            EditorStyle {
+                background: cx.theme().colors().editor_background,
+                local_player: cx.theme().players().local(),
+                text: text_style,
+                ..Default::default()
+            },
+        )
+    }
+
+    fn render_static_credentials_ui(&self, cx: &mut Context<Self>) -> AnyElement {
         v_flex()
             .my_2()
             .gap_1p5()
@@ -1276,10 +1376,41 @@ impl ConfigurationView {
                         "Enter these credentials below",
                     )),
             )
-            .child(self.access_key_id_editor.clone())
-            .child(self.secret_access_key_editor.clone())
-            .child(self.session_token_editor.clone())
-            .child(self.region_editor.clone())
+            .child(
+                v_flex()
+                    .gap_0p5()
+                    .child(Label::new("Access Key ID").size(LabelSize::Small))
+                    .child(
+                        self.make_input_styles(cx)
+                            .child(self.render_access_key_id_editor(cx)),
+                    ),
+            )
+            .child(
+                v_flex()
+                    .gap_0p5()
+                    .child(Label::new("Secret Access Key").size(LabelSize::Small))
+                    .child(self.make_input_styles(cx).child(self.render_secret_key_editor(cx))),
+            )
+            .child(
+                v_flex()
+                    .gap_0p5()
+                    .child(Label::new("Session Token (Optional)").size(LabelSize::Small))
+                    .child(
+                        self.make_input_styles(cx)
+                            .child(self.render_session_token_editor(cx)),
+                    ),
+            )
+            .into_any_element()
+    }
+
+    fn render_common_fields(&self, cx: &mut Context<Self>) -> AnyElement {
+        v_flex()
+            .gap_0p5()
+            .child(Label::new("Region").size(LabelSize::Small))
+            .child(
+                self.make_input_styles(cx)
+                    .child(self.render_region_editor(cx)),
+            )
             .into_any_element()
     }
 }
diff --git a/crates/language_models/src/provider/cloud.rs b/crates/language_models/src/provider/cloud.rs
index 1c21e566d6..65fcae0f6a 100644
--- a/crates/language_models/src/provider/cloud.rs
+++ b/crates/language_models/src/provider/cloud.rs
@@ -4,13 +4,14 @@ use anyhow::{Context as _, Result, anyhow};
 use chrono::{DateTime, Utc};
 use client::{Client, ModelRequestUsage, UserStore, zed_urls};
 use cloud_llm_client::{
-    CLIENT_SUPPORTS_STATUS_MESSAGES_HEADER_NAME, CLIENT_SUPPORTS_X_AI_HEADER_NAME,
-    CURRENT_PLAN_HEADER_NAME, CompletionBody, CompletionEvent, CompletionRequestStatus,
-    CountTokensBody, CountTokensResponse, EXPIRED_LLM_TOKEN_HEADER_NAME, ListModelsResponse,
-    MODEL_REQUESTS_RESOURCE_HEADER_VALUE, Plan, PlanV1, PlanV2,
-    SERVER_SUPPORTS_STATUS_MESSAGES_HEADER_NAME, SUBSCRIPTION_LIMIT_RESOURCE_HEADER_NAME,
-    TOOL_USE_LIMIT_REACHED_HEADER_NAME, ZED_VERSION_HEADER_NAME,
+    CLIENT_SUPPORTS_STATUS_MESSAGES_HEADER_NAME, CURRENT_PLAN_HEADER_NAME, CompletionBody,
+    CompletionEvent, CompletionRequestStatus, CountTokensBody, CountTokensResponse,
+    EXPIRED_LLM_TOKEN_HEADER_NAME, ListModelsResponse, MODEL_REQUESTS_RESOURCE_HEADER_VALUE, Plan,
+    PlanV1, PlanV2, SERVER_SUPPORTS_STATUS_MESSAGES_HEADER_NAME,
+    SUBSCRIPTION_LIMIT_RESOURCE_HEADER_NAME, TOOL_USE_LIMIT_REACHED_HEADER_NAME,
+    ZED_VERSION_HEADER_NAME,
 };
+use feature_flags::{BillingV2FeatureFlag, FeatureFlagAppExt};
 use futures::{
     AsyncBufReadExt, FutureExt, Stream, StreamExt, future::BoxFuture, stream::BoxStream,
 };
@@ -46,7 +47,6 @@ use util::{ResultExt as _, maybe};
 use crate::provider::anthropic::{AnthropicEventMapper, count_anthropic_tokens, into_anthropic};
 use crate::provider::google::{GoogleEventMapper, into_google};
 use crate::provider::open_ai::{OpenAiEventMapper, count_open_ai_tokens, into_open_ai};
-use crate::provider::x_ai::count_xai_tokens;
 
 const PROVIDER_ID: LanguageModelProviderId = language_model::ZED_CLOUD_PROVIDER_ID;
 const PROVIDER_NAME: LanguageModelProviderName = language_model::ZED_CLOUD_PROVIDER_NAME;
@@ -77,7 +77,7 @@ impl From<ModelMode> for AnthropicModelMode {
 
 pub struct CloudLanguageModelProvider {
     client: Arc<Client>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
     _maintain_client_status: Task<()>,
 }
 
@@ -217,7 +217,6 @@ impl State {
 
         let request = http_client::Request::builder()
             .method(Method::GET)
-            .header(CLIENT_SUPPORTS_X_AI_HEADER_NAME, "true")
             .uri(http_client.build_zed_llm_url("/models", &[])?.as_ref())
             .header("Authorization", format!("Bearer {token}"))
             .body(AsyncBody::empty())?;
@@ -289,7 +288,7 @@ impl CloudLanguageModelProvider {
 impl LanguageModelProviderState for CloudLanguageModelProvider {
     type ObservableEntity = State;
 
-    fn observable_entity(&self) -> Option<Entity<Self::ObservableEntity>> {
+    fn observable_entity(&self) -> Option<gpui::Entity<Self::ObservableEntity>> {
         Some(self.state.clone())
     }
 }
@@ -581,7 +580,6 @@ impl LanguageModel for CloudLanguageModel {
             Anthropic => language_model::ANTHROPIC_PROVIDER_ID,
             OpenAi => language_model::OPEN_AI_PROVIDER_ID,
             Google => language_model::GOOGLE_PROVIDER_ID,
-            XAi => language_model::X_AI_PROVIDER_ID,
         }
     }
 
@@ -591,7 +589,6 @@ impl LanguageModel for CloudLanguageModel {
             Anthropic => language_model::ANTHROPIC_PROVIDER_NAME,
             OpenAi => language_model::OPEN_AI_PROVIDER_NAME,
             Google => language_model::GOOGLE_PROVIDER_NAME,
-            XAi => language_model::X_AI_PROVIDER_NAME,
         }
     }
 
@@ -622,8 +619,7 @@ impl LanguageModel for CloudLanguageModel {
     fn tool_input_format(&self) -> LanguageModelToolSchemaFormat {
         match self.model.provider {
             cloud_llm_client::LanguageModelProvider::Anthropic
-            | cloud_llm_client::LanguageModelProvider::OpenAi
-            | cloud_llm_client::LanguageModelProvider::XAi => {
+            | cloud_llm_client::LanguageModelProvider::OpenAi => {
                 LanguageModelToolSchemaFormat::JsonSchema
             }
             cloud_llm_client::LanguageModelProvider::Google => {
@@ -653,7 +649,6 @@ impl LanguageModel for CloudLanguageModel {
                 })
             }
             cloud_llm_client::LanguageModelProvider::OpenAi
-            | cloud_llm_client::LanguageModelProvider::XAi
             | cloud_llm_client::LanguageModelProvider::Google => None,
         }
     }
@@ -674,13 +669,6 @@ impl LanguageModel for CloudLanguageModel {
                 };
                 count_open_ai_tokens(request, model, cx)
             }
-            cloud_llm_client::LanguageModelProvider::XAi => {
-                let model = match x_ai::Model::from_id(&self.model.id.0) {
-                    Ok(model) => model,
-                    Err(err) => return async move { Err(anyhow!(err)) }.boxed(),
-                };
-                count_xai_tokens(request, model, cx)
-            }
             cloud_llm_client::LanguageModelProvider::Google => {
                 let client = self.client.clone();
                 let llm_api_token = self.llm_api_token.clone();
@@ -858,56 +846,6 @@ impl LanguageModel for CloudLanguageModel {
                 });
                 async move { Ok(future.await?.boxed()) }.boxed()
             }
-            cloud_llm_client::LanguageModelProvider::XAi => {
-                let client = self.client.clone();
-                let model = match x_ai::Model::from_id(&self.model.id.0) {
-                    Ok(model) => model,
-                    Err(err) => return async move { Err(anyhow!(err).into()) }.boxed(),
-                };
-                let request = into_open_ai(
-                    request,
-                    model.id(),
-                    model.supports_parallel_tool_calls(),
-                    model.supports_prompt_cache_key(),
-                    None,
-                    None,
-                );
-                let llm_api_token = self.llm_api_token.clone();
-                let future = self.request_limiter.stream(async move {
-                    let PerformLlmCompletionResponse {
-                        response,
-                        usage,
-                        includes_status_messages,
-                        tool_use_limit_reached,
-                    } = Self::perform_llm_completion(
-                        client.clone(),
-                        llm_api_token,
-                        app_version,
-                        CompletionBody {
-                            thread_id,
-                            prompt_id,
-                            intent,
-                            mode,
-                            provider: cloud_llm_client::LanguageModelProvider::XAi,
-                            model: request.model.clone(),
-                            provider_request: serde_json::to_value(&request)
-                                .map_err(|e| anyhow!(e))?,
-                        },
-                    )
-                    .await?;
-
-                    let mut mapper = OpenAiEventMapper::new();
-                    Ok(map_cloud_completion_events(
-                        Box::pin(
-                            response_lines(response, includes_status_messages)
-                                .chain(usage_updated_event(usage))
-                                .chain(tool_use_limit_reached_event(tool_use_limit_reached)),
-                        ),
-                        move |event| mapper.map_event(event),
-                    ))
-                });
-                async move { Ok(future.await?.boxed()) }.boxed()
-            }
             cloud_llm_client::LanguageModelProvider::Google => {
                 let client = self.client.clone();
                 let request =
@@ -1036,10 +974,13 @@ struct ZedAiConfiguration {
 }
 
 impl RenderOnce for ZedAiConfiguration {
-    fn render(self, _window: &mut Window, _cx: &mut App) -> impl IntoElement {
+    fn render(self, _window: &mut Window, cx: &mut App) -> impl IntoElement {
         let is_pro = self.plan.is_some_and(|plan| {
             matches!(plan, Plan::V1(PlanV1::ZedPro) | Plan::V2(PlanV2::ZedPro))
         });
+        let is_free_v2 = self
+            .plan
+            .is_some_and(|plan| plan == Plan::V2(PlanV2::ZedFree));
         let subscription_text = match (self.plan, self.subscription_period) {
             (Some(Plan::V1(PlanV1::ZedPro) | Plan::V2(PlanV2::ZedPro)), Some(_)) => {
                 "You have access to Zed's hosted models through your Pro subscription."
@@ -1106,7 +1047,10 @@ impl RenderOnce for ZedAiConfiguration {
 
         v_flex().gap_2().w_full().map(|this| {
             if self.account_too_young {
-                this.child(YoungAccountBanner).child(
+                this.child(YoungAccountBanner::new(
+                    is_free_v2 || cx.has_flag::<BillingV2FeatureFlag>(),
+                ))
+                .child(
                     Button::new("upgrade", "Upgrade to Pro")
                         .style(ui::ButtonStyle::Tinted(ui::TintColor::Accent))
                         .full_width()
diff --git a/crates/language_models/src/provider/copilot_chat.rs b/crates/language_models/src/provider/copilot_chat.rs
index 64a2c65f0d..b7ece55fed 100644
--- a/crates/language_models/src/provider/copilot_chat.rs
+++ b/crates/language_models/src/provider/copilot_chat.rs
@@ -89,7 +89,7 @@ impl CopilotChatLanguageModelProvider {
 impl LanguageModelProviderState for CopilotChatLanguageModelProvider {
     type ObservableEntity = State;
 
-    fn observable_entity(&self) -> Option<Entity<Self::ObservableEntity>> {
+    fn observable_entity(&self) -> Option<gpui::Entity<Self::ObservableEntity>> {
         Some(self.state.clone())
     }
 }
diff --git a/crates/language_models/src/provider/deepseek.rs b/crates/language_models/src/provider/deepseek.rs
index ec420bfd83..a8f08a4206 100644
--- a/crates/language_models/src/provider/deepseek.rs
+++ b/crates/language_models/src/provider/deepseek.rs
@@ -1,10 +1,13 @@
 use anyhow::{Result, anyhow};
 use collections::{BTreeMap, HashMap};
 use deepseek::DEEPSEEK_API_URL;
-
+use editor::{Editor, EditorElement, EditorStyle};
 use futures::Stream;
 use futures::{FutureExt, StreamExt, future, future::BoxFuture, stream::BoxStream};
-use gpui::{AnyView, App, AsyncApp, Context, Entity, SharedString, Task, Window};
+use gpui::{
+    AnyView, App, AsyncApp, Context, Entity, FontStyle, SharedString, Task, TextStyle, WhiteSpace,
+    Window,
+};
 use http_client::HttpClient;
 use language_model::{
     AuthenticateError, LanguageModel, LanguageModelCompletionError, LanguageModelCompletionEvent,
@@ -18,9 +21,8 @@ use settings::{Settings, SettingsStore};
 use std::pin::Pin;
 use std::str::FromStr;
 use std::sync::{Arc, LazyLock};
-
+use theme::ThemeSettings;
 use ui::{Icon, IconName, List, prelude::*};
-use ui_input::SingleLineInput;
 use util::{ResultExt, truncate_and_trailoff};
 use zed_env_vars::{EnvVar, env_var};
 
@@ -525,15 +527,18 @@ impl DeepSeekEventMapper {
 }
 
 struct ConfigurationView {
-    api_key_editor: Entity<SingleLineInput>,
+    api_key_editor: Entity<Editor>,
     state: Entity<State>,
     load_credentials_task: Option<Task<()>>,
 }
 
 impl ConfigurationView {
     fn new(state: Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
-        let api_key_editor =
-            cx.new(|cx| SingleLineInput::new(window, cx, "sk-00000000000000000000000000000000"));
+        let api_key_editor = cx.new(|cx| {
+            let mut editor = Editor::single_line(window, cx);
+            editor.set_placeholder_text("sk-00000000000000000000000000000000", window, cx);
+            editor
+        });
 
         cx.observe(&state, |_, _, cx| {
             cx.notify();
@@ -593,6 +598,34 @@ impl ConfigurationView {
         .detach_and_log_err(cx);
     }
 
+    fn render_api_key_editor(&self, cx: &mut Context<Self>) -> impl IntoElement {
+        let settings = ThemeSettings::get_global(cx);
+        let text_style = TextStyle {
+            color: cx.theme().colors().text,
+            font_family: settings.ui_font.family.clone(),
+            font_features: settings.ui_font.features.clone(),
+            font_fallbacks: settings.ui_font.fallbacks.clone(),
+            font_size: rems(0.875).into(),
+            font_weight: settings.ui_font.weight,
+            font_style: FontStyle::Normal,
+            line_height: relative(1.3),
+            background_color: None,
+            underline: None,
+            strikethrough: None,
+            white_space: WhiteSpace::Normal,
+            ..Default::default()
+        };
+        EditorElement::new(
+            &self.api_key_editor,
+            EditorStyle {
+                background: cx.theme().colors().editor_background,
+                local_player: cx.theme().players().local(),
+                text: text_style,
+                ..Default::default()
+            },
+        )
+    }
+
     fn should_render_editor(&self, cx: &mut Context<Self>) -> bool {
         !self.state.read(cx).is_authenticated()
     }
@@ -620,7 +653,18 @@ impl Render for ConfigurationView {
                             "Paste your API key below and hit enter to start using the assistant",
                         )),
                 )
-                .child(self.api_key_editor.clone())
+                .child(
+                    h_flex()
+                        .w_full()
+                        .my_2()
+                        .px_2()
+                        .py_1()
+                        .bg(cx.theme().colors().editor_background)
+                        .border_1()
+                        .border_color(cx.theme().colors().border)
+                        .rounded_sm()
+                        .child(self.render_api_key_editor(cx)),
+                )
                 .child(
                     Label::new(format!(
                         "Or set the {API_KEY_ENV_VAR_NAME} environment variable."
diff --git a/crates/language_models/src/provider/google.rs b/crates/language_models/src/provider/google.rs
index f6ac364611..48712e33a7 100644
--- a/crates/language_models/src/provider/google.rs
+++ b/crates/language_models/src/provider/google.rs
@@ -1,12 +1,16 @@
 use anyhow::{Context as _, Result, anyhow};
 use collections::BTreeMap;
 use credentials_provider::CredentialsProvider;
+use editor::{Editor, EditorElement, EditorStyle};
 use futures::{FutureExt, Stream, StreamExt, future, future::BoxFuture};
 use google_ai::{
     FunctionDeclaration, GenerateContentResponse, GoogleModelMode, Part, SystemInstruction,
     ThinkingConfig, UsageMetadata,
 };
-use gpui::{AnyView, App, AsyncApp, Context, Entity, SharedString, Task, Window};
+use gpui::{
+    AnyView, App, AsyncApp, Context, Entity, FontStyle, SharedString, Task, TextStyle, WhiteSpace,
+    Window,
+};
 use http_client::HttpClient;
 use language_model::{
     AuthenticateError, ConfigurationViewTargetAgent, LanguageModelCompletionError,
@@ -28,8 +32,8 @@ use std::sync::{
     atomic::{self, AtomicU64},
 };
 use strum::IntoEnumIterator;
+use theme::ThemeSettings;
 use ui::{Icon, IconName, List, Tooltip, prelude::*};
-use ui_input::SingleLineInput;
 use util::{ResultExt, truncate_and_trailoff};
 use zed_env_vars::EnvVar;
 
@@ -59,7 +63,7 @@ pub enum ModelMode {
 
 pub struct GoogleLanguageModelProvider {
     http_client: Arc<dyn HttpClient>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
 }
 
 pub struct State {
@@ -161,7 +165,7 @@ impl GoogleLanguageModelProvider {
 impl LanguageModelProviderState for GoogleLanguageModelProvider {
     type ObservableEntity = State;
 
-    fn observable_entity(&self) -> Option<Entity<Self::ObservableEntity>> {
+    fn observable_entity(&self) -> Option<gpui::Entity<Self::ObservableEntity>> {
         Some(self.state.clone())
     }
 }
@@ -251,7 +255,7 @@ impl LanguageModelProvider for GoogleLanguageModelProvider {
 pub struct GoogleLanguageModel {
     id: LanguageModelId,
     model: google_ai::Model,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
     http_client: Arc<dyn HttpClient>,
     request_limiter: RateLimiter,
 }
@@ -751,15 +755,15 @@ fn convert_usage(usage: &UsageMetadata) -> language_model::TokenUsage {
 }
 
 struct ConfigurationView {
-    api_key_editor: Entity<SingleLineInput>,
-    state: Entity<State>,
+    api_key_editor: Entity<Editor>,
+    state: gpui::Entity<State>,
     target_agent: language_model::ConfigurationViewTargetAgent,
     load_credentials_task: Option<Task<()>>,
 }
 
 impl ConfigurationView {
     fn new(
-        state: Entity<State>,
+        state: gpui::Entity<State>,
         target_agent: language_model::ConfigurationViewTargetAgent,
         window: &mut Window,
         cx: &mut Context<Self>,
@@ -788,7 +792,11 @@ impl ConfigurationView {
         }));
 
         Self {
-            api_key_editor: cx.new(|cx| SingleLineInput::new(window, cx, "AIzaSy...")),
+            api_key_editor: cx.new(|cx| {
+                let mut editor = Editor::single_line(window, cx);
+                editor.set_placeholder_text("AIzaSy...", window, cx);
+                editor
+            }),
             target_agent,
             state,
             load_credentials_task,
@@ -827,6 +835,31 @@ impl ConfigurationView {
         .detach_and_log_err(cx);
     }
 
+    fn render_api_key_editor(&self, cx: &mut Context<Self>) -> impl IntoElement {
+        let settings = ThemeSettings::get_global(cx);
+        let text_style = TextStyle {
+            color: cx.theme().colors().text,
+            font_family: settings.ui_font.family.clone(),
+            font_features: settings.ui_font.features.clone(),
+            font_fallbacks: settings.ui_font.fallbacks.clone(),
+            font_size: rems(0.875).into(),
+            font_weight: settings.ui_font.weight,
+            font_style: FontStyle::Normal,
+            line_height: relative(1.3),
+            white_space: WhiteSpace::Normal,
+            ..Default::default()
+        };
+        EditorElement::new(
+            &self.api_key_editor,
+            EditorStyle {
+                background: cx.theme().colors().editor_background,
+                local_player: cx.theme().players().local(),
+                text: text_style,
+                ..Default::default()
+            },
+        )
+    }
+
     fn should_render_editor(&self, cx: &mut Context<Self>) -> bool {
         !self.state.read(cx).is_authenticated()
     }
@@ -857,7 +890,18 @@ impl Render for ConfigurationView {
                             "Paste your API key below and hit enter to start using the assistant",
                         )),
                 )
-                .child(self.api_key_editor.clone())
+                .child(
+                    h_flex()
+                        .w_full()
+                        .my_2()
+                        .px_2()
+                        .py_1()
+                        .bg(cx.theme().colors().editor_background)
+                        .border_1()
+                        .border_color(cx.theme().colors().border)
+                        .rounded_sm()
+                        .child(self.render_api_key_editor(cx)),
+                )
                 .child(
                     Label::new(
                         format!("You can also assign the {GEMINI_API_KEY_VAR_NAME} environment variable and restart Zed."),
diff --git a/crates/language_models/src/provider/lmstudio.rs b/crates/language_models/src/provider/lmstudio.rs
index c0b3509c0e..f98906f5be 100644
--- a/crates/language_models/src/provider/lmstudio.rs
+++ b/crates/language_models/src/provider/lmstudio.rs
@@ -2,7 +2,7 @@ use anyhow::{Result, anyhow};
 use collections::HashMap;
 use futures::Stream;
 use futures::{FutureExt, StreamExt, future::BoxFuture, stream::BoxStream};
-use gpui::{AnyView, App, AsyncApp, Context, Entity, Subscription, Task};
+use gpui::{AnyView, App, AsyncApp, Context, Subscription, Task};
 use http_client::HttpClient;
 use language_model::{
     AuthenticateError, LanguageModelCompletionError, LanguageModelCompletionEvent,
@@ -41,7 +41,7 @@ pub struct LmStudioSettings {
 
 pub struct LmStudioLanguageModelProvider {
     http_client: Arc<dyn HttpClient>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
 }
 
 pub struct State {
@@ -162,7 +162,7 @@ impl LmStudioLanguageModelProvider {
 impl LanguageModelProviderState for LmStudioLanguageModelProvider {
     type ObservableEntity = State;
 
-    fn observable_entity(&self) -> Option<Entity<Self::ObservableEntity>> {
+    fn observable_entity(&self) -> Option<gpui::Entity<Self::ObservableEntity>> {
         Some(self.state.clone())
     }
 }
@@ -635,12 +635,12 @@ fn add_message_content_part(
 }
 
 struct ConfigurationView {
-    state: Entity<State>,
+    state: gpui::Entity<State>,
     loading_models_task: Option<Task<()>>,
 }
 
 impl ConfigurationView {
-    pub fn new(state: Entity<State>, cx: &mut Context<Self>) -> Self {
+    pub fn new(state: gpui::Entity<State>, cx: &mut Context<Self>) -> Self {
         let loading_models_task = Some(cx.spawn({
             let state = state.clone();
             async move |this, cx| {
diff --git a/crates/language_models/src/provider/mistral.rs b/crates/language_models/src/provider/mistral.rs
index 7623f123c6..b3375e528c 100644
--- a/crates/language_models/src/provider/mistral.rs
+++ b/crates/language_models/src/provider/mistral.rs
@@ -1,7 +1,11 @@
 use anyhow::{Result, anyhow};
 use collections::BTreeMap;
+use editor::{Editor, EditorElement, EditorStyle};
 use futures::{FutureExt, Stream, StreamExt, future, future::BoxFuture, stream::BoxStream};
-use gpui::{AnyView, App, AsyncApp, Context, Entity, SharedString, Task, Window};
+use gpui::{
+    AnyView, App, AsyncApp, Context, Entity, FontStyle, SharedString, Task, TextStyle, WhiteSpace,
+    Window,
+};
 use http_client::HttpClient;
 use language_model::{
     AuthenticateError, LanguageModel, LanguageModelCompletionError, LanguageModelCompletionEvent,
@@ -18,8 +22,8 @@ use std::pin::Pin;
 use std::str::FromStr;
 use std::sync::{Arc, LazyLock};
 use strum::IntoEnumIterator;
+use theme::ThemeSettings;
 use ui::{Icon, IconName, List, Tooltip, prelude::*};
-use ui_input::SingleLineInput;
 use util::{ResultExt, truncate_and_trailoff};
 use zed_env_vars::{EnvVar, env_var};
 
@@ -39,7 +43,7 @@ pub struct MistralSettings {
 
 pub struct MistralLanguageModelProvider {
     http_client: Arc<dyn HttpClient>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
 }
 
 pub struct State {
@@ -117,7 +121,7 @@ impl MistralLanguageModelProvider {
 impl LanguageModelProviderState for MistralLanguageModelProvider {
     type ObservableEntity = State;
 
-    fn observable_entity(&self) -> Option<Entity<Self::ObservableEntity>> {
+    fn observable_entity(&self) -> Option<gpui::Entity<Self::ObservableEntity>> {
         Some(self.state.clone())
     }
 }
@@ -211,7 +215,7 @@ impl LanguageModelProvider for MistralLanguageModelProvider {
 pub struct MistralLanguageModel {
     id: LanguageModelId,
     model: mistral::Model,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
     http_client: Arc<dyn HttpClient>,
     request_limiter: RateLimiter,
 }
@@ -690,15 +694,18 @@ struct RawToolCall {
 }
 
 struct ConfigurationView {
-    api_key_editor: Entity<SingleLineInput>,
-    state: Entity<State>,
+    api_key_editor: Entity<Editor>,
+    state: gpui::Entity<State>,
     load_credentials_task: Option<Task<()>>,
 }
 
 impl ConfigurationView {
-    fn new(state: Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
-        let api_key_editor =
-            cx.new(|cx| SingleLineInput::new(window, cx, "0aBCDEFGhIjKLmNOpqrSTUVwxyzabCDE1f2"));
+    fn new(state: gpui::Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
+        let api_key_editor = cx.new(|cx| {
+            let mut editor = Editor::single_line(window, cx);
+            editor.set_placeholder_text("0aBCDEFGhIjKLmNOpqrSTUVwxyzabCDE1f2", window, cx);
+            editor
+        });
 
         cx.observe(&state, |_, _, cx| {
             cx.notify();
@@ -763,6 +770,31 @@ impl ConfigurationView {
         .detach_and_log_err(cx);
     }
 
+    fn render_api_key_editor(&self, cx: &mut Context<Self>) -> impl IntoElement {
+        let settings = ThemeSettings::get_global(cx);
+        let text_style = TextStyle {
+            color: cx.theme().colors().text,
+            font_family: settings.ui_font.family.clone(),
+            font_features: settings.ui_font.features.clone(),
+            font_fallbacks: settings.ui_font.fallbacks.clone(),
+            font_size: rems(0.875).into(),
+            font_weight: settings.ui_font.weight,
+            font_style: FontStyle::Normal,
+            line_height: relative(1.3),
+            white_space: WhiteSpace::Normal,
+            ..Default::default()
+        };
+        EditorElement::new(
+            &self.api_key_editor,
+            EditorStyle {
+                background: cx.theme().colors().editor_background,
+                local_player: cx.theme().players().local(),
+                text: text_style,
+                ..Default::default()
+            },
+        )
+    }
+
     fn should_render_editor(&self, cx: &mut Context<Self>) -> bool {
         !self.state.read(cx).is_authenticated()
     }
@@ -793,7 +825,18 @@ impl Render for ConfigurationView {
                             "Paste your API key below and hit enter to start using the assistant",
                         )),
                 )
-                .child(self.api_key_editor.clone())
+                .child(
+                    h_flex()
+                        .w_full()
+                        .my_2()
+                        .px_2()
+                        .py_1()
+                        .bg(cx.theme().colors().editor_background)
+                        .border_1()
+                        .border_color(cx.theme().colors().border)
+                        .rounded_sm()
+                        .child(self.render_api_key_editor(cx)),
+                )
                 .child(
                     Label::new(
                         format!("You can also assign the {API_KEY_ENV_VAR_NAME} environment variable and restart Zed."),
diff --git a/crates/language_models/src/provider/ollama.rs b/crates/language_models/src/provider/ollama.rs
index d3a4289f24..9e9c88dd99 100644
--- a/crates/language_models/src/provider/ollama.rs
+++ b/crates/language_models/src/provider/ollama.rs
@@ -2,7 +2,7 @@ use anyhow::{Result, anyhow};
 use fs::Fs;
 use futures::{FutureExt, StreamExt, future::BoxFuture, stream::BoxStream};
 use futures::{Stream, TryFutureExt, stream};
-use gpui::{AnyView, App, AsyncApp, Context, CursorStyle, Entity, Task};
+use gpui::{AnyView, App, AsyncApp, Context, Task};
 use http_client::HttpClient;
 use language_model::{
     AuthenticateError, LanguageModel, LanguageModelCompletionError, LanguageModelCompletionEvent,
@@ -48,7 +48,7 @@ pub struct OllamaSettings {
 
 pub struct OllamaLanguageModelProvider {
     http_client: Arc<dyn HttpClient>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
 }
 
 pub struct State {
@@ -209,7 +209,7 @@ impl OllamaLanguageModelProvider {
 impl LanguageModelProviderState for OllamaLanguageModelProvider {
     type ObservableEntity = State;
 
-    fn observable_entity(&self) -> Option<Entity<Self::ObservableEntity>> {
+    fn observable_entity(&self) -> Option<gpui::Entity<Self::ObservableEntity>> {
         Some(self.state.clone())
     }
 }
@@ -322,7 +322,7 @@ pub struct OllamaLanguageModel {
     model: ollama::Model,
     http_client: Arc<dyn HttpClient>,
     request_limiter: RateLimiter,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
 }
 
 impl OllamaLanguageModel {
@@ -623,13 +623,13 @@ fn map_to_language_model_completion_events(
 }
 
 struct ConfigurationView {
-    api_key_editor: Entity<SingleLineInput>,
-    api_url_editor: Entity<SingleLineInput>,
-    state: Entity<State>,
+    api_key_editor: gpui::Entity<SingleLineInput>,
+    api_url_editor: gpui::Entity<SingleLineInput>,
+    state: gpui::Entity<State>,
 }
 
 impl ConfigurationView {
-    pub fn new(state: Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
+    pub fn new(state: gpui::Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
         let api_key_editor =
             cx.new(|cx| SingleLineInput::new(window, cx, "63e02e...").label("API key"));
 
@@ -900,7 +900,7 @@ impl Render for ConfigurationView {
                             this.child(
                                 ButtonLike::new("connected")
                                     .disabled(true)
-                                    .cursor_style(CursorStyle::Arrow)
+                                    .cursor_style(gpui::CursorStyle::Arrow)
                                     .child(
                                         h_flex()
                                             .gap_2()
diff --git a/crates/language_models/src/provider/open_ai.rs b/crates/language_models/src/provider/open_ai.rs
index 3eaaa8b585..ade2e47ca3 100644
--- a/crates/language_models/src/provider/open_ai.rs
+++ b/crates/language_models/src/provider/open_ai.rs
@@ -41,7 +41,7 @@ pub struct OpenAiSettings {
 
 pub struct OpenAiLanguageModelProvider {
     http_client: Arc<dyn HttpClient>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
 }
 
 pub struct State {
@@ -119,7 +119,7 @@ impl OpenAiLanguageModelProvider {
 impl LanguageModelProviderState for OpenAiLanguageModelProvider {
     type ObservableEntity = State;
 
-    fn observable_entity(&self) -> Option<Entity<Self::ObservableEntity>> {
+    fn observable_entity(&self) -> Option<gpui::Entity<Self::ObservableEntity>> {
         Some(self.state.clone())
     }
 }
@@ -203,7 +203,7 @@ impl LanguageModelProvider for OpenAiLanguageModelProvider {
 pub struct OpenAiLanguageModel {
     id: LanguageModelId,
     model: open_ai::Model,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
     http_client: Arc<dyn HttpClient>,
     request_limiter: RateLimiter,
 }
@@ -676,12 +676,12 @@ pub fn count_open_ai_tokens(
 
 struct ConfigurationView {
     api_key_editor: Entity<SingleLineInput>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
     load_credentials_task: Option<Task<()>>,
 }
 
 impl ConfigurationView {
-    fn new(state: Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
+    fn new(state: gpui::Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
         let api_key_editor = cx.new(|cx| {
             SingleLineInput::new(
                 window,
diff --git a/crates/language_models/src/provider/open_ai_compatible.rs b/crates/language_models/src/provider/open_ai_compatible.rs
index cca49c982c..788a412a82 100644
--- a/crates/language_models/src/provider/open_ai_compatible.rs
+++ b/crates/language_models/src/provider/open_ai_compatible.rs
@@ -33,7 +33,7 @@ pub struct OpenAiCompatibleLanguageModelProvider {
     id: LanguageModelProviderId,
     name: LanguageModelProviderName,
     http_client: Arc<dyn HttpClient>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
 }
 
 pub struct State {
@@ -125,7 +125,7 @@ impl OpenAiCompatibleLanguageModelProvider {
 impl LanguageModelProviderState for OpenAiCompatibleLanguageModelProvider {
     type ObservableEntity = State;
 
-    fn observable_entity(&self) -> Option<Entity<Self::ObservableEntity>> {
+    fn observable_entity(&self) -> Option<gpui::Entity<Self::ObservableEntity>> {
         Some(self.state.clone())
     }
 }
@@ -195,7 +195,7 @@ pub struct OpenAiCompatibleLanguageModel {
     provider_id: LanguageModelProviderId,
     provider_name: LanguageModelProviderName,
     model: AvailableModel,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
     http_client: Arc<dyn HttpClient>,
     request_limiter: RateLimiter,
 }
@@ -341,12 +341,12 @@ impl LanguageModel for OpenAiCompatibleLanguageModel {
 
 struct ConfigurationView {
     api_key_editor: Entity<SingleLineInput>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
     load_credentials_task: Option<Task<()>>,
 }
 
 impl ConfigurationView {
-    fn new(state: Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
+    fn new(state: gpui::Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
         let api_key_editor = cx.new(|cx| {
             SingleLineInput::new(
                 window,
diff --git a/crates/language_models/src/provider/open_router.rs b/crates/language_models/src/provider/open_router.rs
index 5bfc97c41f..bbc5c44cdc 100644
--- a/crates/language_models/src/provider/open_router.rs
+++ b/crates/language_models/src/provider/open_router.rs
@@ -1,7 +1,10 @@
 use anyhow::{Result, anyhow};
 use collections::HashMap;
+use editor::{Editor, EditorElement, EditorStyle};
 use futures::{FutureExt, Stream, StreamExt, future, future::BoxFuture};
-use gpui::{AnyView, App, AsyncApp, Context, Entity, SharedString, Task};
+use gpui::{
+    AnyView, App, AsyncApp, Context, Entity, FontStyle, SharedString, Task, TextStyle, WhiteSpace,
+};
 use http_client::HttpClient;
 use language_model::{
     AuthenticateError, LanguageModel, LanguageModelCompletionError, LanguageModelCompletionEvent,
@@ -17,8 +20,8 @@ use settings::{OpenRouterAvailableModel as AvailableModel, Settings, SettingsSto
 use std::pin::Pin;
 use std::str::FromStr as _;
 use std::sync::{Arc, LazyLock};
+use theme::ThemeSettings;
 use ui::{Icon, IconName, List, Tooltip, prelude::*};
-use ui_input::SingleLineInput;
 use util::{ResultExt, truncate_and_trailoff};
 use zed_env_vars::{EnvVar, env_var};
 
@@ -38,7 +41,7 @@ pub struct OpenRouterSettings {
 
 pub struct OpenRouterLanguageModelProvider {
     http_client: Arc<dyn HttpClient>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
 }
 
 pub struct State {
@@ -171,7 +174,7 @@ impl OpenRouterLanguageModelProvider {
 impl LanguageModelProviderState for OpenRouterLanguageModelProvider {
     type ObservableEntity = State;
 
-    fn observable_entity(&self) -> Option<Entity<Self::ObservableEntity>> {
+    fn observable_entity(&self) -> Option<gpui::Entity<Self::ObservableEntity>> {
         Some(self.state.clone())
     }
 }
@@ -257,7 +260,7 @@ impl LanguageModelProvider for OpenRouterLanguageModelProvider {
 pub struct OpenRouterLanguageModel {
     id: LanguageModelId,
     model: open_router::Model,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
     http_client: Arc<dyn HttpClient>,
     request_limiter: RateLimiter,
 }
@@ -692,19 +695,21 @@ pub fn count_open_router_tokens(
 }
 
 struct ConfigurationView {
-    api_key_editor: Entity<SingleLineInput>,
-    state: Entity<State>,
+    api_key_editor: Entity<Editor>,
+    state: gpui::Entity<State>,
     load_credentials_task: Option<Task<()>>,
 }
 
 impl ConfigurationView {
-    fn new(state: Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
+    fn new(state: gpui::Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
         let api_key_editor = cx.new(|cx| {
-            SingleLineInput::new(
+            let mut editor = Editor::single_line(window, cx);
+            editor.set_placeholder_text(
+                "sk_or_000000000000000000000000000000000000000000000000",
                 window,
                 cx,
-                "sk_or_000000000000000000000000000000000000000000000000",
-            )
+            );
+            editor
         });
 
         cx.observe(&state, |_, _, cx| {
@@ -769,6 +774,31 @@ impl ConfigurationView {
         .detach_and_log_err(cx);
     }
 
+    fn render_api_key_editor(&self, cx: &mut Context<Self>) -> impl IntoElement {
+        let settings = ThemeSettings::get_global(cx);
+        let text_style = TextStyle {
+            color: cx.theme().colors().text,
+            font_family: settings.ui_font.family.clone(),
+            font_features: settings.ui_font.features.clone(),
+            font_fallbacks: settings.ui_font.fallbacks.clone(),
+            font_size: rems(0.875).into(),
+            font_weight: settings.ui_font.weight,
+            font_style: FontStyle::Normal,
+            line_height: relative(1.3),
+            white_space: WhiteSpace::Normal,
+            ..Default::default()
+        };
+        EditorElement::new(
+            &self.api_key_editor,
+            EditorStyle {
+                background: cx.theme().colors().editor_background,
+                local_player: cx.theme().players().local(),
+                text: text_style,
+                ..Default::default()
+            },
+        )
+    }
+
     fn should_render_editor(&self, cx: &mut Context<Self>) -> bool {
         !self.state.read(cx).is_authenticated()
     }
@@ -799,7 +829,18 @@ impl Render for ConfigurationView {
                             "Paste your API key below and hit enter to start using the assistant",
                         )),
                 )
-                .child(self.api_key_editor.clone())
+                .child(
+                    h_flex()
+                        .w_full()
+                        .my_2()
+                        .px_2()
+                        .py_1()
+                        .bg(cx.theme().colors().editor_background)
+                        .border_1()
+                        .border_color(cx.theme().colors().border)
+                        .rounded_sm()
+                        .child(self.render_api_key_editor(cx)),
+                )
                 .child(
                     Label::new(
                         format!("You can also assign the {API_KEY_ENV_VAR_NAME} environment variable and restart Zed."),
diff --git a/crates/language_models/src/provider/vercel.rs b/crates/language_models/src/provider/vercel.rs
index ad12e5a628..4b2ebb8a16 100644
--- a/crates/language_models/src/provider/vercel.rs
+++ b/crates/language_models/src/provider/vercel.rs
@@ -36,7 +36,7 @@ pub struct VercelSettings {
 
 pub struct VercelLanguageModelProvider {
     http_client: Arc<dyn HttpClient>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
 }
 
 pub struct State {
@@ -114,7 +114,7 @@ impl VercelLanguageModelProvider {
 impl LanguageModelProviderState for VercelLanguageModelProvider {
     type ObservableEntity = State;
 
-    fn observable_entity(&self) -> Option<Entity<Self::ObservableEntity>> {
+    fn observable_entity(&self) -> Option<gpui::Entity<Self::ObservableEntity>> {
         Some(self.state.clone())
     }
 }
@@ -195,7 +195,7 @@ impl LanguageModelProvider for VercelLanguageModelProvider {
 pub struct VercelLanguageModel {
     id: LanguageModelId,
     model: vercel::Model,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
     http_client: Arc<dyn HttpClient>,
     request_limiter: RateLimiter,
 }
@@ -363,12 +363,12 @@ pub fn count_vercel_tokens(
 
 struct ConfigurationView {
     api_key_editor: Entity<SingleLineInput>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
     load_credentials_task: Option<Task<()>>,
 }
 
 impl ConfigurationView {
-    fn new(state: Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
+    fn new(state: gpui::Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
         let api_key_editor = cx.new(|cx| {
             SingleLineInput::new(
                 window,
diff --git a/crates/language_models/src/provider/x_ai.rs b/crates/language_models/src/provider/x_ai.rs
index 4e9f591707..d75c8ce78c 100644
--- a/crates/language_models/src/provider/x_ai.rs
+++ b/crates/language_models/src/provider/x_ai.rs
@@ -36,7 +36,7 @@ pub struct XAiSettings {
 
 pub struct XAiLanguageModelProvider {
     http_client: Arc<dyn HttpClient>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
 }
 
 pub struct State {
@@ -114,7 +114,7 @@ impl XAiLanguageModelProvider {
 impl LanguageModelProviderState for XAiLanguageModelProvider {
     type ObservableEntity = State;
 
-    fn observable_entity(&self) -> Option<Entity<Self::ObservableEntity>> {
+    fn observable_entity(&self) -> Option<gpui::Entity<Self::ObservableEntity>> {
         Some(self.state.clone())
     }
 }
@@ -195,7 +195,7 @@ impl LanguageModelProvider for XAiLanguageModelProvider {
 pub struct XAiLanguageModel {
     id: LanguageModelId,
     model: x_ai::Model,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
     http_client: Arc<dyn HttpClient>,
     request_limiter: RateLimiter,
 }
@@ -357,12 +357,12 @@ pub fn count_xai_tokens(
 
 struct ConfigurationView {
     api_key_editor: Entity<SingleLineInput>,
-    state: Entity<State>,
+    state: gpui::Entity<State>,
     load_credentials_task: Option<Task<()>>,
 }
 
 impl ConfigurationView {
-    fn new(state: Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
+    fn new(state: gpui::Entity<State>, window: &mut Window, cx: &mut Context<Self>) -> Self {
         let api_key_editor = cx.new(|cx| {
             SingleLineInput::new(
                 window,
diff --git a/crates/language_tools/src/lsp_button.rs b/crates/language_tools/src/lsp_button.rs
index 614eaa4f05..8bf40ccc1a 100644
--- a/crates/language_tools/src/lsp_button.rs
+++ b/crates/language_tools/src/lsp_button.rs
@@ -162,7 +162,7 @@ impl LanguageServerState {
                                             let relative_path =
                                                 abs_path.strip_prefix(&worktree.abs_path()).ok()?;
                                             let relative_path =
-                                                RelPath::new(relative_path, path_style)
+                                                RelPath::from_std_path(relative_path, path_style)
                                                     .log_err()?;
                                             let entry = worktree.entry_for_path(&relative_path)?;
                                             let project_path =
diff --git a/crates/languages/src/json.rs b/crates/languages/src/json.rs
index e59a369375..512653eab7 100644
--- a/crates/languages/src/json.rs
+++ b/crates/languages/src/json.rs
@@ -55,8 +55,8 @@ impl ContextProvider for JsonTaskProvider {
         let Some(file) = project::File::from_dyn(file.as_ref()).cloned() else {
             return Task::ready(None);
         };
-        let is_package_json = file.path.ends_with(RelPath::unix("package.json").unwrap());
-        let is_composer_json = file.path.ends_with(RelPath::unix("composer.json").unwrap());
+        let is_package_json = file.path.ends_with(RelPath::new("package.json").unwrap());
+        let is_composer_json = file.path.ends_with(RelPath::new("composer.json").unwrap());
         if !is_package_json && !is_composer_json {
             return Task::ready(None);
         }
diff --git a/crates/languages/src/python.rs b/crates/languages/src/python.rs
index a70137f3c2..8b6abc9c72 100644
--- a/crates/languages/src/python.rs
+++ b/crates/languages/src/python.rs
@@ -55,7 +55,7 @@ impl ManifestProvider for PyprojectTomlManifestProvider {
         }: ManifestQuery,
     ) -> Option<Arc<RelPath>> {
         for path in path.ancestors().take(depth) {
-            let p = path.join(RelPath::unix("pyproject.toml").unwrap());
+            let p = path.join(RelPath::new("pyproject.toml").unwrap());
             if delegate.exists(&p, Some(false)) {
                 return Some(path.into());
             }
@@ -107,13 +107,13 @@ impl TyLspAdapter {
 
 #[cfg(target_os = "linux")]
 impl TyLspAdapter {
-    const GITHUB_ASSET_KIND: AssetKind = AssetKind::TarGz;
+    const GITHUB_ASSET_KIND: AssetKind = AssetKind::Gz;
     const ARCH_SERVER_NAME: &str = "unknown-linux-gnu";
 }
 
 #[cfg(target_os = "freebsd")]
 impl TyLspAdapter {
-    const GITHUB_ASSET_KIND: AssetKind = AssetKind::TarGz;
+    const GITHUB_ASSET_KIND: AssetKind = AssetKind::Gz;
     const ARCH_SERVER_NAME: &str = "unknown-freebsd";
 }
 
@@ -1030,7 +1030,7 @@ impl ToolchainLister for PythonToolchainProvider {
         config.workspace_directories = Some(
             subroot_relative_path
                 .ancestors()
-                .map(|ancestor| worktree_root.join(ancestor.as_std_path()))
+                .map(|ancestor| worktree_root.join(ancestor))
                 .collect(),
         );
         for locator in locators.iter() {
diff --git a/crates/languages/src/rust.rs b/crates/languages/src/rust.rs
index 04a1eba033..b8f5c78dce 100644
--- a/crates/languages/src/rust.rs
+++ b/crates/languages/src/rust.rs
@@ -92,7 +92,7 @@ impl ManifestProvider for CargoManifestProvider {
     ) -> Option<Arc<RelPath>> {
         let mut outermost_cargo_toml = None;
         for path in path.ancestors().take(depth) {
-            let p = path.join(RelPath::unix("Cargo.toml").unwrap());
+            let p = path.join(RelPath::new("Cargo.toml").unwrap());
             if delegate.exists(&p, Some(false)) {
                 outermost_cargo_toml = Some(Arc::from(path));
             }
diff --git a/crates/languages/src/typescript.rs b/crates/languages/src/typescript.rs
index 4d1282e28a..6e3661fa6f 100644
--- a/crates/languages/src/typescript.rs
+++ b/crates/languages/src/typescript.rs
@@ -269,7 +269,7 @@ impl TypeScriptContextProvider {
     ) -> Task<anyhow::Result<PackageJsonData>> {
         let new_json_data = file_relative_path
             .ancestors()
-            .map(|path| worktree_root.join(path.as_std_path()))
+            .map(|path| worktree_root.join(path))
             .map(|parent_path| {
                 self.package_json_data(&parent_path, self.last_package_json.clone(), fs.clone(), cx)
             })
@@ -533,7 +533,7 @@ impl TypeScriptLspAdapter {
     }
     async fn tsdk_path(&self, adapter: &Arc<dyn LspAdapterDelegate>) -> Option<&'static str> {
         let is_yarn = adapter
-            .read_text_file(RelPath::unix(".yarn/sdks/typescript/lib/typescript.js").unwrap())
+            .read_text_file(RelPath::new(".yarn/sdks/typescript/lib/typescript.js").unwrap())
             .await
             .is_ok();
 
diff --git a/crates/languages/src/vtsls.rs b/crates/languages/src/vtsls.rs
index 9124a64227..053d15775b 100644
--- a/crates/languages/src/vtsls.rs
+++ b/crates/languages/src/vtsls.rs
@@ -36,7 +36,7 @@ impl VtslsLspAdapter {
 
     async fn tsdk_path(&self, adapter: &Arc<dyn LspAdapterDelegate>) -> Option<&'static str> {
         let is_yarn = adapter
-            .read_text_file(RelPath::unix(".yarn/sdks/typescript/lib/typescript.js").unwrap())
+            .read_text_file(RelPath::new(".yarn/sdks/typescript/lib/typescript.js").unwrap())
             .await
             .is_ok();
 
diff --git a/crates/livekit_client/src/livekit_client.rs b/crates/livekit_client/src/livekit_client.rs
index 30a13bd910..45e929cb2e 100644
--- a/crates/livekit_client/src/livekit_client.rs
+++ b/crates/livekit_client/src/livekit_client.rs
@@ -1,6 +1,6 @@
 use std::sync::Arc;
 
-use anyhow::{Context as _, Result, anyhow};
+use anyhow::{Context as _, Result};
 use audio::AudioSettings;
 use collections::HashMap;
 use futures::{SinkExt, channel::mpsc};
@@ -12,10 +12,7 @@ use settings::Settings;
 
 mod playback;
 
-use crate::{
-    LocalTrack, Participant, RemoteTrack, RoomEvent, TrackPublication,
-    livekit_client::playback::Speaker,
-};
+use crate::{LocalTrack, Participant, RemoteTrack, RoomEvent, TrackPublication};
 pub use playback::AudioStream;
 pub(crate) use playback::{RemoteVideoFrame, play_remote_video_track};
 
@@ -135,20 +132,11 @@ impl Room {
         track: &RemoteAudioTrack,
         cx: &mut App,
     ) -> Result<playback::AudioStream> {
-        let speaker: Speaker =
-            serde_urlencoded::from_str(&track.0.name()).unwrap_or_else(|_| Speaker {
-                name: track.0.name(),
-                is_staff: false,
-                sends_legacy_audio: true,
-            });
-
         if AudioSettings::get_global(cx).rodio_audio {
             info!("Using experimental.rodio_audio audio pipeline for output");
-            playback::play_remote_audio_track(&track.0, speaker, cx)
-        } else if speaker.sends_legacy_audio {
-            Ok(self.playback.play_remote_audio_track(&track.0))
+            playback::play_remote_audio_track(&track.0, cx)
         } else {
-            Err(anyhow!("Client version too old to play audio in call"))
+            Ok(self.playback.play_remote_audio_track(&track.0))
         }
     }
 }
diff --git a/crates/livekit_client/src/livekit_client/playback.rs b/crates/livekit_client/src/livekit_client/playback.rs
index cdd766453c..df8b5ea54f 100644
--- a/crates/livekit_client/src/livekit_client/playback.rs
+++ b/crates/livekit_client/src/livekit_client/playback.rs
@@ -1,6 +1,6 @@
 use anyhow::{Context as _, Result};
 
-use audio::{AudioSettings, CHANNEL_COUNT, LEGACY_CHANNEL_COUNT, LEGACY_SAMPLE_RATE, SAMPLE_RATE};
+use audio::{AudioSettings, CHANNEL_COUNT, SAMPLE_RATE};
 use cpal::traits::{DeviceTrait, StreamTrait as _};
 use futures::channel::mpsc::UnboundedSender;
 use futures::{Stream, StreamExt as _};
@@ -43,15 +43,12 @@ pub(crate) struct AudioStack {
 
 pub(crate) fn play_remote_audio_track(
     track: &livekit::track::RemoteAudioTrack,
-    speaker: Speaker,
     cx: &mut gpui::App,
 ) -> Result<AudioStream> {
-    info!("speaker: {speaker:?}");
-    let stream =
-        source::LiveKitStream::new(cx.background_executor(), track, speaker.sends_legacy_audio);
-
     let stop_handle = Arc::new(AtomicBool::new(false));
     let stop_handle_clone = stop_handle.clone();
+    let stream = source::LiveKitStream::new(cx.background_executor(), track);
+
     let stream = stream
         .stoppable()
         .periodic_access(Duration::from_millis(50), move |s| {
@@ -60,8 +57,10 @@ pub(crate) fn play_remote_audio_track(
             }
         });
 
-    info!("sample_rate: {:?}", stream.sample_rate());
-    info!("channel_count: {:?}", stream.channels());
+    let speaker: Speaker = serde_urlencoded::from_str(&track.name()).unwrap_or_else(|_| Speaker {
+        name: track.name(),
+        is_staff: false,
+    });
     audio::Audio::play_voip_stream(stream, speaker.name, speaker.is_staff, cx)
         .context("Could not play audio")?;
 
@@ -97,8 +96,8 @@ impl AudioStack {
         let next_ssrc = self.next_ssrc.fetch_add(1, Ordering::Relaxed);
         let source = AudioMixerSource {
             ssrc: next_ssrc,
-            sample_rate: LEGACY_SAMPLE_RATE.get(),
-            num_channels: LEGACY_CHANNEL_COUNT.get() as u32,
+            sample_rate: SAMPLE_RATE.get(),
+            num_channels: CHANNEL_COUNT.get() as u32,
             buffer: Arc::default(),
         };
         self.mixer.lock().add_source(source.clone());
@@ -138,14 +137,9 @@ impl AudioStack {
             let apm = self.apm.clone();
             let mixer = self.mixer.clone();
             async move {
-                Self::play_output(
-                    apm,
-                    mixer,
-                    LEGACY_SAMPLE_RATE.get(),
-                    LEGACY_CHANNEL_COUNT.get().into(),
-                )
-                .await
-                .log_err();
+                Self::play_output(apm, mixer, SAMPLE_RATE.get(), CHANNEL_COUNT.get().into())
+                    .await
+                    .log_err();
             }
         }));
         *self._output_task.borrow_mut() = Arc::downgrade(&task);
@@ -158,36 +152,19 @@ impl AudioStack {
         is_staff: bool,
         cx: &AsyncApp,
     ) -> Result<(crate::LocalAudioTrack, AudioStream)> {
-        let legacy_audio_compatible =
-            AudioSettings::try_read_global(cx, |setting| setting.legacy_audio_compatible)
-                .unwrap_or(true);
-
-        let source = if legacy_audio_compatible {
-            NativeAudioSource::new(
-                // n.b. this struct's options are always ignored, noise cancellation is provided by apm.
-                AudioSourceOptions::default(),
-                LEGACY_SAMPLE_RATE.get(),
-                LEGACY_CHANNEL_COUNT.get().into(),
-                10,
-            )
-        } else {
-            NativeAudioSource::new(
-                // n.b. this struct's options are always ignored, noise cancellation is provided by apm.
-                AudioSourceOptions::default(),
-                SAMPLE_RATE.get(),
-                CHANNEL_COUNT.get().into(),
-                10,
-            )
-        };
+        let source = NativeAudioSource::new(
+            // n.b. this struct's options are always ignored, noise cancellation is provided by apm.
+            AudioSourceOptions::default(),
+            SAMPLE_RATE.get(),
+            CHANNEL_COUNT.get().into(),
+            10,
+        );
 
-        let speaker = Speaker {
+        let track_name = serde_urlencoded::to_string(Speaker {
             name: user_name,
             is_staff,
-            sends_legacy_audio: legacy_audio_compatible,
-        };
-        log::info!("Microphone speaker: {speaker:?}");
-        let track_name = serde_urlencoded::to_string(speaker)
-            .context("Could not encode user information in track name")?;
+        })
+        .context("Could not encode user information in track name")?;
 
         let track = track::LocalAudioTrack::create_audio_track(
             &track_name,
@@ -209,32 +186,22 @@ impl AudioStack {
         let capture_task = if rodio_pipeline {
             info!("Using experimental.rodio_audio audio pipeline");
             let voip_parts = audio::VoipParts::new(cx)?;
-            // Audio needs to run real-time and should never be paused. That is
-            // why we are using a normal std::thread and not a background task
+            // Audio needs to run real-time and should never be paused. That is why we are using a
+            // normal std::thread and not a background task
             thread::Builder::new()
-                .name("MicrophoneToLivekit".to_string())
+                .name("AudioCapture".to_string())
                 .spawn(move || {
                     // microphone is non send on mac
-                    let microphone = match audio::Audio::open_microphone(voip_parts) {
-                        Ok(m) => m,
-                        Err(e) => {
-                            log::error!("Could not open microphone: {e}");
-                            return;
-                        }
-                    };
+                    let microphone = audio::Audio::open_microphone(voip_parts)?;
                     send_to_livekit(frame_tx, microphone);
+                    Ok::<(), anyhow::Error>(())
                 })
-                .expect("should be able to spawn threads");
+                .unwrap();
             Task::ready(Ok(()))
         } else {
             self.executor.spawn(async move {
-                Self::capture_input(
-                    apm,
-                    frame_tx,
-                    LEGACY_SAMPLE_RATE.get(),
-                    LEGACY_CHANNEL_COUNT.get().into(),
-                )
-                .await
+                Self::capture_input(apm, frame_tx, SAMPLE_RATE.get(), CHANNEL_COUNT.get().into())
+                    .await
             })
         };
 
@@ -421,31 +388,26 @@ impl AudioStack {
     }
 }
 
-#[derive(Serialize, Deserialize, Debug)]
-pub struct Speaker {
-    pub name: String,
-    pub is_staff: bool,
-    pub sends_legacy_audio: bool,
+#[derive(Serialize, Deserialize)]
+struct Speaker {
+    name: String,
+    is_staff: bool,
 }
 
 fn send_to_livekit(frame_tx: UnboundedSender<AudioFrame<'static>>, mut microphone: impl Source) {
     use cpal::Sample;
-    let sample_rate = microphone.sample_rate().get();
-    let num_channels = microphone.channels().get() as u32;
-    let buffer_size = sample_rate / 100 * num_channels;
-
     loop {
         let sampled: Vec<_> = microphone
             .by_ref()
-            .take(buffer_size as usize)
+            .take(audio::BUFFER_SIZE)
             .map(|s| s.to_sample())
             .collect();
 
         if frame_tx
             .unbounded_send(AudioFrame {
-                sample_rate,
-                num_channels,
-                samples_per_channel: sampled.len() as u32 / num_channels,
+                sample_rate: SAMPLE_RATE.get(),
+                num_channels: CHANNEL_COUNT.get() as u32,
+                samples_per_channel: sampled.len() as u32 / CHANNEL_COUNT.get() as u32,
                 data: Cow::Owned(sampled),
             })
             .is_err()
diff --git a/crates/livekit_client/src/livekit_client/playback/source.rs b/crates/livekit_client/src/livekit_client/playback/source.rs
index cde4b19fda..f605b3d517 100644
--- a/crates/livekit_client/src/livekit_client/playback/source.rs
+++ b/crates/livekit_client/src/livekit_client/playback/source.rs
@@ -3,19 +3,17 @@ use std::num::NonZero;
 use futures::StreamExt;
 use libwebrtc::{audio_stream::native::NativeAudioStream, prelude::AudioFrame};
 use livekit::track::RemoteAudioTrack;
-use rodio::{
-    ChannelCount, SampleRate, Source, buffer::SamplesBuffer, conversions::SampleTypeConverter,
-};
+use rodio::{Source, buffer::SamplesBuffer, conversions::SampleTypeConverter, nz};
 
-use audio::{CHANNEL_COUNT, LEGACY_CHANNEL_COUNT, LEGACY_SAMPLE_RATE, SAMPLE_RATE};
+use audio::{CHANNEL_COUNT, SAMPLE_RATE};
 
 fn frame_to_samplesbuffer(frame: AudioFrame) -> SamplesBuffer {
     let samples = frame.data.iter().copied();
     let samples = SampleTypeConverter::<_, _>::new(samples);
     let samples: Vec<f32> = samples.collect();
     SamplesBuffer::new(
-        NonZero::new(frame.num_channels as u16).expect("zero channels is nonsense"),
-        NonZero::new(frame.sample_rate).expect("samplerate zero is nonsense"),
+        nz!(2), // frame always has two channels
+        NonZero::new(frame.sample_rate).expect("audio frame sample rate is nonzero"),
         samples,
     )
 }
@@ -24,26 +22,14 @@ pub struct LiveKitStream {
     // shared_buffer: SharedBuffer,
     inner: rodio::queue::SourcesQueueOutput,
     _receiver_task: gpui::Task<()>,
-    channel_count: ChannelCount,
-    sample_rate: SampleRate,
 }
 
 impl LiveKitStream {
-    pub fn new(
-        executor: &gpui::BackgroundExecutor,
-        track: &RemoteAudioTrack,
-        legacy: bool,
-    ) -> Self {
-        let (channel_count, sample_rate) = if legacy {
-            (LEGACY_CHANNEL_COUNT, LEGACY_SAMPLE_RATE)
-        } else {
-            (CHANNEL_COUNT, SAMPLE_RATE)
-        };
-
+    pub fn new(executor: &gpui::BackgroundExecutor, track: &RemoteAudioTrack) -> Self {
         let mut stream = NativeAudioStream::new(
             track.rtc_track(),
-            sample_rate.get() as i32,
-            channel_count.get().into(),
+            SAMPLE_RATE.get() as i32,
+            CHANNEL_COUNT.get().into(),
         );
         let (queue_input, queue_output) = rodio::queue::queue(true);
         // spawn rtc stream
@@ -59,8 +45,6 @@ impl LiveKitStream {
         LiveKitStream {
             _receiver_task: receiver_task,
             inner: queue_output,
-            sample_rate,
-            channel_count,
         }
     }
 }
@@ -79,11 +63,17 @@ impl Source for LiveKitStream {
     }
 
     fn channels(&self) -> rodio::ChannelCount {
-        self.channel_count
+        // This must be hardcoded because the playback source assumes constant
+        // sample rate and channel count. The queue upon which this is build
+        // will however report different counts and rates. Even though we put in
+        // only items with our (constant) CHANNEL_COUNT & SAMPLE_RATE this will
+        // play silence on one channel and at 44100 which is not what our
+        // constants are.
+        CHANNEL_COUNT
     }
 
     fn sample_rate(&self) -> rodio::SampleRate {
-        self.sample_rate
+        SAMPLE_RATE // see comment on channels
     }
 
     fn total_duration(&self) -> Option<std::time::Duration> {
diff --git a/crates/macos_appkit_bridge/build.rs b/crates/macos_appkit_bridge/build.rs
new file mode 100644
index 0000000000..e9cb6e0d5e
--- /dev/null
+++ b/crates/macos_appkit_bridge/build.rs
@@ -0,0 +1,53 @@
+#[cfg(target_os = "macos")]
+fn main() {
+    // Build Swift package and link static library
+    let _out_dir = std::env::var("OUT_DIR").unwrap();
+    let package_dir = std::env::current_dir().unwrap();
+
+    let swift_dir = package_dir.join("swift");
+    std::fs::create_dir_all(&swift_dir).ok();
+
+    // No codegen needed for C ABI shim
+
+    // Rebuild when the Swift sources change.
+    println!("cargo:rerun-if-changed=swift/Package.swift");
+    println!("cargo:rerun-if-changed=swift/Sources");
+
+    // Select target architecture so cross-compiles (e.g. x86_64 on arm64) link correctly.
+    let target = std::env::var("TARGET").expect("TARGET unset");
+    let arch_flag = match target.as_str() {
+        "aarch64-apple-darwin" => Some("arm64"),
+        "x86_64-apple-darwin" => Some("x86_64"),
+        _ => None,
+    };
+
+    // Build the Swift package containing our shim and the generated bridge.
+    let mut build_cmd = std::process::Command::new("swift");
+    build_cmd.current_dir(&swift_dir).args(["build", "-c", "release"]);
+    if let Some(arch) = arch_flag {
+        build_cmd.args(["--arch", arch]);
+    }
+    let status = build_cmd.status().expect("Failed to spawn swift build");
+    if !status.success() {
+        panic!("swift build failed: {:?}", status);
+    }
+
+    // Link the produced static library; prefer arch-specific directory when present.
+    let arch_lib_dir = arch_flag.map(|arch| {
+        swift_dir
+            .join(".build")
+            .join(format!("{}-apple-macosx", arch))
+            .join("release")
+    });
+    let generic_lib_dir = swift_dir.join(".build").join("release");
+    let lib_dir = arch_lib_dir
+        .as_ref()
+        .filter(|path| path.exists())
+        .unwrap_or(&generic_lib_dir);
+    println!("cargo:rustc-link-search=native={}", lib_dir.display());
+    println!("cargo:rustc-link-lib=static=SwiftPackage");
+    println!("cargo:rustc-link-lib=framework=AppKit");
+}
+
+#[cfg(not(target_os = "macos"))]
+fn main() {}
diff --git a/crates/outline_panel/src/outline_panel.rs b/crates/outline_panel/src/outline_panel.rs
index a2c404af80..4ba6369218 100644
--- a/crates/outline_panel/src/outline_panel.rs
+++ b/crates/outline_panel/src/outline_panel.rs
@@ -6660,7 +6660,7 @@ outline: struct OutlineEntryExcerpt
                                 .read(cx)
                                 .root_name()
                                 .join(&directory.entry.path)
-                                .as_unix_str()
+                                .as_str()
                                 .to_string()
                         } else {
                             directory
diff --git a/crates/paths/src/paths.rs b/crates/paths/src/paths.rs
index ac68cf8631..b860cc1b02 100644
--- a/crates/paths/src/paths.rs
+++ b/crates/paths/src/paths.rs
@@ -31,12 +31,12 @@ static CONFIG_DIR: OnceLock<PathBuf> = OnceLock::new();
 
 /// Returns the relative path to the zed_server directory on the ssh host.
 pub fn remote_server_dir_relative() -> &'static RelPath {
-    RelPath::unix(".zed_server").unwrap()
+    RelPath::new(".zed_server").unwrap()
 }
 
 /// Returns the relative path to the zed_wsl_server directory on the wsl host.
 pub fn remote_wsl_server_dir_relative() -> &'static RelPath {
-    RelPath::unix(".zed_wsl_server").unwrap()
+    RelPath::new(".zed_wsl_server").unwrap()
 }
 
 /// Sets a custom directory for all user data, overriding the default data directory.
@@ -410,17 +410,17 @@ pub fn local_vscode_folder_name() -> &'static str {
 
 /// Returns the relative path to a `settings.json` file within a project.
 pub fn local_settings_file_relative_path() -> &'static RelPath {
-    RelPath::unix(".zed/settings.json").unwrap()
+    RelPath::new(".zed/settings.json").unwrap()
 }
 
 /// Returns the relative path to a `tasks.json` file within a project.
 pub fn local_tasks_file_relative_path() -> &'static RelPath {
-    RelPath::unix(".zed/tasks.json").unwrap()
+    RelPath::new(".zed/tasks.json").unwrap()
 }
 
 /// Returns the relative path to a `.vscode/tasks.json` file within a project.
 pub fn local_vscode_tasks_file_relative_path() -> &'static RelPath {
-    RelPath::unix(".vscode/tasks.json").unwrap()
+    RelPath::new(".vscode/tasks.json").unwrap()
 }
 
 pub fn debug_task_file_name() -> &'static str {
@@ -434,12 +434,12 @@ pub fn task_file_name() -> &'static str {
 /// Returns the relative path to a `debug.json` file within a project.
 /// .zed/debug.json
 pub fn local_debug_file_relative_path() -> &'static RelPath {
-    RelPath::unix(".zed/debug.json").unwrap()
+    RelPath::new(".zed/debug.json").unwrap()
 }
 
 /// Returns the relative path to a `.vscode/launch.json` file within a project.
 pub fn local_vscode_launch_file_relative_path() -> &'static RelPath {
-    RelPath::unix(".vscode/launch.json").unwrap()
+    RelPath::new(".vscode/launch.json").unwrap()
 }
 
 pub fn user_ssh_config_file() -> PathBuf {
diff --git a/crates/project/src/git_store.rs b/crates/project/src/git_store.rs
index 1a6f966b89..168549d4eb 100644
--- a/crates/project/src/git_store.rs
+++ b/crates/project/src/git_store.rs
@@ -989,7 +989,7 @@ impl GitStore {
                             parse_git_remote_url(provider_registry, &origin_url)
                                 .context("parsing Git remote URL")?;
 
-                        let path = repo_path.as_unix_str();
+                        let path = repo_path.as_str();
 
                         Ok(provider.build_permalink(
                             remote,
@@ -1315,7 +1315,7 @@ impl GitStore {
                 });
                 if let Some((repo, path)) = self.repository_and_path_for_buffer_id(buffer_id, cx) {
                     let recv = repo.update(cx, |repo, cx| {
-                        log::debug!("hunks changed for {}", path.as_unix_str());
+                        log::debug!("hunks changed for {}", path.as_str());
                         repo.spawn_set_index_text_job(
                             path,
                             new_index_text.as_ref().map(|rope| rope.to_string()),
@@ -3118,7 +3118,7 @@ impl Repository {
                                 let repo_path = this.abs_path_to_repo_path(&abs_path)?;
                                 log::debug!(
                                     "start reload diff bases for repo path {}",
-                                    repo_path.as_unix_str()
+                                    repo_path.as_str()
                                 );
                                 diff_state.update(cx, |diff_state, _| {
                                     let has_unstaged_diff = diff_state
@@ -4162,10 +4162,7 @@ impl Repository {
             Some(GitJobKey::WriteIndex(path.clone())),
             None,
             move |git_repo, mut cx| async move {
-                log::debug!(
-                    "start updating index text for buffer {}",
-                    path.as_unix_str()
-                );
+                log::debug!("start updating index text for buffer {}", path.as_str());
                 match git_repo {
                     RepositoryState::Local {
                         backend,
@@ -4187,10 +4184,7 @@ impl Repository {
                             .await?;
                     }
                 }
-                log::debug!(
-                    "finish updating index text for buffer {}",
-                    path.as_unix_str()
-                );
+                log::debug!("finish updating index text for buffer {}", path.as_str());
 
                 if let Some(hunk_staging_operation_count) = hunk_staging_operation_count {
                     let project_path = this
diff --git a/crates/project/src/git_store/git_traversal.rs b/crates/project/src/git_store/git_traversal.rs
index ca4a22b14d..3da56b0246 100644
--- a/crates/project/src/git_store/git_traversal.rs
+++ b/crates/project/src/git_store/git_traversal.rs
@@ -332,7 +332,7 @@ mod tests {
 
         let traversal = GitTraversal::new(
             &repo_snapshots,
-            worktree_snapshot.traverse_from_path(true, false, true, RelPath::unix("x").unwrap()),
+            worktree_snapshot.traverse_from_path(true, false, true, RelPath::new("x").unwrap()),
         );
         let entries = traversal
             .map(|entry| (entry.path.clone(), entry.git_summary))
diff --git a/crates/project/src/lsp_store.rs b/crates/project/src/lsp_store.rs
index ce1b52999a..77ec10d01e 100644
--- a/crates/project/src/lsp_store.rs
+++ b/crates/project/src/lsp_store.rs
@@ -1850,7 +1850,7 @@ impl LocalLspStore {
                                                 if !extra_buffers.is_empty() {
                                                     extra_buffers.push_str(", ");
                                                 }
-                                                extra_buffers.push_str(path.path.as_unix_str());
+                                                extra_buffers.push_str(path.path.as_str());
                                             }
                                         })
                                         .ok();
@@ -3284,7 +3284,7 @@ impl LocalLspStore {
                     let literal_prefix = glob_literal_prefix(relative);
                     Some((
                         worktree.clone(),
-                        RelPath::new(&literal_prefix, path_style).ok()?.into_arc(),
+                        RelPath::from_std_path(&literal_prefix, path_style).ok()?,
                         relative.to_string_lossy().to_string(),
                     ))
                 }
@@ -3300,7 +3300,7 @@ impl LocalLspStore {
                     literal_prefix.push(glob_literal_prefix(Path::new(&rp.pattern)));
                     Some((
                         worktree.clone(),
-                        RelPath::new(&literal_prefix, path_style).ok()?.into_arc(),
+                        RelPath::from_std_path(&literal_prefix, path_style).ok()?,
                         rp.pattern.clone(),
                     ))
                 }
@@ -7936,8 +7936,11 @@ impl LspStore {
                 let relative_path = if let Some(known_path) = known_relative_path {
                     known_path
                 } else {
-                    RelPath::new(abs_path.strip_prefix(worktree_root)?, PathStyle::local())?
-                        .into_arc()
+                    RelPath::from_std_path(
+                        abs_path.strip_prefix(worktree_root)?,
+                        PathStyle::local(),
+                    )
+                    .context("failed to create relative path")?
                 };
                 (worktree, relative_path)
             };
diff --git a/crates/project/src/manifest_tree/path_trie.rs b/crates/project/src/manifest_tree/path_trie.rs
index 9710bb46d0..2dd301fb13 100644
--- a/crates/project/src/manifest_tree/path_trie.rs
+++ b/crates/project/src/manifest_tree/path_trie.rs
@@ -61,7 +61,7 @@ impl<Label: Ord + Clone> RootPathTrie<Label> {
 
         let mut path_so_far = <Arc<RelPath>>::from(RelPath::empty());
         for key in path.0.iter() {
-            path_so_far = path_so_far.join(RelPath::unix(key.as_ref()).unwrap());
+            path_so_far = path_so_far.join(RelPath::new(key).unwrap());
             current = match current.children.entry(key.clone()) {
                 Entry::Vacant(vacant_entry) => {
                     vacant_entry.insert(RootPathTrie::new_with_key(path_so_far.clone()))
@@ -157,7 +157,7 @@ mod tests {
 
         trie.walk(&TriePath::new(rel_path("a/b/c")), &mut |path, nodes| {
             assert_eq!(nodes.get(&()), Some(&LabelPresence::Present));
-            assert_eq!(path.as_unix_str(), "a/b/c");
+            assert_eq!(path.as_str(), "a/b/c");
             ControlFlow::Continue(())
         });
         // Now let's annotate a parent with "Known missing" node.
@@ -170,10 +170,10 @@ mod tests {
         // Ensure that we walk from the root to the leaf.
         let mut visited_paths = BTreeSet::new();
         trie.walk(&TriePath::new(rel_path("a/b/c")), &mut |path, nodes| {
-            if path.as_unix_str() == "a/b/c" {
+            if path.as_str() == "a/b/c" {
                 assert_eq!(visited_paths, BTreeSet::from_iter([rel_path("a").into()]));
                 assert_eq!(nodes.get(&()), Some(&LabelPresence::Present));
-            } else if path.as_unix_str() == "a" {
+            } else if path.as_str() == "a" {
                 assert!(visited_paths.is_empty());
                 assert_eq!(nodes.get(&()), Some(&LabelPresence::KnownAbsent));
             } else {
@@ -189,10 +189,10 @@ mod tests {
         trie.walk(
             &TriePath::new(rel_path("a/b/c/d/e/f/g")),
             &mut |path, nodes| {
-                if path.as_unix_str() == "a/b/c" {
+                if path.as_str() == "a/b/c" {
                     assert_eq!(visited_paths, BTreeSet::from_iter([rel_path("a").into()]));
                     assert_eq!(nodes.get(&()), Some(&LabelPresence::Present));
-                } else if path.as_unix_str() == "a" {
+                } else if path.as_str() == "a" {
                     assert!(visited_paths.is_empty());
                     assert_eq!(nodes.get(&()), Some(&LabelPresence::KnownAbsent));
                 } else {
@@ -207,7 +207,7 @@ mod tests {
         // Test breaking from the tree-walk.
         let mut visited_paths = BTreeSet::new();
         trie.walk(&TriePath::new(rel_path("a/b/c")), &mut |path, nodes| {
-            if path.as_unix_str() == "a" {
+            if path.as_str() == "a" {
                 assert!(visited_paths.is_empty());
                 assert_eq!(nodes.get(&()), Some(&LabelPresence::KnownAbsent));
             } else {
@@ -254,8 +254,8 @@ mod tests {
         let mut visited_paths = BTreeSet::new();
         trie.walk(&TriePath::new(rel_path("a/b/c")), &mut |path, nodes| {
             assert_eq!(nodes.get(&()), Some(&LabelPresence::Present));
-            if path.as_unix_str() != "a" && path.as_unix_str() != "a/b" {
-                panic!("Unexpected path: {}", path.as_unix_str());
+            if path.as_str() != "a" && path.as_str() != "a/b" {
+                panic!("Unexpected path: {}", path.as_str());
             }
             assert!(visited_paths.insert(path.clone()));
             ControlFlow::Continue(())
diff --git a/crates/project/src/prettier_store.rs b/crates/project/src/prettier_store.rs
index 625f239b28..48cf4f4c88 100644
--- a/crates/project/src/prettier_store.rs
+++ b/crates/project/src/prettier_store.rs
@@ -447,7 +447,7 @@ impl PrettierStore {
     ) {
         let prettier_config_files = Prettier::CONFIG_FILE_NAMES
             .iter()
-            .map(|name| RelPath::unix(name).unwrap())
+            .map(|name| RelPath::new(name).unwrap())
             .collect::<HashSet<_>>();
 
         let prettier_config_file_changed = changes
diff --git a/crates/project/src/project.rs b/crates/project/src/project.rs
index 24a364012e..1b85bda851 100644
--- a/crates/project/src/project.rs
+++ b/crates/project/src/project.rs
@@ -2032,7 +2032,7 @@ impl Project {
 
     pub fn worktree_root_names<'a>(&'a self, cx: &'a App) -> impl Iterator<Item = &'a str> {
         self.visible_worktrees(cx)
-            .map(|tree| tree.read(cx).root_name().as_unix_str())
+            .map(|tree| tree.read(cx).root_name().as_str())
     }
 
     pub fn worktree_for_id(&self, id: WorktreeId, cx: &App) -> Option<Entity<Worktree>> {
@@ -4242,18 +4242,20 @@ impl Project {
         cx: &mut Context<Self>,
     ) -> Task<Option<ResolvedPath>> {
         let mut candidates = vec![];
-        let path_style = self.path_style(cx);
-        if let Ok(path) = RelPath::new(path.as_ref(), path_style) {
-            candidates.push(path.into_arc());
+        if let Ok(path) = RelPath::from_std_path(Path::new(path), self.path_style(cx)) {
+            candidates.push(path);
         }
 
         if let Some(file) = buffer.read(cx).file()
             && let Some(dir) = file.path().parent()
         {
-            if let Some(joined) = path_style.join(&*dir.display(path_style), path)
-                && let Some(joined) = RelPath::new(joined.as_ref(), path_style).ok()
+            if let Some(joined) = self
+                .path_style(cx)
+                .join(&*dir.display(self.path_style(cx)), path)
+                && let Some(joined) =
+                    RelPath::from_std_path(Path::new(&joined), self.path_style(cx)).ok()
             {
-                candidates.push(joined.into_arc());
+                candidates.push(joined);
             }
         }
 
@@ -4468,30 +4470,30 @@ impl Project {
                 let worktree_abs_path = worktree.read(cx).abs_path();
 
                 if let Ok(relative_path) = path.strip_prefix(worktree_abs_path)
-                    && let Ok(path) = RelPath::new(relative_path, path_style)
+                    && let Ok(path) = RelPath::from_std_path(relative_path, path_style)
                 {
                     return Some(ProjectPath {
                         worktree_id: worktree.read(cx).id(),
-                        path: path.into_arc(),
+                        path,
                     });
                 }
             }
         } else {
             for worktree in worktree_store.visible_worktrees(cx) {
                 let worktree_root_name = worktree.read(cx).root_name();
-                if let Ok(relative_path) = path.strip_prefix(worktree_root_name.as_std_path())
-                    && let Ok(path) = RelPath::new(relative_path, path_style)
+                if let Ok(relative_path) = path.strip_prefix(worktree_root_name)
+                    && let Ok(path) = RelPath::from_std_path(relative_path, path_style)
                 {
                     return Some(ProjectPath {
                         worktree_id: worktree.read(cx).id(),
-                        path: path.into_arc(),
+                        path,
                     });
                 }
             }
 
             for worktree in worktree_store.visible_worktrees(cx) {
                 let worktree = worktree.read(cx);
-                if let Ok(path) = RelPath::new(path, path_style)
+                if let Ok(path) = RelPath::from_std_path(path, path_style)
                     && let Some(entry) = worktree.entry_for_path(&path)
                 {
                     return Some(ProjectPath {
diff --git a/crates/project/src/project_settings.rs b/crates/project/src/project_settings.rs
index a6cbc25198..e0207fedf0 100644
--- a/crates/project/src/project_settings.rs
+++ b/crates/project/src/project_settings.rs
@@ -859,7 +859,7 @@ impl SettingsObserver {
                     .unwrap()
                     .into();
                 (settings_dir, LocalSettingsKind::Debug)
-            } else if path.ends_with(RelPath::unix(EDITORCONFIG_NAME).unwrap()) {
+            } else if path.ends_with(RelPath::new(EDITORCONFIG_NAME).unwrap()) {
                 let Some(settings_dir) = path.parent().map(Arc::from) else {
                     continue;
                 };
@@ -881,7 +881,7 @@ impl SettingsObserver {
                         Some(
                             async move {
                                 let content = fs.load(&abs_path).await?;
-                                if abs_path.ends_with(local_vscode_tasks_file_relative_path().as_std_path()) {
+                                if abs_path.ends_with(local_vscode_tasks_file_relative_path()) {
                                     let vscode_tasks =
                                         parse_json_with_comments::<VsCodeTaskFile>(&content)
                                             .with_context(|| {
@@ -898,7 +898,7 @@ impl SettingsObserver {
                                             "serializing Zed tasks into JSON, file {abs_path:?}"
                                         )
                                     })
-                                } else if abs_path.ends_with(local_vscode_launch_file_relative_path().as_std_path()) {
+                                } else if abs_path.ends_with(local_vscode_launch_file_relative_path()) {
                                     let vscode_tasks =
                                         parse_json_with_comments::<VsCodeDebugTaskFile>(&content)
                                             .with_context(|| {
@@ -984,7 +984,7 @@ impl SettingsObserver {
                             Ok(()) => {
                                 cx.emit(SettingsObserverEvent::LocalSettingsUpdated(Ok(directory
                                     .as_std_path()
-                                    .join(local_settings_file_relative_path().as_std_path()))));
+                                    .join(local_settings_file_relative_path()))));
                             }
                         }
                     }),
@@ -1013,7 +1013,7 @@ impl SettingsObserver {
                         Ok(()) => {
                             cx.emit(SettingsObserverEvent::LocalTasksUpdated(Ok(directory
                                 .as_std_path()
-                                .join(task_file_name()))));
+                                .join(RelPath::new(task_file_name()).unwrap()))));
                         }
                     }
                 }
@@ -1044,7 +1044,7 @@ impl SettingsObserver {
                         Ok(()) => {
                             cx.emit(SettingsObserverEvent::LocalTasksUpdated(Ok(directory
                                 .as_std_path()
-                                .join(task_file_name()))));
+                                .join(RelPath::new(task_file_name()).unwrap()))));
                         }
                     }
                 }
diff --git a/crates/project/src/project_tests.rs b/crates/project/src/project_tests.rs
index 4a27d88a01..75f5423f1a 100644
--- a/crates/project/src/project_tests.rs
+++ b/crates/project/src/project_tests.rs
@@ -608,7 +608,7 @@ async fn test_running_multiple_instances_of_a_single_server_in_one_worktree(
             }: ManifestQuery,
         ) -> Option<Arc<RelPath>> {
             for path in path.ancestors().take(depth) {
-                let p = path.join(rel_path("pyproject.toml"));
+                let p = path.join(RelPath::new("pyproject.toml").unwrap());
                 if delegate.exists(&p, Some(false)) {
                     return Some(path.into());
                 }
@@ -737,7 +737,7 @@ async fn test_running_multiple_instances_of_a_single_server_in_one_worktree(
         })
         .await
         .expect("A toolchain to be discovered");
-    assert_eq!(root_path.as_ref(), rel_path("project-b"));
+    assert_eq!(root_path.as_ref(), RelPath::new("project-b").unwrap());
     assert_eq!(available_toolchains_for_b.toolchains().len(), 1);
     let currently_active_toolchain = project
         .update(cx, |this, cx| {
@@ -1285,7 +1285,7 @@ async fn test_reporting_fs_changes_to_language_servers(cx: &mut gpui::TestAppCon
                 .read(cx)
                 .snapshot()
                 .entries(true, 0)
-                .map(|entry| (entry.path.as_unix_str(), entry.is_ignored))
+                .map(|entry| (entry.path.as_str(), entry.is_ignored))
                 .collect::<Vec<_>>(),
             &[
                 ("", false),
@@ -1403,7 +1403,7 @@ async fn test_reporting_fs_changes_to_language_servers(cx: &mut gpui::TestAppCon
                 .read(cx)
                 .snapshot()
                 .entries(true, 0)
-                .map(|entry| (entry.path.as_unix_str(), entry.is_ignored))
+                .map(|entry| (entry.path.as_str(), entry.is_ignored))
                 .collect::<Vec<_>>(),
             &[
                 ("", false),
@@ -9336,7 +9336,7 @@ fn python_lang(fs: Arc<FakeFs>) -> Arc<Language> {
             let ancestors = subroot_relative_path.ancestors().collect::<Vec<_>>();
             let mut toolchains = vec![];
             for ancestor in ancestors {
-                let venv_path = worktree_root.join(ancestor.as_std_path()).join(".venv");
+                let venv_path = worktree_root.join(ancestor).join(".venv");
                 if self.0.is_dir(&venv_path).await {
                     toolchains.push(Toolchain {
                         name: SharedString::new("Python Venv"),
diff --git a/crates/project/src/task_inventory.rs b/crates/project/src/task_inventory.rs
index 186cdcafc6..6ee664bfb4 100644
--- a/crates/project/src/task_inventory.rs
+++ b/crates/project/src/task_inventory.rs
@@ -228,7 +228,7 @@ impl TaskSourceKind {
                 id_base,
                 directory_in_worktree,
             } => {
-                format!("{id_base}_{id}_{}", directory_in_worktree.as_unix_str())
+                format!("{id_base}_{id}_{}", directory_in_worktree.as_str())
             }
             Self::Language { name } => format!("language_{name}"),
             Self::Lsp {
@@ -1182,7 +1182,7 @@ mod tests {
         let worktree_id = WorktreeId::from_usize(0);
         let local_worktree_location = SettingsLocation {
             worktree_id,
-            path: rel_path("foo"),
+            path: RelPath::new("foo").unwrap(),
         };
         inventory.update(cx, |inventory, _| {
             inventory
@@ -1476,7 +1476,7 @@ mod tests {
                 .update_file_based_tasks(
                     TaskSettingsLocation::Worktree(SettingsLocation {
                         worktree_id: worktree_1,
-                        path: rel_path(".zed"),
+                        path: RelPath::new(".zed").unwrap(),
                     }),
                     Some(&mock_tasks_from_names(
                         worktree_1_tasks.iter().map(|(_, name)| name.as_str()),
@@ -1487,7 +1487,7 @@ mod tests {
                 .update_file_based_tasks(
                     TaskSettingsLocation::Worktree(SettingsLocation {
                         worktree_id: worktree_2,
-                        path: rel_path(".zed"),
+                        path: RelPath::new(".zed").unwrap(),
                     }),
                     Some(&mock_tasks_from_names(
                         worktree_2_tasks.iter().map(|(_, name)| name.as_str()),
diff --git a/crates/project/src/toolchain_store.rs b/crates/project/src/toolchain_store.rs
index 8d78f75184..bbf1ccbe4e 100644
--- a/crates/project/src/toolchain_store.rs
+++ b/crates/project/src/toolchain_store.rs
@@ -257,7 +257,7 @@ impl ToolchainStore {
         envelope: TypedEnvelope<proto::ActiveToolchain>,
         mut cx: AsyncApp,
     ) -> Result<proto::ActiveToolchainResponse> {
-        let path = RelPath::unix(envelope.payload.path.as_deref().unwrap_or(""))?;
+        let path = RelPath::new(envelope.payload.path.as_deref().unwrap_or(""))?;
         let toolchain = this
             .update(&mut cx, |this, cx| {
                 let language_name = LanguageName::from_proto(envelope.payload.language_name);
diff --git a/crates/project/src/worktree_store.rs b/crates/project/src/worktree_store.rs
index 068249e85a..0e187817bf 100644
--- a/crates/project/src/worktree_store.rs
+++ b/crates/project/src/worktree_store.rs
@@ -161,9 +161,9 @@ impl WorktreeStore {
         for tree in self.worktrees() {
             let path_style = tree.read(cx).path_style();
             if let Ok(relative_path) = abs_path.as_ref().strip_prefix(tree.read(cx).abs_path())
-                && let Ok(relative_path) = RelPath::new(relative_path, path_style)
+                && let Ok(relative_path) = RelPath::from_std_path(relative_path, path_style)
             {
-                return Some((tree.clone(), relative_path.into_arc()));
+                return Some((tree.clone(), relative_path));
             }
         }
         None
@@ -1025,9 +1025,9 @@ impl WorktreeStore {
                     continue;
                 }
                 let relative_path = file.strip_prefix(snapshot.abs_path())?;
-                let relative_path = RelPath::new(&relative_path, snapshot.path_style())
+                let relative_path = RelPath::from_std_path(&relative_path, snapshot.path_style())
                     .context("getting relative path")?;
-                results.push((relative_path.into_arc(), !metadata.is_dir))
+                results.push((relative_path, !metadata.is_dir))
             }
             results.sort_by(|(a_path, _), (b_path, _)| a_path.cmp(b_path));
             for (path, is_file) in results {
@@ -1052,7 +1052,7 @@ impl WorktreeStore {
                             worktree_root: snapshot.abs_path().clone(),
                             path: ProjectPath {
                                 worktree_id: snapshot.id(),
-                                path: path.into_arc(),
+                                path,
                             },
                         })
                         .await?;
diff --git a/crates/project/src/yarn.rs b/crates/project/src/yarn.rs
index b270fe2df3..8e7ad7b240 100644
--- a/crates/project/src/yarn.rs
+++ b/crates/project/src/yarn.rs
@@ -114,8 +114,9 @@ impl YarnPathStore {
                 };
                 // Rebase zip-path onto new temp path.
                 let as_relative =
-                    RelPath::new(path.strip_prefix(zip_file).ok()?, PathStyle::local()).ok()?;
-                Some((zip_root.into(), as_relative.into_arc()))
+                    RelPath::from_std_path(path.strip_prefix(zip_file).ok()?, PathStyle::local())
+                        .ok()?;
+                Some((zip_root.into(), as_relative))
             })
         } else {
             Task::ready(None)
diff --git a/crates/project_panel/src/project_panel.rs b/crates/project_panel/src/project_panel.rs
index 5aaefeb421..da413e6367 100644
--- a/crates/project_panel/src/project_panel.rs
+++ b/crates/project_panel/src/project_panel.rs
@@ -1425,7 +1425,7 @@ impl ProjectPanel {
             }
             let trimmed_filename = trimmed_filename.trim_start_matches('/');
 
-            let Ok(filename) = RelPath::unix(trimmed_filename) else {
+            let Ok(filename) = RelPath::new(trimmed_filename) else {
                 edit_state.validation_state = ValidationState::Warning(
                     "File or directory name contains leading or trailing whitespace.".to_string(),
                 );
@@ -1460,7 +1460,7 @@ impl ProjectPanel {
                 if already_exists {
                     edit_state.validation_state = ValidationState::Error(format!(
                         "File or directory '{}' already exists at location. Please choose a different name.",
-                        filename.as_unix_str()
+                        filename.as_str()
                     ));
                     cx.notify();
                     return;
@@ -1495,7 +1495,7 @@ impl ProjectPanel {
         } else {
             filename.trim_start_matches('/')
         };
-        let filename = RelPath::new(filename.as_ref(), path_style).ok()?.into_arc();
+        let filename = RelPath::from_std_path(filename.as_ref(), path_style).ok()?;
 
         edit_state.is_dir =
             edit_state.is_dir || (edit_state.is_new_entry() && filename_indicates_dir);
@@ -2438,7 +2438,7 @@ impl ProjectPanel {
             .path
             .file_name()?
             .to_string();
-        new_path.push(RelPath::unix(&clipboard_entry_file_name).unwrap());
+        new_path.push(RelPath::new(&clipboard_entry_file_name).unwrap());
         let extension = new_path.extension().map(|s| s.to_string());
         let file_name_without_extension = new_path.file_stem()?.to_string();
         let file_name_len = file_name_without_extension.len();
@@ -2466,7 +2466,7 @@ impl ProjectPanel {
                     new_file_name.push_str(extension);
                 }
 
-                new_path.push(RelPath::unix(&new_file_name).unwrap());
+                new_path.push(RelPath::new(&new_file_name).unwrap());
 
                 disambiguation_range = Some(file_name_len..(file_name_len + disambiguation_len));
                 ix += 1;
@@ -2839,7 +2839,7 @@ impl ProjectPanel {
             }
 
             let mut new_path = destination_path.to_rel_path_buf();
-            new_path.push(RelPath::unix(source_path.path.file_name()?).unwrap());
+            new_path.push(RelPath::new(source_path.path.file_name()?).unwrap());
             if new_path.as_rel_path() != source_path.path.as_ref() {
                 let task = project.rename_entry(
                     entry_to_move,
@@ -3007,7 +3007,7 @@ impl ProjectPanel {
             entry: Entry {
                 id: NEW_ENTRY_ID,
                 kind: new_entry_kind,
-                path: parent_entry.path.join(RelPath::unix("\0").unwrap()),
+                path: parent_entry.path.join(RelPath::new("\0").unwrap()),
                 inode: 0,
                 mtime: parent_entry.mtime,
                 size: parent_entry.size,
@@ -3185,7 +3185,7 @@ impl ProjectPanel {
                                     entry.path.strip_prefix(root_folded_entry).ok().and_then(
                                         |suffix| {
                                             Some(
-                                                RelPath::unix(root_folded_entry.file_name()?)
+                                                RelPath::new(root_folded_entry.file_name()?)
                                                     .unwrap()
                                                     .join(suffix),
                                             )
@@ -3196,11 +3196,11 @@ impl ProjectPanel {
                                     entry
                                         .path
                                         .file_name()
-                                        .map(|file_name| RelPath::unix(file_name).unwrap().into())
+                                        .map(|file_name| RelPath::new(file_name).unwrap().into())
                                 })
                                 .unwrap_or_else(|| entry.path.clone());
                         let depth = path.components().count();
-                        (depth, path.as_unix_str().chars().count())
+                        (depth, path.as_str().chars().count())
                     };
                 let width_estimate =
                     item_width_estimate(depth, chars, entry.canonical_path.is_some());
@@ -3337,7 +3337,7 @@ impl ProjectPanel {
             if let Some(name) = path.file_name()
                 && let Some(name) = name.to_str()
             {
-                let target_path = target_directory.join(RelPath::unix(name).unwrap());
+                let target_path = target_directory.join(RelPath::new(name).unwrap());
                 if worktree.read(cx).entry_for_path(&target_path).is_some() {
                     paths_to_replace.push((name.to_string(), path.clone()));
                 }
@@ -3650,7 +3650,7 @@ impl ProjectPanel {
                                     }
                                 } else {
                                     details.filename.clear();
-                                    details.filename.push_str(processing_filename.as_unix_str());
+                                    details.filename.push_str(processing_filename.as_str());
                                 }
                             } else {
                                 if edit_state.is_new_entry() {
@@ -4019,7 +4019,7 @@ impl ProjectPanel {
             .path_for_entry(drag_state.active_selection.entry_id, cx)
         {
             if let Some(parent_path) = entry_path.path.parent() {
-                if !parent_path.is_empty() {
+                if !parent_path.as_os_str().is_empty() {
                     return true;
                 }
             }
@@ -4784,7 +4784,7 @@ impl ProjectPanel {
                 .path
                 .file_name()
                 .map(|name| name.to_string())
-                .unwrap_or_else(|| root_name.as_unix_str().to_string())
+                .unwrap_or_else(|| root_name.as_str().to_string())
         };
 
         let selection = SelectedEntry {
diff --git a/crates/remote/src/transport/ssh.rs b/crates/remote/src/transport/ssh.rs
index 616cf38106..f05bd9d2f5 100644
--- a/crates/remote/src/transport/ssh.rs
+++ b/crates/remote/src/transport/ssh.rs
@@ -419,7 +419,7 @@ impl SshRemoteConnection {
             version_str
         );
         let dst_path =
-            paths::remote_server_dir_relative().join(RelPath::unix(&binary_name).unwrap());
+            paths::remote_server_dir_relative().join(RelPath::new(&binary_name).unwrap());
 
         #[cfg(debug_assertions)]
         if let Some(remote_server_path) =
@@ -427,7 +427,7 @@ impl SshRemoteConnection {
                 .await?
         {
             let tmp_path = paths::remote_server_dir_relative().join(
-                RelPath::unix(&format!(
+                RelPath::new(&format!(
                     "download-{}-{}",
                     std::process::id(),
                     remote_server_path.file_name().unwrap().to_string_lossy()
@@ -462,7 +462,7 @@ impl SshRemoteConnection {
         })??;
 
         let tmp_path_gz = remote_server_dir_relative().join(
-            RelPath::unix(&format!(
+            RelPath::new(&format!(
                 "{}-download-{}.gz",
                 binary_name,
                 std::process::id()
@@ -558,6 +558,7 @@ impl SshRemoteConnection {
                     .run_command(
                         "wget",
                         &[
+                            "--method=GET",
                             "--header=Content-Type: application/json",
                             "--body-data",
                             body,
diff --git a/crates/remote/src/transport/wsl.rs b/crates/remote/src/transport/wsl.rs
index 2096c25fa4..4d9a63e9ae 100644
--- a/crates/remote/src/transport/wsl.rs
+++ b/crates/remote/src/transport/wsl.rs
@@ -142,7 +142,7 @@ impl WslRemoteConnection {
         );
 
         let dst_path =
-            paths::remote_wsl_server_dir_relative().join(RelPath::unix(&binary_name).unwrap());
+            paths::remote_wsl_server_dir_relative().join(RelPath::new(&binary_name).unwrap());
 
         if let Some(parent) = dst_path.parent() {
             self.run_wsl_command("mkdir", &["-p", &parent.display(PathStyle::Posix)])
@@ -155,7 +155,7 @@ impl WslRemoteConnection {
             super::build_remote_server_from_source(&self.platform, delegate.as_ref(), cx).await?
         {
             let tmp_path = paths::remote_wsl_server_dir_relative().join(
-                &RelPath::unix(&format!(
+                &RelPath::new(&format!(
                     "download-{}-{}",
                     std::process::id(),
                     remote_server_path.file_name().unwrap().to_string_lossy()
@@ -193,7 +193,7 @@ impl WslRemoteConnection {
             dst_path.display(PathStyle::Posix),
             std::process::id()
         );
-        let tmp_path = RelPath::unix(&tmp_path).unwrap();
+        let tmp_path = RelPath::new(&tmp_path).unwrap();
 
         self.upload_file(&src_path, &tmp_path, delegate, cx).await?;
         self.extract_and_install(&tmp_path, &dst_path, delegate, cx)
diff --git a/crates/remote_server/src/remote_editing_tests.rs b/crates/remote_server/src/remote_editing_tests.rs
index 7527e3f139..1fbd967ff8 100644
--- a/crates/remote_server/src/remote_editing_tests.rs
+++ b/crates/remote_server/src/remote_editing_tests.rs
@@ -849,8 +849,6 @@ async fn test_remote_resolve_path_in_buffer(
 
     let worktree2_id = cx.update(|cx| worktree2.read(cx).id());
 
-    cx.run_until_parked();
-
     let buffer2 = project
         .update(cx, |project, cx| {
             project.open_buffer((worktree2_id, rel_path("src/lib.rs")), cx)
@@ -1039,7 +1037,7 @@ async fn test_adding_then_removing_then_adding_worktrees(
         assert!(worktree.is_visible());
         let entries = worktree.entries(true, 0).collect::<Vec<_>>();
         assert_eq!(entries.len(), 2);
-        assert_eq!(entries[1].path.as_unix_str(), "README.md")
+        assert_eq!(entries[1].path.as_str(), "README.md")
     })
 }
 
diff --git a/crates/remote_server/src/unix.rs b/crates/remote_server/src/unix.rs
index b91b91edcb..d6b730e6d6 100644
--- a/crates/remote_server/src/unix.rs
+++ b/crates/remote_server/src/unix.rs
@@ -953,7 +953,7 @@ fn cleanup_old_binaries() -> Result<()> {
     let release_channel = release_channel::RELEASE_CHANNEL.dev_name();
     let prefix = format!("zed-remote-server-{}-", release_channel);
 
-    for entry in std::fs::read_dir(server_dir.as_std_path())? {
+    for entry in std::fs::read_dir(server_dir)? {
         let path = entry?.path();
 
         if let Some(file_name) = path.file_name()
diff --git a/crates/repl/Cargo.toml b/crates/repl/Cargo.toml
index 6386dc330a..edfebcd112 100644
--- a/crates/repl/Cargo.toml
+++ b/crates/repl/Cargo.toml
@@ -17,6 +17,11 @@ alacritty_terminal.workspace = true
 anyhow.workspace = true
 async-dispatcher.workspace = true
 async-tungstenite = { workspace = true, features = ["tokio", "tokio-rustls-manual-roots"] }
+# Force-enable `tokio` feature on async-tungstenite v0.31 used by
+# transitive dependency `jupyter-websocket-client` to avoid E0432
+# (unresolved import `async_tungstenite::tokio`). The alias ensures
+# feature unification applies to that version across the graph.
+async_tungstenite_031 = { package = "async-tungstenite", version = "0.31.0", default-features = false, features = ["tokio-runtime"] }
 base64.workspace = true
 client.workspace = true
 collections.workspace = true
diff --git a/crates/scheduler/src/test_scheduler.rs b/crates/scheduler/src/test_scheduler.rs
index d56db6b839..d9523640f4 100644
--- a/crates/scheduler/src/test_scheduler.rs
+++ b/crates/scheduler/src/test_scheduler.rs
@@ -41,26 +41,14 @@ impl TestScheduler {
     }
 
     /// Run a test multiple times with sequential seeds (0, 1, 2, ...)
-    pub fn many<R>(
-        default_iterations: usize,
-        mut f: impl AsyncFnMut(Arc<TestScheduler>) -> R,
-    ) -> Vec<R> {
-        let num_iterations = std::env::var("ITERATIONS")
-            .map(|iterations| iterations.parse().unwrap())
-            .unwrap_or(default_iterations);
-
-        let seed = std::env::var("SEED")
-            .map(|seed| seed.parse().unwrap())
-            .unwrap_or(0);
-
-        (seed..num_iterations as u64)
+    pub fn many<R>(iterations: usize, mut f: impl AsyncFnMut(Arc<TestScheduler>) -> R) -> Vec<R> {
+        (0..iterations as u64)
             .map(|seed| {
                 let mut unwind_safe_f = AssertUnwindSafe(&mut f);
-                eprintln!("Running seed: {seed}");
                 match panic::catch_unwind(move || Self::with_seed(seed, &mut *unwind_safe_f)) {
                     Ok(result) => result,
                     Err(error) => {
-                        eprintln!("\x1b[31mFailing Seed: {seed}\x1b[0m");
+                        eprintln!("Failing Seed: {seed}");
                         panic::resume_unwind(error);
                     }
                 }
@@ -68,7 +56,8 @@ impl TestScheduler {
             .collect()
     }
 
-    fn with_seed<R>(seed: u64, f: impl AsyncFnOnce(Arc<TestScheduler>) -> R) -> R {
+    /// Run a test once with a specific seed
+    pub fn with_seed<R>(seed: u64, f: impl AsyncFnOnce(Arc<TestScheduler>) -> R) -> R {
         let scheduler = Arc::new(TestScheduler::new(TestSchedulerConfig::with_seed(seed)));
         let future = f(scheduler.clone());
         let result = scheduler.foreground().block_on(future);
diff --git a/crates/scheduler/src/tests.rs b/crates/scheduler/src/tests.rs
index 14f436c502..54ce84e884 100644
--- a/crates/scheduler/src/tests.rs
+++ b/crates/scheduler/src/tests.rs
@@ -288,6 +288,16 @@ fn test_helper_methods() {
         background.spawn(async { 10 }).await
     });
     assert_eq!(results, vec![10, 10, 10]);
+
+    // Test the with_seed method
+    let result = TestScheduler::with_seed(123, async |scheduler: Arc<TestScheduler>| {
+        let background = scheduler.background();
+
+        // Spawn a background task and wait for its result
+        let task = background.spawn(async { 99 });
+        task.await
+    });
+    assert_eq!(result, 99);
 }
 
 #[test]
diff --git a/crates/settings/Cargo.toml b/crates/settings/Cargo.toml
index eb884c1e3f..cfa3238ad6 100644
--- a/crates/settings/Cargo.toml
+++ b/crates/settings/Cargo.toml
@@ -28,15 +28,14 @@ paths.workspace = true
 release_channel.workspace = true
 rust-embed.workspace = true
 schemars.workspace = true
-serde_json_lenient.workspace = true
+serde.workspace = true
 serde_json.workspace = true
-serde_path_to_error.workspace = true
+settings_macros = { path = "../settings_macros" }
+serde_json_lenient.workspace = true
 serde_repr.workspace = true
+serde_path_to_error.workspace = true
 serde_with.workspace = true
-serde.workspace = true
-settings_macros = { path = "../settings_macros" }
 smallvec.workspace = true
-strum.workspace = true
 tree-sitter-json.workspace = true
 tree-sitter.workspace = true
 util.workspace = true
diff --git a/crates/settings/src/settings_content.rs b/crates/settings/src/settings_content.rs
index eb84bc68cc..ca7a550024 100644
--- a/crates/settings/src/settings_content.rs
+++ b/crates/settings/src/settings_content.rs
@@ -272,43 +272,21 @@ pub struct TitleBarSettingsContent {
 #[derive(Clone, PartialEq, Default, Serialize, Deserialize, JsonSchema, MergeFrom, Debug)]
 pub struct AudioSettingsContent {
     /// Opt into the new audio system.
-    ///
-    /// You need to rejoin a call for this setting to apply
-    #[serde(rename = "experimental.rodio_audio")]
-    pub rodio_audio: Option<bool>, // default is false
-    /// Requires 'rodio_audio: true'
-    ///
-    /// Automatically increase or decrease you microphone's volume. This affects how
-    /// loud you sound to others.
-    ///
-    /// Recommended: off (default)
-    /// Microphones are too quite in zed, until everyone is on experimental
-    /// audio and has auto speaker volume on this will make you very loud
-    /// compared to other speakers.
-    #[serde(rename = "experimental.auto_microphone_volume")]
-    pub auto_microphone_volume: Option<bool>,
-    /// Requires 'rodio_audio: true'
-    ///
-    /// Automatically increate or decrease the volume of other call members.
-    /// This only affects how things sound for you.
-    #[serde(rename = "experimental.auto_speaker_volume")]
-    pub auto_speaker_volume: Option<bool>,
+    #[serde(rename = "experimental.rodio_audio", default)]
+    pub rodio_audio: Option<bool>,
     /// Requires 'rodio_audio: true'
     ///
-    /// Remove background noises. Works great for typing, cars, dogs, AC. Does
-    /// not work well on music.
-    #[serde(rename = "experimental.denoise")]
-    pub denoise: Option<bool>,
+    /// Use the new audio systems automatic gain control for your microphone.
+    /// This affects how loud you sound to others.
+    #[serde(rename = "experimental.control_input_volume", default)]
+    pub control_input_volume: Option<bool>,
     /// Requires 'rodio_audio: true'
     ///
-    /// Use audio parameters compatible with the previous versions of
-    /// experimental audio and non-experimental audio. When this is false you
-    /// will sound strange to anyone not on the latest experimental audio. In
-    /// the future we will migrate by setting this to false
-    ///
-    /// You need to rejoin a call for this setting to apply
-    #[serde(rename = "experimental.legacy_audio_compatible")]
-    pub legacy_audio_compatible: Option<bool>,
+    /// Use the new audio systems automatic gain control on everyone in the
+    /// call. This makes call members who are too quite louder and those who are
+    /// too loud quieter. This only affects how things sound for you.
+    #[serde(rename = "experimental.control_output_volume", default)]
+    pub control_output_volume: Option<bool>,
 }
 
 /// Control what info is collected by Zed.
@@ -593,6 +571,7 @@ pub enum ModeContent {
     #[default]
     Normal,
     Insert,
+    HelixNormal,
 }
 
 /// Controls when to use system clipboard.
@@ -869,12 +848,6 @@ impl From<bool> for SaturatingBool {
     }
 }
 
-impl From<SaturatingBool> for bool {
-    fn from(value: SaturatingBool) -> bool {
-        value.0
-    }
-}
-
 impl merge_from::MergeFrom for SaturatingBool {
     fn merge_from(&mut self, other: &Self) {
         self.0 |= other.0
diff --git a/crates/settings/src/settings_content/editor.rs b/crates/settings/src/settings_content/editor.rs
index d4879403a9..a443cf3fac 100644
--- a/crates/settings/src/settings_content/editor.rs
+++ b/crates/settings/src/settings_content/editor.rs
@@ -485,18 +485,7 @@ pub enum ScrollBeyondLastLine {
 
 /// The shape of a selection cursor.
 #[derive(
-    Copy,
-    Clone,
-    Debug,
-    Default,
-    Serialize,
-    Deserialize,
-    PartialEq,
-    Eq,
-    JsonSchema,
-    MergeFrom,
-    strum::VariantArray,
-    strum::VariantNames,
+    Copy, Clone, Debug, Default, Serialize, Deserialize, PartialEq, Eq, JsonSchema, MergeFrom,
 )]
 #[serde(rename_all = "snake_case")]
 pub enum CursorShape {
diff --git a/crates/settings/src/settings_content/terminal.rs b/crates/settings/src/settings_content/terminal.rs
index 29294c1e55..017e89102d 100644
--- a/crates/settings/src/settings_content/terminal.rs
+++ b/crates/settings/src/settings_content/terminal.rs
@@ -217,7 +217,6 @@ pub enum ShowScrollbar {
     Clone, Copy, Debug, Default, Serialize, Deserialize, PartialEq, Eq, JsonSchema, MergeFrom,
 )]
 #[serde(rename_all = "snake_case")]
-// todo() -> combine with CursorShape
 pub enum CursorShapeContent {
     /// Cursor is a block like `█`.
     #[default]
diff --git a/crates/settings/src/settings_store.rs b/crates/settings/src/settings_store.rs
index 3d3cb069d2..27ca294add 100644
--- a/crates/settings/src/settings_store.rs
+++ b/crates/settings/src/settings_store.rs
@@ -7,7 +7,7 @@ use futures::{
     channel::{mpsc, oneshot},
     future::LocalBoxFuture,
 };
-use gpui::{App, AsyncApp, BorrowAppContext, Global, Task, UpdateGlobal};
+use gpui::{App, AsyncApp, BorrowAppContext, Global, SharedString, Task, UpdateGlobal};
 
 use paths::{EDITORCONFIG_NAME, local_settings_file_relative_path, task_file_name};
 use schemars::{JsonSchema, json_schema};
@@ -34,7 +34,7 @@ use crate::{
     ActiveSettingsProfileName, FontFamilyName, IconThemeName, LanguageSettingsContent,
     LanguageToSettingsMap, SettingsJsonSchemaParams, ThemeName, VsCodeSettings, WorktreeId,
     merge_from::MergeFrom,
-    parse_json_with_comments,
+    parse_json_with_comments, replace_value_in_json_text,
     settings_content::{
         ExtensionsSettingsContent, ProjectSettingsContent, SettingsContent, UserSettingsContent,
     },
@@ -439,6 +439,34 @@ impl SettingsStore {
         return rx;
     }
 
+    pub fn update_settings_file_at_path(
+        &self,
+        fs: Arc<dyn Fs>,
+        path: &[impl AsRef<str>],
+        new_value: serde_json::Value,
+    ) -> oneshot::Receiver<Result<()>> {
+        let key_path = path
+            .into_iter()
+            .map(AsRef::as_ref)
+            .map(SharedString::new)
+            .collect::<Vec<_>>();
+        let update = move |mut old_text: String, cx: AsyncApp| {
+            cx.read_global(|store: &SettingsStore, _cx| {
+                // todo(settings_ui) use `update_value_in_json_text` for merging new and old objects with comment preservation, needs old value though...
+                let (range, replacement) = replace_value_in_json_text(
+                    &old_text,
+                    key_path.as_slice(),
+                    store.json_tab_size(),
+                    Some(&new_value),
+                    None,
+                );
+                old_text.replace_range(range, &replacement);
+                old_text
+            })
+        };
+        self.update_settings_file_inner(fs, update)
+    }
+
     pub fn update_settings_file(
         &self,
         fs: Arc<dyn Fs>,
@@ -633,7 +661,7 @@ impl SettingsStore {
                 return Err(InvalidSettingsError::Tasks {
                     message: "Attempted to submit tasks into the settings store".to_string(),
                     path: directory_path
-                        .join(RelPath::unix(task_file_name()).unwrap())
+                        .join(RelPath::new(task_file_name()).unwrap())
                         .as_std_path()
                         .to_path_buf(),
                 });
@@ -643,7 +671,7 @@ impl SettingsStore {
                     message: "Attempted to submit debugger config into the settings store"
                         .to_string(),
                     path: directory_path
-                        .join(RelPath::unix(task_file_name()).unwrap())
+                        .join(RelPath::new(task_file_name()).unwrap())
                         .as_std_path()
                         .to_path_buf(),
                 });
@@ -698,8 +726,7 @@ impl SettingsStore {
                             v.insert((editorconfig_contents.to_owned(), None));
                             return Err(InvalidSettingsError::Editorconfig {
                                 message: e.to_string(),
-                                path: directory_path
-                                    .join(RelPath::unix(EDITORCONFIG_NAME).unwrap()),
+                                path: directory_path.join(RelPath::new(EDITORCONFIG_NAME).unwrap()),
                             });
                         }
                     },
@@ -717,7 +744,7 @@ impl SettingsStore {
                                     return Err(InvalidSettingsError::Editorconfig {
                                         message: e.to_string(),
                                         path: directory_path
-                                            .join(RelPath::unix(EDITORCONFIG_NAME).unwrap()),
+                                            .join(RelPath::new(EDITORCONFIG_NAME).unwrap()),
                                     });
                                 }
                             }
diff --git a/crates/settings_ui/Cargo.toml b/crates/settings_ui/Cargo.toml
index 7b0c3200ac..53300f71e4 100644
--- a/crates/settings_ui/Cargo.toml
+++ b/crates/settings_ui/Cargo.toml
@@ -26,7 +26,6 @@ gpui.workspace = true
 menu.workspace = true
 serde.workspace = true
 settings.workspace = true
-strum.workspace = true
 theme.workspace = true
 ui.workspace = true
 util.workspace = true
diff --git a/crates/settings_ui/examples/ui.rs b/crates/settings_ui/examples/ui.rs
index 992f1e3900..ae8847c563 100644
--- a/crates/settings_ui/examples/ui.rs
+++ b/crates/settings_ui/examples/ui.rs
@@ -49,8 +49,8 @@ fn main() {
     app.run(move |cx| {
         <dyn fs::Fs>::set_global(fs.clone(), cx);
         settings::init(cx);
-        settings_ui::init(cx);
         theme::init(theme::LoadThemes::JustBase, cx);
+
         client::init_settings(cx);
         workspace::init_settings(cx);
         // production client because fake client requires gpui/test-support
diff --git a/crates/settings_ui/src/components.rs b/crates/settings_ui/src/components.rs
deleted file mode 100644
index 42544d99c2..0000000000
--- a/crates/settings_ui/src/components.rs
+++ /dev/null
@@ -1,78 +0,0 @@
-use editor::Editor;
-use gpui::div;
-use ui::{
-    ActiveTheme as _, App, FluentBuilder as _, InteractiveElement as _, IntoElement,
-    ParentElement as _, RenderOnce, Styled as _, Window,
-};
-
-#[derive(IntoElement)]
-pub struct SettingsEditor {
-    initial_text: Option<String>,
-    placeholder: Option<&'static str>,
-    confirm: Option<Box<dyn Fn(Option<String>, &mut App)>>,
-}
-
-impl SettingsEditor {
-    pub fn new() -> Self {
-        Self {
-            initial_text: None,
-            placeholder: None,
-            confirm: None,
-        }
-    }
-
-    pub fn with_initial_text(mut self, initial_text: String) -> Self {
-        self.initial_text = Some(initial_text);
-        self
-    }
-
-    pub fn with_placeholder(mut self, placeholder: &'static str) -> Self {
-        self.placeholder = Some(placeholder);
-        self
-    }
-
-    pub fn on_confirm(mut self, confirm: impl Fn(Option<String>, &mut App) + 'static) -> Self {
-        self.confirm = Some(Box::new(confirm));
-        self
-    }
-}
-
-impl RenderOnce for SettingsEditor {
-    fn render(self, window: &mut Window, cx: &mut App) -> impl ui::IntoElement {
-        let editor = window.use_state(cx, {
-            move |window, cx| {
-                let mut editor = Editor::single_line(window, cx);
-                if let Some(text) = self.initial_text {
-                    editor.set_text(text, window, cx);
-                }
-
-                if let Some(placeholder) = self.placeholder {
-                    editor.set_placeholder_text(placeholder, window, cx);
-                }
-                editor
-            }
-        });
-
-        let weak_editor = editor.downgrade();
-        let theme_colors = cx.theme().colors();
-
-        div()
-            .child(editor)
-            .bg(theme_colors.editor_background)
-            .border_1()
-            .rounded_lg()
-            .border_color(theme_colors.border)
-            .when_some(self.confirm, |this, confirm| {
-                this.on_action::<menu::Confirm>({
-                    move |_, _, cx| {
-                        let Some(editor) = weak_editor.upgrade() else {
-                            return;
-                        };
-                        let new_value = editor.read_with(cx, |editor, cx| editor.text(cx));
-                        let new_value = (!new_value.is_empty()).then_some(new_value);
-                        confirm(new_value, cx);
-                    }
-                })
-            })
-    }
-}
diff --git a/crates/settings_ui/src/settings_ui.rs b/crates/settings_ui/src/settings_ui.rs
index c5f9258998..680d46bdcf 100644
--- a/crates/settings_ui/src/settings_ui.rs
+++ b/crates/settings_ui/src/settings_ui.rs
@@ -1,228 +1,96 @@
 //! # settings_ui
-mod components;
+use std::{rc::Rc, sync::Arc};
+
 use editor::Editor;
 use feature_flags::{FeatureFlag, FeatureFlagAppExt as _};
 use gpui::{
-    App, AppContext as _, Context, Div, Entity, Global, IntoElement, ReadGlobal as _, Render,
-    TitlebarOptions, UniformListScrollHandle, Window, WindowHandle, WindowOptions, actions, div,
-    point, px, size, uniform_list,
+    App, AppContext as _, Context, Div, Entity, IntoElement, ReadGlobal as _, Render, Window,
+    WindowHandle, WindowOptions, actions, div, px, size,
 };
 use project::WorktreeId;
-use settings::{CursorShape, SaturatingBool, SettingsContent, SettingsStore};
-use std::{
-    any::{Any, TypeId, type_name},
-    cell::RefCell,
-    collections::HashMap,
-    ops::Range,
-    rc::Rc,
-    sync::Arc,
+use settings::{SettingsContent, SettingsStore};
+use ui::{
+    ActiveTheme as _, AnyElement, BorrowAppContext as _, Button, Clickable as _, Color,
+    FluentBuilder as _, Icon, IconName, InteractiveElement as _, Label, LabelCommon as _,
+    LabelSize, ParentElement, SharedString, StatefulInteractiveElement as _, Styled, Switch,
+    v_flex,
 };
-use ui::{Divider, DropdownMenu, ListItem, Switch, prelude::*};
 use util::{paths::PathStyle, rel_path::RelPath};
 
-use crate::components::SettingsEditor;
-
-#[derive(Clone)]
-struct SettingField<T: 'static> {
-    pick: fn(&SettingsContent) -> &T,
-    pick_mut: fn(&mut SettingsContent) -> &mut T,
-}
-
-trait AnySettingField {
-    fn as_any(&self) -> &dyn Any;
-    fn type_name(&self) -> &'static str;
-    fn type_id(&self) -> TypeId;
-}
-
-impl<T> AnySettingField for SettingField<T> {
-    fn as_any(&self) -> &dyn Any {
-        self
-    }
-
-    fn type_name(&self) -> &'static str {
-        type_name::<T>()
-    }
-
-    fn type_id(&self) -> TypeId {
-        TypeId::of::<T>()
-    }
-}
-
-#[derive(Default, Clone)]
-struct SettingFieldRenderer {
-    renderers: Rc<
-        RefCell<
-            HashMap<
-                TypeId,
-                Box<
-                    dyn Fn(
-                        &dyn AnySettingField,
-                        Option<&SettingsFieldMetadata>,
-                        &mut Window,
-                        &mut App,
-                    ) -> AnyElement,
-                >,
-            >,
-        >,
-    >,
-}
-
-impl Global for SettingFieldRenderer {}
-
-impl SettingFieldRenderer {
-    fn add_renderer<T: 'static>(
-        &mut self,
-        renderer: impl Fn(
-            &SettingField<T>,
-            Option<&SettingsFieldMetadata>,
-            &mut Window,
-            &mut App,
-        ) -> AnyElement
-        + 'static,
-    ) -> &mut Self {
-        let key = TypeId::of::<T>();
-        let renderer = Box::new(
-            move |any_setting_field: &dyn AnySettingField,
-                  metadata: Option<&SettingsFieldMetadata>,
-                  window: &mut Window,
-                  cx: &mut App| {
-                let field = any_setting_field
-                    .as_any()
-                    .downcast_ref::<SettingField<T>>()
-                    .unwrap();
-                renderer(field, metadata, window, cx)
-            },
-        );
-        self.renderers.borrow_mut().insert(key, renderer);
-        self
-    }
-
-    fn render(
-        &self,
-        any_setting_field: &dyn AnySettingField,
-        metadata: Option<&SettingsFieldMetadata>,
-        window: &mut Window,
-        cx: &mut App,
-    ) -> AnyElement {
-        let key = any_setting_field.type_id();
-        if let Some(renderer) = self.renderers.borrow().get(&key) {
-            renderer(any_setting_field, metadata, window, cx)
-        } else {
-            panic!(
-                "No renderer found for type: {}",
-                any_setting_field.type_name()
-            )
-        }
-    }
-}
-
-struct SettingsFieldMetadata {
-    placeholder: Option<&'static str>,
-}
-
 fn user_settings_data() -> Vec<SettingsPage> {
     vec![
         SettingsPage {
             title: "General Page",
-            expanded: true,
             items: vec![
-                SettingsPageItem::SectionHeader("General"),
+                SettingsPageItem::SectionHeader("General Section"),
                 SettingsPageItem::SettingItem(SettingItem {
                     title: "Confirm Quit",
                     description: "Whether to confirm before quitting Zed",
-                    field: Box::new(SettingField {
-                        pick: |settings_content| &settings_content.workspace.confirm_quit,
-                        pick_mut: |settings_content| &mut settings_content.workspace.confirm_quit,
+                    render: Rc::new(|_, cx| {
+                        render_toggle_button(
+                            "confirm_quit",
+                            SettingsFile::User,
+                            cx,
+                            |settings_content| &mut settings_content.workspace.confirm_quit,
+                        )
                     }),
-                    metadata: None,
                 }),
                 SettingsPageItem::SettingItem(SettingItem {
                     title: "Auto Update",
                     description: "Automatically update Zed (may be ignored on Linux if installed through a package manager)",
-                    field: Box::new(SettingField {
-                        pick: |settings_content| &settings_content.auto_update,
-                        pick_mut: |settings_content| &mut settings_content.auto_update,
+                    render: Rc::new(|_, cx| {
+                        render_toggle_button(
+                            "Auto Update",
+                            SettingsFile::User,
+                            cx,
+                            |settings_content| &mut settings_content.auto_update,
+                        )
                     }),
-                    metadata: None,
                 }),
-                SettingsPageItem::SectionHeader("Privacy"),
             ],
         },
         SettingsPage {
             title: "Project",
-            expanded: true,
             items: vec![
                 SettingsPageItem::SectionHeader("Worktree Settings Content"),
                 SettingsPageItem::SettingItem(SettingItem {
                     title: "Project Name",
                     description: "The displayed name of this project. If not set, the root directory name",
-                    field: Box::new(SettingField {
-                        pick: |settings_content| &settings_content.project.worktree.project_name,
-                        pick_mut: |settings_content| {
-                            &mut settings_content.project.worktree.project_name
-                        },
-                    }),
-                    metadata: Some(Box::new(SettingsFieldMetadata {
-                        placeholder: Some("A new name"),
-                    })),
-                }),
-            ],
-        },
-        SettingsPage {
-            title: "AI",
-            expanded: true,
-            items: vec![
-                SettingsPageItem::SectionHeader("General"),
-                SettingsPageItem::SettingItem(SettingItem {
-                    title: "Disable AI",
-                    description: "Whether to disable all AI features in Zed",
-                    field: Box::new(SettingField {
-                        pick: |settings_content| &settings_content.disable_ai,
-                        pick_mut: |settings_content| &mut settings_content.disable_ai,
-                    }),
-                    metadata: None,
-                }),
-            ],
-        },
-        SettingsPage {
-            title: "Appearance & Behavior",
-            expanded: true,
-            items: vec![
-                SettingsPageItem::SectionHeader("Cursor"),
-                SettingsPageItem::SettingItem(SettingItem {
-                    title: "Cursor Shape",
-                    description: "Cursor shape for the editor",
-                    field: Box::new(SettingField {
-                        pick: |settings_content| &settings_content.editor.cursor_shape,
-                        pick_mut: |settings_content| &mut settings_content.editor.cursor_shape,
+                    render: Rc::new(|window, cx| {
+                        render_text_field(
+                            "project_name",
+                            SettingsFile::User,
+                            window,
+                            cx,
+                            |settings_content| &mut settings_content.project.worktree.project_name,
+                        )
                     }),
-                    metadata: None,
                 }),
             ],
         },
     ]
 }
 
-// Derive Macro, on the new ProjectSettings struct
-
 fn project_settings_data() -> Vec<SettingsPage> {
     vec![SettingsPage {
         title: "Project",
-        expanded: true,
         items: vec![
             SettingsPageItem::SectionHeader("Worktree Settings Content"),
             SettingsPageItem::SettingItem(SettingItem {
                 title: "Project Name",
-                description: "The displayed name of this project. If not set, the root directory name",
-                field: Box::new(SettingField {
-                    pick: |settings_content| &settings_content.project.worktree.project_name,
-                    pick_mut: |settings_content| {
-                        &mut settings_content.project.worktree.project_name
-                    },
+                description: " The displayed name of this project. If not set, the root directory name",
+                render: Rc::new(|window, cx| {
+                    render_text_field(
+                        "project_name",
+                        SettingsFile::Local((
+                            WorktreeId::from_usize(0),
+                            Arc::from(RelPath::new("TODO: actually pass through file").unwrap()),
+                        )),
+                        window,
+                        cx,
+                        |settings_content| &mut settings_content.project.worktree.project_name,
+                    )
                 }),
-                metadata: Some(Box::new(SettingsFieldMetadata {
-                    placeholder: Some("A new name"),
-                })),
             }),
         ],
     }]
@@ -243,8 +111,6 @@ actions!(
 );
 
 pub fn init(cx: &mut App) {
-    init_renderers(cx);
-
     cx.observe_new(|workspace: &mut workspace::Workspace, _, _| {
         workspace.register_action_renderer(|div, _, _, cx| {
             let settings_ui_actions = [std::any::TypeId::of::<OpenSettingsEditor>()];
@@ -268,35 +134,14 @@ pub fn init(cx: &mut App) {
     .detach();
 }
 
-fn init_renderers(cx: &mut App) {
-    cx.default_global::<SettingFieldRenderer>()
-        .add_renderer::<Option<bool>>(|settings_field, _, _, cx| {
-            render_toggle_button(settings_field.clone(), cx).into_any_element()
-        })
-        .add_renderer::<Option<String>>(|settings_field, metadata, _, cx| {
-            render_text_field(settings_field.clone(), metadata, cx)
-        })
-        .add_renderer::<Option<SaturatingBool>>(|settings_field, _, _, cx| {
-            render_toggle_button(settings_field.clone(), cx)
-        })
-        .add_renderer::<Option<CursorShape>>(|settings_field, _, window, cx| {
-            render_dropdown(settings_field.clone(), window, cx)
-        });
-}
-
 pub fn open_settings_editor(cx: &mut App) -> anyhow::Result<WindowHandle<SettingsWindow>> {
     cx.open_window(
         WindowOptions {
-            titlebar: Some(TitlebarOptions {
-                title: Some("Settings Window".into()),
-                appears_transparent: true,
-                traffic_light_position: Some(point(px(12.0), px(12.0))),
-            }),
+            titlebar: None,
             focus: true,
             show: true,
             kind: gpui::WindowKind::Normal,
-            window_background: cx.theme().window_background_appearance(),
-            window_min_size: Some(size(px(800.), px(600.))), // 4:3 Aspect Ratio
+            window_min_size: Some(size(px(300.), px(500.))), // todo(settings_ui): Does this min_size make sense?
             ..Default::default()
         },
         |window, cx| cx.new(|cx| SettingsWindow::new(window, cx)),
@@ -308,85 +153,50 @@ pub struct SettingsWindow {
     current_file: SettingsFile,
     pages: Vec<SettingsPage>,
     search: Entity<Editor>,
-    navbar_entry: usize, // Index into pages - should probably be (usize, Option<usize>) for section + page
-    navbar_entries: Vec<NavBarEntry>,
-    list_handle: UniformListScrollHandle,
-}
-
-#[derive(PartialEq, Debug)]
-struct NavBarEntry {
-    title: &'static str,
-    is_root: bool,
+    current_page: usize, // Index into pages - should probably be (usize, Option<usize>) for section + page
 }
 
+#[derive(Clone)]
 struct SettingsPage {
     title: &'static str,
-    expanded: bool,
     items: Vec<SettingsPageItem>,
 }
 
-impl SettingsPage {
-    fn section_headers(&self) -> impl Iterator<Item = &'static str> {
-        self.items.iter().filter_map(|item| match item {
-            SettingsPageItem::SectionHeader(header) => Some(*header),
-            _ => None,
-        })
-    }
-}
-
+#[derive(Clone)]
 enum SettingsPageItem {
     SectionHeader(&'static str),
     SettingItem(SettingItem),
 }
 
 impl SettingsPageItem {
-    fn render(&self, _file: SettingsFile, window: &mut Window, cx: &mut App) -> AnyElement {
+    fn render(&self, window: &mut Window, cx: &mut App) -> AnyElement {
         match self {
-            SettingsPageItem::SectionHeader(header) => v_flex()
-                .w_full()
-                .gap_0p5()
-                .child(Label::new(SharedString::new_static(header)).size(LabelSize::Large))
-                .child(Divider::horizontal().color(ui::DividerColor::BorderVariant))
+            SettingsPageItem::SectionHeader(header) => Label::new(SharedString::new_static(header))
+                .size(LabelSize::Large)
+                .into_any_element(),
+            SettingsPageItem::SettingItem(setting_item) => div()
+                .child(setting_item.title)
+                .child(setting_item.description)
+                .child((setting_item.render)(window, cx))
                 .into_any_element(),
-            SettingsPageItem::SettingItem(setting_item) => {
-                let renderer = cx.default_global::<SettingFieldRenderer>().clone();
-                h_flex()
-                    .id(setting_item.title)
-                    .w_full()
-                    .gap_2()
-                    .flex_wrap()
-                    .justify_between()
-                    .child(
-                        v_flex()
-                            .max_w_1_2()
-                            .flex_shrink()
-                            .child(
-                                Label::new(SharedString::new_static(setting_item.title))
-                                    .size(LabelSize::Default),
-                            )
-                            .child(
-                                Label::new(SharedString::new_static(setting_item.description))
-                                    .size(LabelSize::Small)
-                                    .color(Color::Muted),
-                            ),
-                    )
-                    .child(renderer.render(
-                        setting_item.field.as_ref(),
-                        setting_item.metadata.as_deref(),
-                        window,
-                        cx,
-                    ))
-                    .into_any_element()
-            }
         }
     }
 }
 
+impl SettingsPageItem {
+    fn _header(&self) -> Option<&'static str> {
+        match self {
+            SettingsPageItem::SectionHeader(header) => Some(header),
+            _ => None,
+        }
+    }
+}
+
+#[derive(Clone)]
 struct SettingItem {
     title: &'static str,
     description: &'static str,
-    field: Box<dyn AnySettingField>,
-    metadata: Option<Box<SettingsFieldMetadata>>,
+    render: std::rc::Rc<dyn Fn(&mut Window, &mut App) -> AnyElement>,
 }
 
 #[allow(unused)]
@@ -423,16 +233,14 @@ impl SettingsWindow {
         let current_file = SettingsFile::User;
         let search = cx.new(|cx| {
             let mut editor = Editor::single_line(window, cx);
-            editor.set_placeholder_text("Search settings…", window, cx);
+            editor.set_placeholder_text("Search Settings", window, cx);
             editor
         });
         let mut this = Self {
             files: vec![],
             current_file: current_file,
             pages: vec![],
-            navbar_entries: vec![],
-            navbar_entry: 0,
-            list_handle: UniformListScrollHandle::default(),
+            current_page: 0,
             search,
         };
         cx.observe_global_in::<SettingsStore>(window, move |this, _, cx| {
@@ -442,56 +250,15 @@ impl SettingsWindow {
         .detach();
         this.fetch_files(cx);
 
-        this.build_ui(cx);
+        this.build_ui();
         this
     }
 
-    fn toggle_navbar_entry(&mut self, ix: usize) {
-        if self.navbar_entries[ix].is_root {
-            let expanded = &mut self.page_for_navbar_index(ix).expanded;
-            *expanded = !*expanded;
-            let current_page_index = self.page_index_from_navbar_index(self.navbar_entry);
-            // if currently selected page is a child of the parent page we are folding,
-            // set the current page to the parent page
-            if current_page_index == ix {
-                self.navbar_entry = ix;
-            }
-            self.build_navbar();
-        }
-    }
-
-    fn build_navbar(&mut self) {
-        self.navbar_entries = self
-            .pages
-            .iter()
-            .flat_map(|page| {
-                std::iter::once(NavBarEntry {
-                    title: page.title,
-                    is_root: true,
-                })
-                .chain(
-                    page.expanded
-                        .then(|| {
-                            page.section_headers().map(|h| NavBarEntry {
-                                title: h,
-                                is_root: false,
-                            })
-                        })
-                        .into_iter()
-                        .flatten(),
-                )
-            })
-            .collect();
-    }
-
-    fn build_ui(&mut self, cx: &mut Context<SettingsWindow>) {
+    fn build_ui(&mut self) {
         self.pages = self.current_file.pages();
-        self.build_navbar();
-
-        cx.notify();
     }
 
-    fn fetch_files(&mut self, cx: &mut Context<SettingsWindow>) {
+    fn fetch_files(&mut self, cx: &mut App) {
         let settings_store = cx.global::<SettingsStore>();
         let mut ui_files = vec![];
         let all_files = settings_store.get_all_files();
@@ -508,12 +275,12 @@ impl SettingsWindow {
         }
         ui_files.reverse();
         if !ui_files.contains(&self.current_file) {
-            self.change_file(0, cx);
+            self.change_file(0);
         }
         self.files = ui_files;
     }
 
-    fn change_file(&mut self, ix: usize, cx: &mut Context<SettingsWindow>) {
+    fn change_file(&mut self, ix: usize) {
         if ix >= self.files.len() {
             self.current_file = SettingsFile::User;
             return;
@@ -522,106 +289,51 @@ impl SettingsWindow {
             return;
         }
         self.current_file = self.files[ix].clone();
-        self.build_ui(cx);
+        self.build_ui();
     }
 
     fn render_files(&self, _window: &mut Window, cx: &mut Context<SettingsWindow>) -> Div {
-        h_flex()
+        div()
+            .flex()
+            .flex_row()
             .gap_1()
             .children(self.files.iter().enumerate().map(|(ix, file)| {
                 Button::new(ix, file.name())
-                    .on_click(cx.listener(move |this, _, _window, cx| this.change_file(ix, cx)))
+                    .on_click(cx.listener(move |this, _, _window, _cx| this.change_file(ix)))
             }))
     }
 
-    fn render_search(&self, _window: &mut Window, cx: &mut App) -> Div {
-        h_flex()
-            .pt_1()
-            .px_1p5()
-            .gap_1p5()
-            .rounded_sm()
-            .bg(cx.theme().colors().editor_background)
-            .border_1()
-            .border_color(cx.theme().colors().border)
-            .child(Icon::new(IconName::MagnifyingGlass).color(Color::Muted))
+    fn render_search(&self, _window: &mut Window, _cx: &mut App) -> Div {
+        div()
+            .child(Icon::new(IconName::MagnifyingGlass))
             .child(self.search.clone())
     }
 
     fn render_nav(&self, window: &mut Window, cx: &mut Context<SettingsWindow>) -> Div {
-        v_flex()
-            .w_64()
-            .p_2p5()
-            .pt_10()
-            .gap_3()
-            .flex_none()
-            .border_r_1()
-            .border_color(cx.theme().colors().border)
-            .bg(cx.theme().colors().panel_background)
-            .child(self.render_search(window, cx).pb_1())
-            .child(
-                uniform_list(
-                    "settings-ui-nav-bar",
-                    self.navbar_entries.len(),
-                    cx.processor(|this, range: Range<usize>, _, cx| {
-                        range
-                            .into_iter()
-                            .map(|ix| {
-                                let entry = &this.navbar_entries[ix];
-
-                                h_flex()
-                                    .id(("settings-ui-section", ix))
-                                    .w_full()
-                                    .pl_2p5()
-                                    .py_0p5()
-                                    .rounded_sm()
-                                    .border_1()
-                                    .border_color(cx.theme().colors().border_transparent)
-                                    .text_color(cx.theme().colors().text_muted)
-                                    .when(this.is_navbar_entry_selected(ix), |this| {
-                                        this.text_color(cx.theme().colors().text)
-                                            .bg(cx.theme().colors().element_selected.opacity(0.2))
-                                            .border_color(cx.theme().colors().border)
-                                    })
-                                    .child(
-                                        ListItem::new(("settings-ui-navbar-entry", ix))
-                                            .selectable(true)
-                                            .inset(true)
-                                            .indent_step_size(px(1.))
-                                            .indent_level(if entry.is_root { 1 } else { 3 })
-                                            .when(entry.is_root, |item| {
-                                                item.toggle(
-                                                    this.pages
-                                                        [this.page_index_from_navbar_index(ix)]
-                                                    .expanded,
-                                                )
-                                                .always_show_disclosure_icon(true)
-                                                .on_toggle(cx.listener(move |this, _, _, cx| {
-                                                    this.toggle_navbar_entry(ix);
-                                                    cx.notify();
-                                                }))
-                                            })
-                                            .child(
-                                                h_flex()
-                                                    .text_ui(cx)
-                                                    .truncate()
-                                                    .hover(|s| {
-                                                        s.bg(cx.theme().colors().element_hover)
-                                                    })
-                                                    .child(entry.title),
-                                            ),
-                                    )
-                                    .on_click(cx.listener(move |this, _, _, cx| {
-                                        this.navbar_entry = ix;
-                                        cx.notify();
-                                    }))
-                            })
-                            .collect()
-                    }),
-                )
-                .track_scroll(self.list_handle.clone())
-                .size_full()
-                .flex_grow(),
-            )
+        let mut nav = v_flex()
+            .p_4()
+            .gap_2()
+            .child(div().h_10()) // Files spacer;
+            .child(self.render_search(window, cx));
+
+        for (ix, page) in self.pages.iter().enumerate() {
+            nav = nav.child(
+                div()
+                    .id(page.title)
+                    .child(
+                        Label::new(page.title)
+                            .size(LabelSize::Large)
+                            .when(self.is_page_selected(ix), |this| {
+                                this.color(Color::Selected)
+                            }),
+                    )
+                    .on_click(cx.listener(move |this, _, _, cx| {
+                        this.current_page = ix;
+                        cx.notify();
+                    })),
+            );
+        }
+        nav
     }
 
     fn render_page(
@@ -630,364 +342,133 @@ impl SettingsWindow {
         window: &mut Window,
         cx: &mut Context<SettingsWindow>,
     ) -> Div {
-        v_flex().gap_4().children(
-            page.items
-                .iter()
-                .map(|item| item.render(self.current_file.clone(), window, cx)),
-        )
+        div()
+            .child(self.render_files(window, cx))
+            .child(Label::new(page.title))
+            .children(page.items.iter().map(|item| item.render(window, cx)))
     }
 
     fn current_page(&self) -> &SettingsPage {
-        &self.pages[self.page_index_from_navbar_index(self.navbar_entry)]
+        &self.pages[self.current_page]
     }
 
-    fn page_index_from_navbar_index(&self, index: usize) -> usize {
-        self.navbar_entries
-            .iter()
-            .take(index + 1)
-            .map(|entry| entry.is_root as usize)
-            .sum::<usize>()
-            - 1
-    }
-
-    fn page_for_navbar_index(&mut self, index: usize) -> &mut SettingsPage {
-        let index = self.page_index_from_navbar_index(index);
-        &mut self.pages[index]
-    }
-
-    fn is_navbar_entry_selected(&self, ix: usize) -> bool {
-        ix == self.navbar_entry
+    fn is_page_selected(&self, ix: usize) -> bool {
+        ix == self.current_page
     }
 }
 
 impl Render for SettingsWindow {
     fn render(&mut self, window: &mut Window, cx: &mut Context<Self>) -> impl IntoElement {
         div()
-            .flex()
-            .flex_row()
             .size_full()
             .bg(cx.theme().colors().background)
+            .flex()
+            .flex_row()
             .text_color(cx.theme().colors().text)
-            .child(self.render_nav(window, cx))
-            .child(
-                v_flex()
-                    .w_full()
-                    .pt_4()
-                    .px_6()
-                    .gap_4()
-                    .bg(cx.theme().colors().editor_background)
-                    .child(self.render_files(window, cx))
-                    .child(self.render_page(self.current_page(), window, cx)),
-            )
+            .child(self.render_nav(window, cx).w(px(300.0)))
+            .child(self.render_page(self.current_page(), window, cx).w_full())
     }
 }
 
+fn write_setting_value<T: Send + 'static>(
+    get_value: fn(&mut SettingsContent) -> &mut Option<T>,
+    value: Option<T>,
+    cx: &mut App,
+) {
+    cx.update_global(|store: &mut SettingsStore, cx| {
+        store.update_settings_file(<dyn fs::Fs>::global(cx), move |settings, _cx| {
+            *get_value(settings) = value;
+        });
+    });
+}
+
 fn render_text_field(
-    field: SettingField<Option<String>>,
-    metadata: Option<&SettingsFieldMetadata>,
+    id: &'static str,
+    _file: SettingsFile,
+    window: &mut Window,
     cx: &mut App,
+    get_value: fn(&mut SettingsContent) -> &mut Option<String>,
 ) -> AnyElement {
+    // TODO: Updating file does not cause the editor text to reload, suspicious it may be a missing global update/notify in SettingsStore
+
     // TODO: in settings window state
     let store = SettingsStore::global(cx);
 
     // TODO: This clone needs to go!!
-    let defaults = store.raw_default_settings().clone();
-    let user_settings = store
+    let mut defaults = store.raw_default_settings().clone();
+    let mut user_settings = store
         .raw_user_settings()
         .cloned()
         .unwrap_or_default()
         .content;
 
-    let initial_text = (field.pick)(&user_settings)
+    // TODO: unwrap_or_default here because project name is null
+    let initial_text = get_value(user_settings.as_mut())
         .clone()
-        .or_else(|| (field.pick)(&defaults).clone());
-
-    SettingsEditor::new()
-        .when_some(initial_text, |editor, text| editor.with_initial_text(text))
-        .when_some(
-            metadata.and_then(|metadata| metadata.placeholder),
-            |editor, placeholder| editor.with_placeholder(placeholder),
-        )
-        .on_confirm(move |new_text, cx: &mut App| {
-            cx.update_global(move |store: &mut SettingsStore, cx| {
-                store.update_settings_file(<dyn fs::Fs>::global(cx), move |settings, _cx| {
-                    *(field.pick_mut)(settings) = new_text;
+        .unwrap_or_else(|| get_value(&mut defaults).clone().unwrap_or_default());
+
+    let editor = window.use_keyed_state((id.into(), initial_text.clone()), cx, {
+        move |window, cx| {
+            let mut editor = Editor::single_line(window, cx);
+            editor.set_text(initial_text, window, cx);
+            editor
+        }
+    });
+
+    let weak_editor = editor.downgrade();
+    let theme_colors = cx.theme().colors();
+
+    div()
+        .child(editor)
+        .bg(theme_colors.editor_background)
+        .border_1()
+        .rounded_lg()
+        .border_color(theme_colors.border)
+        .on_action::<menu::Confirm>({
+            move |_, _, cx| {
+                let Some(editor) = weak_editor.upgrade() else {
+                    return;
+                };
+                let new_value = editor.read_with(cx, |editor, cx| editor.text(cx));
+                let new_value = (!new_value.is_empty()).then_some(new_value);
+                write_setting_value(get_value, new_value, cx);
+                editor.update(cx, |_, cx| {
+                    cx.notify();
                 });
-            });
+            }
         })
         .into_any_element()
 }
 
-fn render_toggle_button<B: Into<bool> + From<bool> + Copy>(
-    field: SettingField<Option<B>>,
+fn render_toggle_button(
+    id: &'static str,
+    _: SettingsFile,
     cx: &mut App,
+    get_value: fn(&mut SettingsContent) -> &mut Option<bool>,
 ) -> AnyElement {
     // TODO: in settings window state
     let store = SettingsStore::global(cx);
 
     // TODO: This clone needs to go!!
-    let defaults = store.raw_default_settings().clone();
-    let user_settings = store
+    let mut defaults = store.raw_default_settings().clone();
+    let mut user_settings = store
         .raw_user_settings()
         .cloned()
         .unwrap_or_default()
         .content;
 
-    let toggle_state = if (field.pick)(&user_settings)
-        .unwrap_or_else(|| (field.pick)(&defaults).unwrap())
-        .into()
-    {
-        ui::ToggleState::Selected
-    } else {
-        ui::ToggleState::Unselected
-    };
+    let toggle_state =
+        if get_value(&mut user_settings).unwrap_or_else(|| get_value(&mut defaults).unwrap()) {
+            ui::ToggleState::Selected
+        } else {
+            ui::ToggleState::Unselected
+        };
 
-    Switch::new("toggle_button", toggle_state)
+    Switch::new(id, toggle_state)
         .on_click({
             move |state, _window, cx| {
-                let state = *state == ui::ToggleState::Selected;
-                let field = field.clone();
-                cx.update_global(move |store: &mut SettingsStore, cx| {
-                    store.update_settings_file(<dyn fs::Fs>::global(cx), move |settings, _cx| {
-                        *(field.pick_mut)(settings) = Some(state.into());
-                    });
-                });
+                write_setting_value(get_value, Some(*state == ui::ToggleState::Selected), cx);
             }
         })
         .into_any_element()
 }
-
-fn render_dropdown<T>(
-    field: SettingField<Option<T>>,
-    window: &mut Window,
-    cx: &mut App,
-) -> AnyElement
-where
-    T: strum::VariantArray + strum::VariantNames + Copy + PartialEq + Send + 'static,
-{
-    let variants = || -> &'static [T] { <T as strum::VariantArray>::VARIANTS };
-    let labels = || -> &'static [&'static str] { <T as strum::VariantNames>::VARIANTS };
-
-    let store = SettingsStore::global(cx);
-    let defaults = store.raw_default_settings().clone();
-    let user_settings = store
-        .raw_user_settings()
-        .cloned()
-        .unwrap_or_default()
-        .content;
-
-    let current_value =
-        (field.pick)(&user_settings).unwrap_or_else(|| (field.pick)(&defaults).unwrap());
-    let current_value_label =
-        labels()[variants().iter().position(|v| *v == current_value).unwrap()];
-
-    DropdownMenu::new(
-        "dropdown",
-        current_value_label,
-        ui::ContextMenu::build(window, cx, move |mut menu, _, _| {
-            for (value, label) in variants()
-                .into_iter()
-                .copied()
-                .zip(labels().into_iter().copied())
-            {
-                menu = menu.toggleable_entry(
-                    label,
-                    value == current_value,
-                    ui::IconPosition::Start,
-                    None,
-                    move |_, cx| {
-                        if value == current_value {
-                            return;
-                        }
-                        cx.update_global(move |store: &mut SettingsStore, cx| {
-                            store.update_settings_file(
-                                <dyn fs::Fs>::global(cx),
-                                move |settings, _cx| {
-                                    *(field.pick_mut)(settings) = Some(value);
-                                },
-                            );
-                        });
-                    },
-                );
-            }
-            menu
-        }),
-    )
-    .into_any_element()
-}
-
-#[cfg(test)]
-mod test {
-    use super::*;
-
-    impl SettingsWindow {
-        fn navbar(&self) -> &[NavBarEntry] {
-            self.navbar_entries.as_slice()
-        }
-
-        fn navbar_entry(&self) -> usize {
-            self.navbar_entry
-        }
-    }
-
-    fn register_settings(cx: &mut App) {
-        settings::init(cx);
-        theme::init(theme::LoadThemes::JustBase, cx);
-        workspace::init_settings(cx);
-        project::Project::init_settings(cx);
-        language::init(cx);
-        editor::init(cx);
-        menu::init();
-    }
-
-    fn parse(input: &'static str, window: &mut Window, cx: &mut App) -> SettingsWindow {
-        let mut pages: Vec<SettingsPage> = Vec::new();
-        let mut current_page = None;
-        let mut selected_idx = None;
-
-        for (ix, mut line) in input
-            .lines()
-            .map(|line| line.trim())
-            .filter(|line| !line.is_empty())
-            .enumerate()
-        {
-            if line.ends_with("*") {
-                assert!(
-                    selected_idx.is_none(),
-                    "Can only have one selected navbar entry at a time"
-                );
-                selected_idx = Some(ix);
-                line = &line[..line.len() - 1];
-            }
-
-            if line.starts_with("v") || line.starts_with(">") {
-                if let Some(current_page) = current_page.take() {
-                    pages.push(current_page);
-                }
-
-                let expanded = line.starts_with("v");
-
-                current_page = Some(SettingsPage {
-                    title: line.split_once(" ").unwrap().1,
-                    expanded,
-                    items: Vec::default(),
-                });
-            } else if line.starts_with("-") {
-                let Some(current_page) = current_page.as_mut() else {
-                    panic!("Sub entries must be within a page");
-                };
-
-                current_page.items.push(SettingsPageItem::SectionHeader(
-                    line.split_once(" ").unwrap().1,
-                ));
-            } else {
-                panic!(
-                    "Entries must start with one of 'v', '>', or '-'\n line: {}",
-                    line
-                );
-            }
-        }
-
-        if let Some(current_page) = current_page.take() {
-            pages.push(current_page);
-        }
-
-        let mut settings_window = SettingsWindow {
-            files: Vec::default(),
-            current_file: crate::SettingsFile::User,
-            pages,
-            search: cx.new(|cx| Editor::single_line(window, cx)),
-            navbar_entry: selected_idx.unwrap(),
-            navbar_entries: Vec::default(),
-            list_handle: UniformListScrollHandle::default(),
-        };
-
-        settings_window.build_navbar();
-        settings_window
-    }
-
-    #[track_caller]
-    fn check_navbar_toggle(
-        before: &'static str,
-        toggle_idx: usize,
-        after: &'static str,
-        window: &mut Window,
-        cx: &mut App,
-    ) {
-        let mut settings_window = parse(before, window, cx);
-        settings_window.toggle_navbar_entry(toggle_idx);
-
-        let expected_settings_window = parse(after, window, cx);
-
-        assert_eq!(settings_window.navbar(), expected_settings_window.navbar());
-        assert_eq!(
-            settings_window.navbar_entry(),
-            expected_settings_window.navbar_entry()
-        );
-    }
-
-    macro_rules! check_navbar_toggle {
-        ($name:ident, before: $before:expr, toggle_idx: $toggle_idx:expr, after: $after:expr) => {
-            #[gpui::test]
-            fn $name(cx: &mut gpui::TestAppContext) {
-                let window = cx.add_empty_window();
-                window.update(|window, cx| {
-                    register_settings(cx);
-                    check_navbar_toggle($before, $toggle_idx, $after, window, cx);
-                });
-            }
-        };
-    }
-
-    check_navbar_toggle!(
-        basic_open,
-        before: r"
-        v General
-        - General
-        - Privacy*
-        v Project
-        - Project Settings
-        ",
-        toggle_idx: 0,
-        after: r"
-        > General*
-        v Project
-        - Project Settings
-        "
-    );
-
-    check_navbar_toggle!(
-        basic_close,
-        before: r"
-        > General*
-        - General
-        - Privacy
-        v Project
-        - Project Settings
-        ",
-        toggle_idx: 0,
-        after: r"
-        v General*
-        - General
-        - Privacy
-        v Project
-        - Project Settings
-        "
-    );
-
-    check_navbar_toggle!(
-        basic_second_root_entry_close,
-        before: r"
-        > General
-        - General
-        - Privacy
-        v Project
-        - Project Settings*
-        ",
-        toggle_idx: 1,
-        after: r"
-        > General
-        > Project*
-        "
-    );
-}
diff --git a/crates/terminal/Cargo.toml b/crates/terminal/Cargo.toml
index 3c08c1b861..48a0a1aadd 100644
--- a/crates/terminal/Cargo.toml
+++ b/crates/terminal/Cargo.toml
@@ -26,7 +26,6 @@ collections.workspace = true
 futures.workspace = true
 gpui.workspace = true
 libc.workspace = true
-log.workspace = true
 release_channel.workspace = true
 schemars.workspace = true
 serde.workspace = true
diff --git a/crates/terminal/src/terminal.rs b/crates/terminal/src/terminal.rs
index 827a3dc9b8..cb43d54821 100644
--- a/crates/terminal/src/terminal.rs
+++ b/crates/terminal/src/terminal.rs
@@ -26,7 +26,6 @@ use alacritty_terminal::{
     },
 };
 use anyhow::{Context as _, Result, bail};
-use log::trace;
 
 use futures::{
     FutureExt,
@@ -866,7 +865,6 @@ impl Terminal {
     ) {
         match event {
             &InternalEvent::Resize(mut new_bounds) => {
-                trace!("Resizing: new_bounds={new_bounds:?}");
                 new_bounds.bounds.size.height =
                     cmp::max(new_bounds.line_height, new_bounds.height());
                 new_bounds.bounds.size.width = cmp::max(new_bounds.cell_width, new_bounds.width());
@@ -878,7 +876,6 @@ impl Terminal {
                 term.resize(new_bounds);
             }
             InternalEvent::Clear => {
-                trace!("Clearing");
                 // Clear back buffer
                 term.clear_screen(ClearMode::Saved);
 
@@ -911,7 +908,6 @@ impl Terminal {
                 cx.emit(Event::Wakeup);
             }
             InternalEvent::Scroll(scroll) => {
-                trace!("Scrolling: scroll={scroll:?}");
                 term.scroll_display(*scroll);
                 self.refresh_hovered_word(window);
 
@@ -953,7 +949,6 @@ impl Terminal {
                 }
             }
             InternalEvent::SetSelection(selection) => {
-                trace!("Setting selection: selection={selection:?}");
                 term.selection = selection.as_ref().map(|(sel, _)| sel.clone());
 
                 #[cfg(any(target_os = "linux", target_os = "freebsd"))]
@@ -967,7 +962,6 @@ impl Terminal {
                 cx.emit(Event::SelectionsChanged)
             }
             InternalEvent::UpdateSelection(position) => {
-                trace!("Updating selection: position={position:?}");
                 if let Some(mut selection) = term.selection.take() {
                     let (point, side) = grid_point_and_side(
                         *position,
@@ -989,7 +983,6 @@ impl Terminal {
             }
 
             InternalEvent::Copy(keep_selection) => {
-                trace!("Copying selection: keep_selection={keep_selection:?}");
                 if let Some(txt) = term.selection_to_string() {
                     cx.write_to_clipboard(ClipboardItem::new_string(txt));
                     if !keep_selection.unwrap_or_else(|| {
@@ -1001,26 +994,21 @@ impl Terminal {
                 }
             }
             InternalEvent::ScrollToAlacPoint(point) => {
-                trace!("Scrolling to point: point={point:?}");
                 term.scroll_to_point(*point);
                 self.refresh_hovered_word(window);
             }
             InternalEvent::MoveViCursorToAlacPoint(point) => {
-                trace!("Move vi cursor to point: point={point:?}");
                 term.vi_goto_point(*point);
                 self.refresh_hovered_word(window);
             }
             InternalEvent::ToggleViMode => {
-                trace!("Toggling vi mode");
                 self.vi_mode_enabled = !self.vi_mode_enabled;
                 term.toggle_vi_mode();
             }
             InternalEvent::ViMotion(motion) => {
-                trace!("Performing vi motion: motion={motion:?}");
                 term.vi_motion(*motion);
             }
             InternalEvent::FindHyperlink(position, open) => {
-                trace!("Finding hyperlink at position: position={position:?}, open={open:?}");
                 let prev_hovered_word = self.last_content.last_hovered_word.take();
 
                 let point = grid_point(
diff --git a/crates/terminal_view/src/terminal_path_like_target.rs b/crates/terminal_view/src/terminal_path_like_target.rs
index 4469a975ad..31c9fe2b55 100644
--- a/crates/terminal_view/src/terminal_path_like_target.rs
+++ b/crates/terminal_view/src/terminal_path_like_target.rs
@@ -183,7 +183,7 @@ fn possible_open_target(
         let mut paths_to_check = Vec::with_capacity(potential_paths.len());
         let relative_cwd = cwd
             .and_then(|cwd| cwd.strip_prefix(&worktree_root).ok())
-            .and_then(|cwd| RelPath::new(cwd, PathStyle::local()).ok())
+            .and_then(|cwd| RelPath::from_std_path(cwd, PathStyle::local()).ok())
             .and_then(|cwd_stripped| {
                 (cwd_stripped.as_ref() != RelPath::empty()).then(|| {
                     is_cwd_in_worktree = true;
@@ -223,7 +223,7 @@ fn possible_open_target(
             };
 
             if let Ok(relative_path_to_check) =
-                RelPath::new(&path_to_check.path, PathStyle::local())
+                RelPath::from_std_path(&path_to_check.path, PathStyle::local())
                 && !worktree.read(cx).is_single_file()
                 && let Some(entry) = relative_cwd
                     .clone()
@@ -369,7 +369,7 @@ fn possible_open_target(
                         for entry in traversal {
                             if let Some(path_in_worktree) =
                                 worktree_paths_to_check.iter().find(|path_to_check| {
-                                    RelPath::new(&path_to_check.path, PathStyle::local())
+                                    RelPath::from_std_path(&path_to_check.path, PathStyle::local())
                                         .is_ok_and(|path| entry.path.ends_with(&path))
                                 })
                             {
diff --git a/crates/ui/src/components/button/button_like.rs b/crates/ui/src/components/button/button_like.rs
index fec5da57f3..d38b919bff 100644
--- a/crates/ui/src/components/button/button_like.rs
+++ b/crates/ui/src/components/button/button_like.rs
@@ -596,7 +596,7 @@ impl RenderOnce for ButtonLike {
                 ButtonSize::Default | ButtonSize::Compact => {
                     this.px(DynamicSpacing::Base04.rems(cx))
                 }
-                ButtonSize::None => this.px_px(),
+                ButtonSize::None => this,
             })
             .border_color(style.enabled(self.layer, cx).border_color)
             .bg(style.enabled(self.layer, cx).background)
diff --git a/crates/util/Cargo.toml b/crates/util/Cargo.toml
index c42688bf91..f4737b4a8c 100644
--- a/crates/util/Cargo.toml
+++ b/crates/util/Cargo.toml
@@ -57,4 +57,3 @@ git2.workspace = true
 indoc.workspace = true
 rand.workspace = true
 util_macros.workspace = true
-pretty_assertions.workspace = true
diff --git a/crates/util/src/paths.rs b/crates/util/src/paths.rs
index 18b8a9ccb0..e9dd3dd817 100644
--- a/crates/util/src/paths.rs
+++ b/crates/util/src/paths.rs
@@ -280,17 +280,6 @@ impl PathStyle {
             ))
         }
     }
-
-    pub fn split(self, path_like: &str) -> (Option<&str>, &str) {
-        let Some(pos) = path_like.rfind(self.separator()) else {
-            return (None, path_like);
-        };
-        let filename_start = pos + self.separator().len();
-        (
-            Some(&path_like[..filename_start]),
-            &path_like[filename_start..],
-        )
-    }
 }
 
 #[derive(Debug, Clone)]
diff --git a/crates/util/src/rel_path.rs b/crates/util/src/rel_path.rs
index b360297f20..201822ed7b 100644
--- a/crates/util/src/rel_path.rs
+++ b/crates/util/src/rel_path.rs
@@ -1,119 +1,73 @@
 use crate::paths::{PathStyle, is_absolute};
-use anyhow::{Context as _, Result, anyhow};
+use anyhow::{Context as _, Result, anyhow, bail};
 use serde::{Deserialize, Serialize};
 use std::{
-    borrow::{Borrow, Cow},
+    borrow::Cow,
+    ffi::OsStr,
     fmt,
     ops::Deref,
     path::{Path, PathBuf},
     sync::Arc,
 };
 
-/// A file system path that is guaranteed to be relative and normalized.
-///
-/// This type can be used to represent paths in a uniform way, regardless of
-/// whether they refer to Windows or POSIX file systems, and regardless of
-/// the host platform.
-///
-/// Internally, paths are stored in POSIX ('/'-delimited) format, but they can
-/// be displayed in either POSIX or Windows format.
-///
-/// Relative paths are also guaranteed to be valid unicode.
 #[repr(transparent)]
 #[derive(PartialEq, Eq, Hash, Serialize)]
 pub struct RelPath(str);
 
-/// An owned representation of a file system path that is guaranteed to be
-/// relative and normalized.
-///
-/// This type is to [`RelPath`] as [`std::path::PathBuf`] is to [`std::path::Path`]
 #[derive(Clone, Serialize, Deserialize)]
 pub struct RelPathBuf(String);
 
 impl RelPath {
-    /// Creates an empty [`RelPath`].
     pub fn empty() -> &'static Self {
-        Self::new_unchecked("")
+        unsafe { Self::new_unchecked("") }
     }
 
-    /// Converts a path with a given style into a [`RelPath`].
-    ///
-    /// Returns an error if the path is absolute, or is not valid unicode.
-    ///
-    /// This method will normalize the path by removing `.` components,
-    /// processing `..` components, and removing trailing separators. It does
-    /// not allocate unless it's necessary to reformat the path.
     #[track_caller]
-    pub fn new<'a>(path: &'a Path, path_style: PathStyle) -> Result<Cow<'a, Self>> {
-        let mut path = path.to_str().context("non utf-8 path")?;
-
-        let (prefixes, suffixes): (&[_], &[_]) = match path_style {
-            PathStyle::Posix => (&["./"], &['/']),
-            PathStyle::Windows => (&["./", ".\\"], &['/', '\\']),
-        };
-
-        while prefixes.iter().any(|prefix| path.starts_with(prefix)) {
-            path = &path[prefixes[0].len()..];
-        }
-        while let Some(prefix) = path.strip_suffix(suffixes)
-            && !prefix.is_empty()
+    pub fn new<S: AsRef<str> + ?Sized>(s: &S) -> anyhow::Result<&Self> {
+        let this = unsafe { Self::new_unchecked(s) };
+        if this.0.starts_with("/")
+            || this.0.ends_with("/")
+            || this
+                .components()
+                .any(|component| component == ".." || component == "." || component.is_empty())
         {
-            path = prefix;
+            bail!("invalid relative path: {:?}", &this.0);
         }
+        Ok(this)
+    }
+
+    #[track_caller]
+    pub fn from_std_path(path: &Path, path_style: PathStyle) -> Result<Arc<Self>> {
+        let path = path.to_str().context("non utf-8 path")?;
+        let mut string = Cow::Borrowed(path);
 
-        if is_absolute(&path, path_style) {
+        if is_absolute(&string, path_style) {
             return Err(anyhow!("absolute path not allowed: {path:?}"));
         }
 
-        let mut string = Cow::Borrowed(path);
-        if path_style == PathStyle::Windows && path.contains('\\') {
+        if path_style == PathStyle::Windows {
             string = Cow::Owned(string.as_ref().replace('\\', "/"))
         }
 
-        let mut result = match string {
-            Cow::Borrowed(string) => Cow::Borrowed(Self::new_unchecked(string)),
-            Cow::Owned(string) => Cow::Owned(RelPathBuf(string)),
-        };
-
-        if result
-            .components()
-            .any(|component| component == "" || component == "." || component == "..")
-        {
-            let mut normalized = RelPathBuf::new();
-            for component in result.components() {
-                match component {
-                    "" => {}
-                    "." => {}
-                    ".." => {
-                        if !normalized.pop() {
-                            return Err(anyhow!("path is not relative: {result:?}"));
-                        }
+        let mut this = RelPathBuf::new();
+        for component in unsafe { Self::new_unchecked(string.as_ref()) }.components() {
+            match component {
+                "" => {}
+                "." => {}
+                ".." => {
+                    if !this.pop() {
+                        return Err(anyhow!("path is not relative: {string:?}"));
                     }
-                    other => normalized.push(RelPath::new_unchecked(other)),
                 }
+                other => this.push(RelPath::new(other)?),
             }
-            result = Cow::Owned(normalized)
         }
 
-        Ok(result)
+        Ok(this.into())
     }
 
-    /// Converts a path that is already normalized and uses '/' separators
-    /// into a [`RelPath`] .
-    ///
-    /// Returns an error if the path is not already in the correct format.
-    #[track_caller]
-    pub fn unix<S: AsRef<Path> + ?Sized>(path: &S) -> anyhow::Result<&Self> {
-        let path = path.as_ref();
-        match Self::new(path, PathStyle::Posix)? {
-            Cow::Borrowed(path) => Ok(path),
-            Cow::Owned(_) => Err(anyhow!("invalid relative path {path:?}")),
-        }
-    }
-
-    fn new_unchecked(s: &str) -> &Self {
-        // Safety: `RelPath` is a transparent wrapper around `str`.
-        unsafe { &*(s as *const str as *const Self) }
+    pub unsafe fn new_unchecked<S: AsRef<str> + ?Sized>(s: &S) -> &Self {
+        unsafe { &*(s.as_ref() as *const str as *const Self) }
     }
 
     pub fn is_empty(&self) -> bool {
@@ -161,13 +115,13 @@ impl RelPath {
         false
     }
 
-    pub fn strip_prefix<'a>(&'a self, other: &Self) -> Result<&'a Self> {
+    pub fn strip_prefix(&self, other: &Self) -> Result<&Self> {
         if other.is_empty() {
             return Ok(self);
         }
         if let Some(suffix) = self.0.strip_prefix(&other.0) {
             if let Some(suffix) = suffix.strip_prefix('/') {
-                return Ok(Self::new_unchecked(suffix));
+                return Ok(unsafe { Self::new_unchecked(suffix) });
             } else if suffix.is_empty() {
                 return Ok(Self::empty());
             }
@@ -192,6 +146,21 @@ impl RelPath {
         }
     }
 
+    pub fn push(&self, component: &str) -> Result<Arc<Self>> {
+        if component.is_empty() {
+            bail!("pushed component is empty");
+        } else if component.contains('/') {
+            bail!("pushed component contains a separator: {component:?}");
+        }
+        let path = format!(
+            "{}{}{}",
+            &self.0,
+            if self.is_empty() { "" } else { "/" },
+            component
+        );
+        Ok(Arc::from(unsafe { Self::new_unchecked(&path) }))
+    }
+
     pub fn join(&self, other: &Self) -> Arc<Self> {
         let result = if self.0.is_empty() {
             Cow::Borrowed(&other.0)
@@ -200,31 +169,25 @@ impl RelPath {
         } else {
             Cow::Owned(format!("{}/{}", &self.0, &other.0))
         };
-        Arc::from(Self::new_unchecked(result.as_ref()))
+        Arc::from(unsafe { Self::new_unchecked(result.as_ref()) })
     }
 
-    pub fn to_rel_path_buf(&self) -> RelPathBuf {
-        RelPathBuf(self.0.to_string())
+    pub fn to_proto(&self) -> String {
+        self.0.to_owned()
     }
 
-    pub fn into_arc(&self) -> Arc<Self> {
-        Arc::from(self)
+    pub fn to_rel_path_buf(&self) -> RelPathBuf {
+        RelPathBuf(self.0.to_string())
     }
 
-    /// Convert the path into the wire representation.
-    pub fn to_proto(&self) -> String {
-        self.as_unix_str().to_owned()
+    pub fn from_proto(path: &str) -> Result<Arc<Self>> {
+        Ok(Arc::from(Self::new(path)?))
     }
 
-    /// Load the path from its wire representation.
-    pub fn from_proto(path: &str) -> Result<Arc<Self>> {
-        Ok(Arc::from(Self::unix(path)?))
+    pub fn as_str(&self) -> &str {
+        &self.0
     }
 
-    /// Convert the path into a string with the given path style.
-    ///
-    /// Whenever a path is presented to the user, it should be converted to
-    /// a string via this method.
     pub fn display(&self, style: PathStyle) -> Cow<'_, str> {
         match style {
             PathStyle::Posix => Cow::Borrowed(&self.0),
@@ -232,35 +195,16 @@ impl RelPath {
         }
     }
 
-    /// Get the internal unix-style representation of the path.
-    ///
-    /// This should not be shown to the user.
-    pub fn as_unix_str(&self) -> &str {
-        &self.0
-    }
-
-    /// Interprets the path as a [`std::path::Path`], suitable for file system calls.
-    ///
-    /// This is guaranteed to be a valid path regardless of the host platform, because
-    /// the `/` is accepted as a path separator on windows.
-    ///
-    /// This should not be shown to the user.
-    pub fn as_std_path(&self) -> &Path {
-        Path::new(&self.0)
+    pub fn as_bytes(&self) -> &[u8] {
+        &self.0.as_bytes()
     }
-}
 
-impl ToOwned for RelPath {
-    type Owned = RelPathBuf;
-
-    fn to_owned(&self) -> Self::Owned {
-        self.to_rel_path_buf()
+    pub fn as_os_str(&self) -> &OsStr {
+        self.0.as_ref()
     }
-}
 
-impl Borrow<RelPath> for RelPathBuf {
-    fn borrow(&self) -> &RelPath {
-        self.as_rel_path()
+    pub fn as_std_path(&self) -> &Path {
+        Path::new(&self.0)
     }
 }
 
@@ -313,7 +257,7 @@ impl RelPathBuf {
     }
 
     pub fn as_rel_path(&self) -> &RelPath {
-        RelPath::new_unchecked(self.0.as_str())
+        unsafe { RelPath::new_unchecked(self.0.as_str()) }
     }
 
     pub fn set_extension(&mut self, extension: &str) -> bool {
@@ -349,9 +293,9 @@ impl Deref for RelPathBuf {
     }
 }
 
-impl<'a> From<&'a RelPath> for Cow<'a, RelPath> {
-    fn from(value: &'a RelPath) -> Self {
-        Self::Borrowed(value)
+impl AsRef<Path> for RelPath {
+    fn as_ref(&self) -> &Path {
+        Path::new(&self.0)
     }
 }
 
@@ -365,7 +309,7 @@ impl From<&RelPath> for Arc<RelPath> {
 #[cfg(any(test, feature = "test-support"))]
 #[track_caller]
 pub fn rel_path(path: &str) -> &RelPath {
-    RelPath::unix(path).unwrap()
+    RelPath::new(path).unwrap()
 }
 
 impl PartialEq<str> for RelPath {
@@ -382,7 +326,7 @@ const SEPARATOR: char = '/';
 
 impl<'a> RelPathComponents<'a> {
     pub fn rest(&self) -> &'a RelPath {
-        RelPath::new_unchecked(self.0)
+        unsafe { RelPath::new_unchecked(self.0) }
     }
 }
 
@@ -416,7 +360,7 @@ impl<'a> Iterator for RelPathAncestors<'a> {
         } else {
             self.0 = None;
         }
-        Some(RelPath::new_unchecked(result))
+        Some(unsafe { RelPath::new_unchecked(result) })
     }
 }
 
@@ -440,52 +384,35 @@ impl<'a> DoubleEndedIterator for RelPathComponents<'a> {
 mod tests {
     use super::*;
     use itertools::Itertools;
-    use pretty_assertions::assert_matches;
+    use std::path::PathBuf;
 
     #[test]
-    fn test_rel_path_new() {
-        assert!(RelPath::new(Path::new("/"), PathStyle::local()).is_err());
-        assert!(RelPath::new(Path::new("//"), PathStyle::local()).is_err());
-        assert!(RelPath::new(Path::new("/foo/"), PathStyle::local()).is_err());
-
-        let path = RelPath::new("foo/".as_ref(), PathStyle::local()).unwrap();
-        assert_eq!(path, rel_path("foo").into());
-        assert_matches!(path, Cow::Borrowed(_));
-
-        let path = RelPath::new("foo\\".as_ref(), PathStyle::Windows).unwrap();
-        assert_eq!(path, rel_path("foo").into());
-        assert_matches!(path, Cow::Borrowed(_));
+    fn test_path_construction() {
+        assert!(RelPath::new("/").is_err());
+        assert!(RelPath::new("/foo").is_err());
+        assert!(RelPath::new("foo/").is_err());
+        assert!(RelPath::new("foo//bar").is_err());
+        assert!(RelPath::new("foo/../bar").is_err());
+        assert!(RelPath::new("./foo/bar").is_err());
+        assert!(RelPath::new("..").is_err());
+
+        assert!(RelPath::from_std_path(Path::new("/"), PathStyle::local()).is_err());
+        assert!(RelPath::from_std_path(Path::new("//"), PathStyle::local()).is_err());
+        assert!(RelPath::from_std_path(Path::new("/foo/"), PathStyle::local()).is_err());
+        assert_eq!(
+            RelPath::from_std_path(&PathBuf::from_iter(["foo", ""]), PathStyle::local()).unwrap(),
+            Arc::from(rel_path("foo"))
+        );
+    }
 
+    #[test]
+    fn test_rel_path_from_std_path() {
         assert_eq!(
-            RelPath::new("foo/bar/../baz/./quux/".as_ref(), PathStyle::local())
+            RelPath::from_std_path(Path::new("foo/bar/../baz/./quux/"), PathStyle::local())
                 .unwrap()
                 .as_ref(),
             rel_path("foo/baz/quux")
         );
-
-        let path = RelPath::new("./foo/bar".as_ref(), PathStyle::Posix).unwrap();
-        assert_eq!(path.as_ref(), rel_path("foo/bar"));
-        assert_matches!(path, Cow::Borrowed(_));
-
-        let path = RelPath::new(".\\foo".as_ref(), PathStyle::Windows).unwrap();
-        assert_eq!(path, rel_path("foo").into());
-        assert_matches!(path, Cow::Borrowed(_));
-
-        let path = RelPath::new("./.\\./foo/\\/".as_ref(), PathStyle::Windows).unwrap();
-        assert_eq!(path, rel_path("foo").into());
-        assert_matches!(path, Cow::Borrowed(_));
-
-        let path = RelPath::new("foo/./bar".as_ref(), PathStyle::Posix).unwrap();
-        assert_eq!(path.as_ref(), rel_path("foo/bar"));
-        assert_matches!(path, Cow::Owned(_));
-
-        let path = RelPath::new("./foo/bar".as_ref(), PathStyle::Windows).unwrap();
-        assert_eq!(path.as_ref(), rel_path("foo/bar"));
-        assert_matches!(path, Cow::Borrowed(_));
-
-        let path = RelPath::new(".\\foo\\bar".as_ref(), PathStyle::Windows).unwrap();
-        assert_eq!(path.as_ref(), rel_path("foo/bar"));
-        assert_matches!(path, Cow::Owned(_));
     }
 
     #[test]
@@ -529,7 +456,10 @@ mod tests {
 
     #[test]
     fn test_rel_path_parent() {
-        assert_eq!(rel_path("foo/bar/baz").parent(), Some(rel_path("foo/bar")));
+        assert_eq!(
+            rel_path("foo/bar/baz").parent(),
+            Some(RelPath::new("foo/bar").unwrap())
+        );
         assert_eq!(rel_path("foo").parent(), Some(RelPath::empty()));
         assert_eq!(rel_path("").parent(), None);
     }
@@ -540,9 +470,7 @@ mod tests {
         for [lhs, rhs] in test_cases.iter().array_combinations::<2>() {
             assert_eq!(
                 Path::new(lhs).cmp(Path::new(rhs)),
-                RelPath::unix(lhs)
-                    .unwrap()
-                    .cmp(&RelPath::unix(rhs).unwrap())
+                RelPath::new(lhs).unwrap().cmp(RelPath::new(rhs).unwrap())
             );
         }
     }
@@ -558,22 +486,30 @@ mod tests {
 
     #[test]
     fn test_rel_path_constructors_absolute_path() {
-        assert!(RelPath::new(Path::new("/a/b"), PathStyle::Windows).is_err());
-        assert!(RelPath::new(Path::new("\\a\\b"), PathStyle::Windows).is_err());
-        assert!(RelPath::new(Path::new("/a/b"), PathStyle::Posix).is_err());
-        assert!(RelPath::new(Path::new("C:/a/b"), PathStyle::Windows).is_err());
-        assert!(RelPath::new(Path::new("C:\\a\\b"), PathStyle::Windows).is_err());
-        assert!(RelPath::new(Path::new("C:/a/b"), PathStyle::Posix).is_ok());
+        assert!(RelPath::from_std_path(Path::new("/a/b"), PathStyle::Windows).is_err());
+        assert!(RelPath::from_std_path(Path::new("\\a\\b"), PathStyle::Windows).is_err());
+        assert!(RelPath::from_std_path(Path::new("/a/b"), PathStyle::Posix).is_err());
+        assert!(RelPath::from_std_path(Path::new("C:/a/b"), PathStyle::Windows).is_err());
+        assert!(RelPath::from_std_path(Path::new("C:\\a\\b"), PathStyle::Windows).is_err());
+        assert!(RelPath::from_std_path(Path::new("C:/a/b"), PathStyle::Posix).is_ok());
+    }
+
+    #[test]
+    fn test_push() {
+        assert_eq!(rel_path("a/b").push("c").unwrap().as_str(), "a/b/c");
+        assert_eq!(rel_path("").push("c").unwrap().as_str(), "c");
+        assert!(rel_path("a/b").push("").is_err());
+        assert!(rel_path("a/b").push("c/d").is_err());
     }
 
     #[test]
     fn test_pop() {
         let mut path = rel_path("a/b").to_rel_path_buf();
         path.pop();
-        assert_eq!(path.as_rel_path().as_unix_str(), "a");
+        assert_eq!(path.as_rel_path().as_str(), "a");
         path.pop();
-        assert_eq!(path.as_rel_path().as_unix_str(), "");
+        assert_eq!(path.as_rel_path().as_str(), "");
         path.pop();
-        assert_eq!(path.as_rel_path().as_unix_str(), "");
+        assert_eq!(path.as_rel_path().as_str(), "");
     }
 }
diff --git a/crates/vim/src/command.rs b/crates/vim/src/command.rs
index 5f7db1369b..1e38bbaf8d 100644
--- a/crates/vim/src/command.rs
+++ b/crates/vim/src/command.rs
@@ -306,10 +306,10 @@ pub fn register(editor: &mut Editor, cx: &mut Context<Vim>) {
                 return;
             };
             let path_style = worktree.read(cx).path_style();
-            let Ok(project_path) =
-                RelPath::new(Path::new(&action.filename), path_style).map(|path| ProjectPath {
+            let Ok(project_path) = RelPath::from_std_path(Path::new(&action.filename), path_style)
+                .map(|path| ProjectPath {
                     worktree_id: worktree.read(cx).id(),
-                    path: path.into_arc(),
+                    path,
                 })
             else {
                 // TODO implement save_as with absolute path
@@ -372,12 +372,14 @@ pub fn register(editor: &mut Editor, cx: &mut Context<Vim>) {
                 return;
             };
             let path_style = worktree.read(cx).path_style();
-            let Some(path) = RelPath::new(Path::new(&action.filename), path_style).log_err() else {
+            let Some(path) =
+                RelPath::from_std_path(Path::new(&action.filename), path_style).log_err()
+            else {
                 return;
             };
             let project_path = ProjectPath {
                 worktree_id: worktree.read(cx).id(),
-                path: path.into_arc(),
+                path,
             };
 
             let direction = if action.vertical {
@@ -470,12 +472,14 @@ pub fn register(editor: &mut Editor, cx: &mut Context<Vim>) {
                 return;
             };
             let path_style = worktree.read(cx).path_style();
-            let Some(path) = RelPath::new(Path::new(&action.filename), path_style).log_err() else {
+            let Some(path) =
+                RelPath::from_std_path(Path::new(&action.filename), path_style).log_err()
+            else {
                 return;
             };
             let project_path = ProjectPath {
                 worktree_id: worktree.read(cx).id(),
-                path: path.into_arc(),
+                path,
             };
 
             let _ = workspace.update(cx, |workspace, cx| {
diff --git a/crates/vim/src/state.rs b/crates/vim/src/state.rs
index 80f96523ab..a7a88512e0 100644
--- a/crates/vim/src/state.rs
+++ b/crates/vim/src/state.rs
@@ -59,8 +59,8 @@ impl Display for Mode {
             Mode::Visual => write!(f, "VISUAL"),
             Mode::VisualLine => write!(f, "VISUAL LINE"),
             Mode::VisualBlock => write!(f, "VISUAL BLOCK"),
-            Mode::HelixNormal => write!(f, "NORMAL"),
-            Mode::HelixSelect => write!(f, "SELECT"),
+            Mode::HelixNormal => write!(f, "HELIX NORMAL"),
+            Mode::HelixSelect => write!(f, "HELIX SELECT"),
         }
     }
 }
@@ -344,10 +344,11 @@ impl MarksState {
                 .worktrees(cx)
                 .filter_map(|worktree| {
                     let relative = path.strip_prefix(worktree.read(cx).abs_path()).ok()?;
-                    let path = RelPath::new(relative, worktree.read(cx).path_style()).log_err()?;
+                    let path = RelPath::from_std_path(relative, worktree.read(cx).path_style())
+                        .log_err()?;
                     Some(ProjectPath {
                         worktree_id: worktree.read(cx).id(),
-                        path: path.into_arc(),
+                        path,
                     })
                 })
                 .next();
diff --git a/crates/vim/src/vim.rs b/crates/vim/src/vim.rs
index 3e09108aee..1c2ea0dccb 100644
--- a/crates/vim/src/vim.rs
+++ b/crates/vim/src/vim.rs
@@ -424,23 +424,14 @@ impl Vim {
     pub fn new(window: &mut Window, cx: &mut Context<Editor>) -> Entity<Self> {
         let editor = cx.entity();
 
-        let initial_vim_mode = VimSettings::get_global(cx).default_mode;
-        let (mode, last_mode) = if HelixModeSetting::get_global(cx).0 {
-            let initial_helix_mode = match initial_vim_mode {
-                Mode::Normal => Mode::HelixNormal,
-                Mode::Insert => Mode::Insert,
-                // Otherwise, we panic with a note that we should never get there due to the
-                // possible values of VimSettings::get_global(cx).default_mode being either Mode::Normal or Mode::Insert.
-                _ => unreachable!("Invalid default mode"),
-            };
-            (initial_helix_mode, Mode::HelixNormal)
-        } else {
-            (initial_vim_mode, Mode::Normal)
-        };
+        let mut initial_mode = VimSettings::get_global(cx).default_mode;
+        if initial_mode == Mode::Normal && HelixModeSetting::get_global(cx).0 {
+            initial_mode = Mode::HelixNormal;
+        }
 
         cx.new(|cx| Vim {
-            mode,
-            last_mode,
+            mode: initial_mode,
+            last_mode: Mode::Normal,
             temp_mode: false,
             exit_temporary_mode: false,
             operator_stack: Vec::new(),
@@ -831,7 +822,7 @@ impl Vim {
         editor.set_collapse_matches(false);
         editor.set_input_enabled(true);
         editor.set_autoindent(true);
-        editor.selections.set_line_mode(false);
+        editor.selections.line_mode = false;
         editor.unregister_addon::<VimAddon>();
         editor.set_relative_line_number(None, cx);
         if let Some(vim) = Vim::globals(cx).focused_vim()
@@ -1796,9 +1787,7 @@ impl Vim {
             editor.set_collapse_matches(true);
             editor.set_input_enabled(vim.editor_input_enabled());
             editor.set_autoindent(vim.should_autoindent());
-            editor
-                .selections
-                .set_line_mode(matches!(vim.mode, Mode::VisualLine));
+            editor.selections.line_mode = matches!(vim.mode, Mode::VisualLine);
 
             let hide_edit_predictions = !matches!(vim.mode, Mode::Insert | Mode::Replace);
             editor.set_edit_predictions_hidden_for_vim_mode(hide_edit_predictions, window, cx);
@@ -1854,6 +1843,7 @@ impl From<settings::ModeContent> for Mode {
         match mode {
             ModeContent::Normal => Self::Normal,
             ModeContent::Insert => Self::Insert,
+            ModeContent::HelixNormal => Self::HelixNormal,
         }
     }
 }
diff --git a/crates/vim/src/visual.rs b/crates/vim/src/visual.rs
index bcb8c610f4..35bc1eba2c 100644
--- a/crates/vim/src/visual.rs
+++ b/crates/vim/src/visual.rs
@@ -609,8 +609,8 @@ impl Vim {
         self.store_visual_marks(window, cx);
         self.update_editor(cx, |vim, editor, cx| {
             let mut original_columns: HashMap<_, _> = Default::default();
-            let line_mode = line_mode || editor.selections.line_mode();
-            editor.selections.set_line_mode(false);
+            let line_mode = line_mode || editor.selections.line_mode;
+            editor.selections.line_mode = false;
 
             editor.transact(window, cx, |editor, window, cx| {
                 editor.change_selections(Default::default(), window, cx, |s| {
@@ -692,7 +692,7 @@ impl Vim {
     pub fn visual_yank(&mut self, line_mode: bool, window: &mut Window, cx: &mut Context<Self>) {
         self.store_visual_marks(window, cx);
         self.update_editor(cx, |vim, editor, cx| {
-            let line_mode = line_mode || editor.selections.line_mode();
+            let line_mode = line_mode || editor.selections.line_mode;
 
             // For visual line mode, adjust selections to avoid yanking the next line when on \n
             if line_mode && vim.mode != Mode::VisualBlock {
@@ -710,7 +710,7 @@ impl Vim {
                 });
             }
 
-            editor.selections.set_line_mode(line_mode);
+            editor.selections.line_mode = line_mode;
             let kind = if line_mode {
                 MotionKind::Linewise
             } else {
diff --git a/crates/workspace/src/persistence.rs b/crates/workspace/src/persistence.rs
index 9e729b07e7..1752d77ae6 100644
--- a/crates/workspace/src/persistence.rs
+++ b/crates/workspace/src/persistence.rs
@@ -915,7 +915,7 @@ impl WorkspaceDb {
                     relative_worktree_path == String::default()
                 );
 
-                let Some(relative_path) = RelPath::unix(&relative_worktree_path).log_err() else {
+                let Some(relative_path) = RelPath::new(&relative_worktree_path).log_err() else {
                     continue;
                 };
                 if worktree_id != u64::MAX && relative_worktree_path != String::default() {
@@ -1001,7 +1001,7 @@ impl WorkspaceDb {
                     for toolchain in toolchains {
                         let query = sql!(INSERT OR REPLACE INTO user_toolchains(remote_connection_id, workspace_id, worktree_id, relative_worktree_path, language_name, name, path, raw_json) VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8));
                         let (workspace_id, worktree_id, relative_worktree_path) = match scope {
-                            ToolchainScope::Subproject(worktree_id, ref path) => (Some(workspace.id), Some(worktree_id), Some(path.as_unix_str().to_owned())),
+                            ToolchainScope::Subproject(worktree_id, ref path) => (Some(workspace.id), Some(worktree_id), Some(path.as_str().to_owned())),
                             ToolchainScope::Project => (Some(workspace.id), None, None),
                             ToolchainScope::Global => (None, None, None),
                         };
@@ -1661,7 +1661,7 @@ impl WorkspaceDb {
                 workspace_id,
                 language_name.as_ref().to_string(),
                 worktree_id.to_usize(),
-                relative_worktree_path.as_unix_str().to_string(),
+                relative_worktree_path.as_str().to_string(),
             ))?;
 
             Ok(toolchain
@@ -1743,7 +1743,7 @@ impl WorkspaceDb {
             insert((
                 workspace_id,
                 worktree_id.to_usize(),
-                relative_worktree_path.as_unix_str(),
+                relative_worktree_path.as_str(),
                 toolchain.language_name.as_ref(),
                 toolchain.name.as_ref(),
                 toolchain.path.as_ref(),
diff --git a/crates/workspace/src/workspace.rs b/crates/workspace/src/workspace.rs
index c286a0e5de..2c2359fd90 100644
--- a/crates/workspace/src/workspace.rs
+++ b/crates/workspace/src/workspace.rs
@@ -2631,9 +2631,11 @@ impl Workspace {
                                     .strip_prefix(worktree_abs_path.as_ref())
                                     .ok()
                                     .and_then(|relative_path| {
-                                        let relative_path =
-                                            RelPath::new(relative_path, PathStyle::local())
-                                                .log_err()?;
+                                        let relative_path = RelPath::from_std_path(
+                                            relative_path,
+                                            PathStyle::local(),
+                                        )
+                                        .log_err()?;
                                         worktree.entry_for_path(&relative_path)
                                     })
                             }
@@ -10764,7 +10766,7 @@ mod tests {
             .flat_map(|item| {
                 item.project_paths(cx)
                     .into_iter()
-                    .map(|path| path.path.display(PathStyle::local()).into_owned())
+                    .map(|path| path.path.as_str().to_string())
             })
             .collect()
     }
diff --git a/crates/worktree/src/worktree.rs b/crates/worktree/src/worktree.rs
index 5accfba472..f84f1599e4 100644
--- a/crates/worktree/src/worktree.rs
+++ b/crates/worktree/src/worktree.rs
@@ -386,9 +386,7 @@ impl Worktree {
                     abs_path
                         .file_name()
                         .and_then(|f| f.to_str())
-                        .map_or(RelPath::empty().into(), |f| {
-                            RelPath::unix(f).unwrap().into()
-                        }),
+                        .map_or(RelPath::empty().into(), |f| RelPath::new(f).unwrap().into()),
                     abs_path.clone(),
                     PathStyle::local(),
                 ),
@@ -425,7 +423,7 @@ impl Worktree {
                 if !metadata.is_dir {
                     if let Some(file_name) = abs_path.file_name()
                         && let Some(file_name) = file_name.to_str()
-                        && let Ok(path) = RelPath::unix(file_name)
+                        && let Ok(path) = RelPath::new(file_name)
                     {
                         entry.is_private = !share_private_files && settings.is_path_private(path);
                     }
@@ -1558,12 +1556,11 @@ impl LocalWorktree {
         let paths_to_refresh = paths
             .iter()
             .filter_map(|(_, target)| {
-                RelPath::new(
+                RelPath::from_std_path(
                     target.strip_prefix(&worktree_path).ok()?,
                     PathStyle::local(),
                 )
                 .ok()
-                .map(|path| path.into_arc())
             })
             .collect::<Vec<_>>();
 
@@ -1770,9 +1767,7 @@ impl LocalWorktree {
                 .as_path()
                 .file_name()
                 .and_then(|f| f.to_str())
-                .map_or(RelPath::empty().into(), |f| {
-                    RelPath::unix(f).unwrap().into()
-                });
+                .map_or(RelPath::empty().into(), |f| RelPath::new(f).unwrap().into());
             self.snapshot.update_abs_path(new_path, root_name);
         }
         self.restart_background_scanners(cx);
@@ -1967,7 +1962,7 @@ impl RemoteWorktree {
                 let Some(filename) = root_path_to_copy
                     .file_name()
                     .and_then(|name| name.to_str())
-                    .and_then(|filename| RelPath::unix(filename).ok())
+                    .and_then(|filename| RelPath::new(filename).ok())
                 else {
                     continue;
                 };
@@ -1977,7 +1972,9 @@ impl RemoteWorktree {
                     let Some(relative_path) = abs_path
                         .strip_prefix(&root_path_to_copy)
                         .map_err(|e| anyhow::Error::from(e))
-                        .and_then(|relative_path| RelPath::new(relative_path, PathStyle::local()))
+                        .and_then(|relative_path| {
+                            RelPath::from_std_path(relative_path, PathStyle::local())
+                        })
                         .log_err()
                     else {
                         continue;
@@ -2028,7 +2025,7 @@ impl Snapshot {
             abs_path: SanitizedPath::from_arc(abs_path),
             path_style,
             root_char_bag: root_name
-                .as_unix_str()
+                .as_str()
                 .chars()
                 .map(|c| c.to_ascii_lowercase())
                 .collect(),
@@ -2157,7 +2154,7 @@ impl Snapshot {
         self.abs_path = abs_path;
         if root_name != self.root_name {
             self.root_char_bag = root_name
-                .as_unix_str()
+                .as_str()
                 .chars()
                 .map(|c| c.to_ascii_lowercase())
                 .collect();
@@ -2352,7 +2349,7 @@ impl Snapshot {
     }
 
     pub fn root_name_str(&self) -> &str {
-        self.root_name.as_unix_str()
+        self.root_name.as_str()
     }
 
     pub fn scan_id(&self) -> usize {
@@ -2592,7 +2589,7 @@ impl LocalSnapshot {
 
         if git_state {
             for ignore_parent_abs_path in self.ignores_by_parent_abs_path.keys() {
-                let ignore_parent_path = &RelPath::new(
+                let ignore_parent_path = &RelPath::from_std_path(
                     ignore_parent_abs_path
                         .strip_prefix(self.abs_path.as_path())
                         .unwrap(),
@@ -2601,10 +2598,8 @@ impl LocalSnapshot {
                 .unwrap();
                 assert!(self.entry_for_path(ignore_parent_path).is_some());
                 assert!(
-                    self.entry_for_path(
-                        &ignore_parent_path.join(RelPath::unix(GITIGNORE).unwrap())
-                    )
-                    .is_some()
+                    self.entry_for_path(&ignore_parent_path.join(RelPath::new(GITIGNORE).unwrap()))
+                        .is_some()
                 );
             }
         }
@@ -3043,7 +3038,7 @@ impl language::File for File {
     fn file_name<'a>(&'a self, cx: &'a App) -> &'a str {
         self.path
             .file_name()
-            .unwrap_or_else(|| self.worktree.read(cx).root_name_str())
+            .unwrap_or_else(|| self.worktree.read(cx).root_name.as_str())
     }
 
     fn worktree_id(&self, cx: &App) -> WorktreeId {
@@ -3820,9 +3815,9 @@ impl BackgroundScanner {
                     }
                 }
 
-                let relative_path = if let Ok(path) =
+                let relative_path: Arc<RelPath> = if let Ok(path) =
                     abs_path.strip_prefix(&root_canonical_path)
-                    && let Ok(path) = RelPath::new(path, PathStyle::local())
+                    && let Ok(path) = RelPath::from_std_path(path, PathStyle::local())
                 {
                     path
                 } else {
@@ -3869,7 +3864,7 @@ impl BackgroundScanner {
                     return false;
                 }
 
-                relative_paths.push(relative_path.into_arc());
+                relative_paths.push(relative_path);
                 true
             }
         });
@@ -4121,7 +4116,7 @@ impl BackgroundScanner {
             let child_name = child_abs_path.file_name().unwrap();
             let Some(child_path) = child_name
                 .to_str()
-                .and_then(|name| Some(job.path.join(RelPath::unix(name).ok()?)))
+                .and_then(|name| Some(job.path.join(RelPath::new(name).ok()?)))
             else {
                 continue;
             };
@@ -4236,7 +4231,7 @@ impl BackgroundScanner {
             {
                 let relative_path = job
                     .path
-                    .join(RelPath::unix(child_name.to_str().unwrap()).unwrap());
+                    .join(RelPath::new(child_name.to_str().unwrap()).unwrap());
                 if self.is_path_private(&relative_path) {
                     log::debug!("detected private file: {relative_path:?}");
                     child_entry.is_private = true;
@@ -4371,7 +4366,7 @@ impl BackgroundScanner {
 
                     if let (Some(scan_queue_tx), true) = (&scan_queue_tx, is_dir) {
                         if state.should_scan_directory(&fs_entry)
-                            || (fs_entry.path.is_empty()
+                            || (fs_entry.path.as_os_str().is_empty()
                                 && abs_path.file_name() == Some(OsStr::new(DOT_GIT)))
                         {
                             state.enqueue_scan_dir(
@@ -4494,7 +4489,7 @@ impl BackgroundScanner {
                 .retain(|parent_abs_path, (_, needs_update)| {
                     if let Ok(parent_path) = parent_abs_path.strip_prefix(abs_path.as_path())
                         && let Some(parent_path) =
-                            RelPath::new(&parent_path, PathStyle::local()).log_err()
+                            RelPath::from_std_path(&parent_path, PathStyle::local()).log_err()
                     {
                         if *needs_update {
                             *needs_update = false;
@@ -4503,7 +4498,7 @@ impl BackgroundScanner {
                             }
                         }
 
-                        let ignore_path = parent_path.join(RelPath::unix(GITIGNORE).unwrap());
+                        let ignore_path = parent_path.join(RelPath::new(GITIGNORE).unwrap());
                         if snapshot.snapshot.entry_for_path(&ignore_path).is_none() {
                             return false;
                         }
@@ -4551,7 +4546,7 @@ impl BackgroundScanner {
             .abs_path
             .strip_prefix(snapshot.abs_path.as_path())
             .unwrap();
-        let Some(path) = RelPath::new(&path, PathStyle::local()).log_err() else {
+        let Some(path) = RelPath::from_std_path(&path, PathStyle::local()).log_err() else {
             return;
         };
 
@@ -4655,9 +4650,7 @@ impl BackgroundScanner {
                     };
                     affected_repo_roots.push(dot_git_dir.parent().unwrap().into());
                     state.insert_git_repository(
-                        RelPath::new(relative, PathStyle::local())
-                            .unwrap()
-                            .into_arc(),
+                        RelPath::from_std_path(relative, PathStyle::local()).unwrap(),
                         self.fs.as_ref(),
                         self.watcher.as_ref(),
                     );
@@ -4682,7 +4675,7 @@ impl BackgroundScanner {
                     .entry_for_id(work_directory_id)
                     .is_some_and(|entry| {
                         snapshot
-                            .entry_for_path(&entry.path.join(RelPath::unix(DOT_GIT).unwrap()))
+                            .entry_for_path(&entry.path.join(RelPath::new(DOT_GIT).unwrap()))
                             .is_some()
                     });
 
@@ -4915,7 +4908,7 @@ fn swap_to_front(child_paths: &mut Vec<PathBuf>, file: &str) {
 
 fn char_bag_for_path(root_char_bag: CharBag, path: &RelPath) -> CharBag {
     let mut result = root_char_bag;
-    result.extend(path.as_unix_str().chars().map(|c| c.to_ascii_lowercase()));
+    result.extend(path.as_str().chars().map(|c| c.to_ascii_lowercase()));
     result
 }
 
@@ -4978,7 +4971,7 @@ impl WorktreeModelHandle for Entity<Worktree> {
             let mut events = cx.events(&tree);
             while events.next().await.is_some() {
                 if tree.read_with(cx, |tree, _| {
-                    tree.entry_for_path(RelPath::unix(file_name).unwrap())
+                    tree.entry_for_path(RelPath::new(file_name).unwrap())
                         .is_some()
                 }) {
                     break;
@@ -4990,7 +4983,7 @@ impl WorktreeModelHandle for Entity<Worktree> {
                 .unwrap();
             while events.next().await.is_some() {
                 if tree.read_with(cx, |tree, _| {
-                    tree.entry_for_path(RelPath::unix(file_name).unwrap())
+                    tree.entry_for_path(RelPath::new(file_name).unwrap())
                         .is_none()
                 }) {
                     break;
diff --git a/crates/x_ai/src/x_ai.rs b/crates/x_ai/src/x_ai.rs
index a0bfca6f77..50f8681c31 100644
--- a/crates/x_ai/src/x_ai.rs
+++ b/crates/x_ai/src/x_ai.rs
@@ -18,7 +18,7 @@ pub enum Model {
     Grok3Fast,
     #[serde(rename = "grok-3-mini-fast-latest")]
     Grok3MiniFast,
-    #[serde(rename = "grok-4", alias = "grok-4-latest")]
+    #[serde(rename = "grok-4-latest")]
     Grok4,
     #[serde(rename = "grok-code-fast-1")]
     GrokCodeFast1,
@@ -40,7 +40,6 @@ impl Model {
 
     pub fn from_id(id: &str) -> Result<Self> {
         match id {
-            "grok-4" => Ok(Self::Grok4),
             "grok-2-vision" => Ok(Self::Grok2Vision),
             "grok-3" => Ok(Self::Grok3),
             "grok-3-mini" => Ok(Self::Grok3Mini),
diff --git a/crates/zed/resources/windows/zed.iss b/crates/zed/resources/windows/zed.iss
index 53ca8ab01f..2e76f35a0b 100644
--- a/crates/zed/resources/windows/zed.iss
+++ b/crates/zed/resources/windows/zed.iss
@@ -79,7 +79,7 @@ Root: HKCU; Subkey: "Software\Classes\.ascx\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.ascx\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.ascx"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ascx"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,ASCX}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ascx"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ascx\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ascx\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\xml.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ascx\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ascx\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -87,7 +87,7 @@ Root: HKCU; Subkey: "Software\Classes\.asp\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.asp\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.asp"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.asp"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,ASP}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.asp"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.asp\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.asp\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\html.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.asp\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.asp\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -95,7 +95,7 @@ Root: HKCU; Subkey: "Software\Classes\.aspx\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.aspx\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.aspx"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.aspx"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,ASPX}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.aspx"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.aspx\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.aspx\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\html.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.aspx\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.aspx\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -103,7 +103,7 @@ Root: HKCU; Subkey: "Software\Classes\.bash\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.bash\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.bash"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Bash}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\shell.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -111,7 +111,7 @@ Root: HKCU; Subkey: "Software\Classes\.bash_login\OpenWithProgids"; ValueType: n
 Root: HKCU; Subkey: "Software\Classes\.bash_login\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.bash_login"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_login"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Bash Login}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_login"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_login\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_login\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\shell.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_login\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_login\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -119,7 +119,7 @@ Root: HKCU; Subkey: "Software\Classes\.bash_logout\OpenWithProgids"; ValueType:
 Root: HKCU; Subkey: "Software\Classes\.bash_logout\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.bash_logout"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_logout"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Bash Logout}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_logout"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_logout\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_logout\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\shell.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_logout\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_logout\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -127,7 +127,7 @@ Root: HKCU; Subkey: "Software\Classes\.bash_profile\OpenWithProgids"; ValueType:
 Root: HKCU; Subkey: "Software\Classes\.bash_profile\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.bash_profile"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_profile"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Bash Profile}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_profile"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_profile\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_profile\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\shell.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_profile\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bash_profile\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -135,7 +135,7 @@ Root: HKCU; Subkey: "Software\Classes\.bashrc\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.bashrc\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.bashrc"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bashrc"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Bash RC}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bashrc"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bashrc\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bashrc\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\shell.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bashrc\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bashrc\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -143,7 +143,7 @@ Root: HKCU; Subkey: "Software\Classes\.bib\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.bib\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.bib"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bib"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,BibTeX}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bib"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bib\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bib\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bib\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bib\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -151,7 +151,7 @@ Root: HKCU; Subkey: "Software\Classes\.bowerrc\OpenWithProgids"; ValueType: none
 Root: HKCU; Subkey: "Software\Classes\.bowerrc\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.bowerrc"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bowerrc"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Bower RC}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bowerrc"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bowerrc\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bowerrc\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\bower.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bowerrc\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.bowerrc\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -159,14 +159,14 @@ Root: HKCU; Subkey: "Software\Classes\.c++\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.c++\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.c++"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.c++"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,C++}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.c++"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.c++\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.c++\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\cpp.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.c++\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
 Root: HKCU; Subkey: "Software\Classes\.c\OpenWithProgids"; ValueType: none; ValueName: "{#RegValueName}"; Flags: deletevalue uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\.c\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.c"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.c"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,C}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.c"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.c\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.c\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\c.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.c\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.c\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -174,7 +174,7 @@ Root: HKCU; Subkey: "Software\Classes\.cc\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.cc\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.cc"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cc"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,C++}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cc"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cc\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cc\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\cpp.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cc\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cc\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -182,7 +182,7 @@ Root: HKCU; Subkey: "Software\Classes\.cfg\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.cfg\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.cfg"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cfg"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Configuration}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cfg"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cfg\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cfg\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\config.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cfg\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cfg\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -190,7 +190,7 @@ Root: HKCU; Subkey: "Software\Classes\.cjs\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.cjs\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.cjs"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cjs"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,JavaScript}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cjs"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cjs\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cjs\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\javascript.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cjs\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cjs\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -198,7 +198,7 @@ Root: HKCU; Subkey: "Software\Classes\.clj\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.clj\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.clj"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.clj"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Clojure}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.clj"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.clj\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.clj\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.clj\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.clj\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -206,7 +206,7 @@ Root: HKCU; Subkey: "Software\Classes\.cljs\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.cljs\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.cljs"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cljs"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,ClojureScript}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cljs"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cljs\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cljs\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cljs\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cljs\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -214,7 +214,7 @@ Root: HKCU; Subkey: "Software\Classes\.cljx\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.cljx\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.cljx"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cljx"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,CLJX}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cljx"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cljx\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cljx\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cljx\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cljx\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -222,7 +222,7 @@ Root: HKCU; Subkey: "Software\Classes\.clojure\OpenWithProgids"; ValueType: none
 Root: HKCU; Subkey: "Software\Classes\.clojure\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.clojure"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.clojure"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Clojure}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.clojure"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.clojure\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.clojure\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.clojure\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.clojure\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -230,7 +230,7 @@ Root: HKCU; Subkey: "Software\Classes\.cls\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.cls\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.cls"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cls"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,LaTeX}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cls"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cls\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cls\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cls\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cls\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -238,7 +238,7 @@ Root: HKCU; Subkey: "Software\Classes\.code-workspace\OpenWithProgids"; ValueTyp
 Root: HKCU; Subkey: "Software\Classes\.code-workspace\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.code-workspace"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.code-workspace"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Code Workspace}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.code"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.code-workspace\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.code-workspace\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.code-workspace\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.code-workspace\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -246,7 +246,7 @@ Root: HKCU; Subkey: "Software\Classes\.cmake\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.cmake\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.cmake"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cmake"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,CMake}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cmake"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cmake\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cmake\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cmake\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cmake\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -254,7 +254,7 @@ Root: HKCU; Subkey: "Software\Classes\.coffee\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.coffee\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.coffee"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.coffee"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,CoffeeScript}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.coffee"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.coffee\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.coffee\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.coffee\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.coffee\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -262,7 +262,7 @@ Root: HKCU; Subkey: "Software\Classes\.config\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.config\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.config"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.config"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Configuration}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.config"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.config\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.config\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\config.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.config\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.config\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -270,14 +270,14 @@ Root: HKCU; Subkey: "Software\Classes\.containerfile\OpenWithProgids"; ValueType
 Root: HKCU; Subkey: "Software\Classes\.containerfile\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.containerfile"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.containerfile"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Containerfile}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.containerfile"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.containerfile\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.containerfile\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.containerfile\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
 Root: HKCU; Subkey: "Software\Classes\.cpp\OpenWithProgids"; ValueType: none; ValueName: "{#RegValueName}"; Flags: deletevalue uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\.cpp\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.cpp"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cpp"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,C++}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cpp"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cpp\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cpp\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\cpp.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cpp\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cpp\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -285,7 +285,7 @@ Root: HKCU; Subkey: "Software\Classes\.cs\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.cs\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.cs"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cs"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,C#}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cs"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cs\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cs\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\csharp.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cs\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cs\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -293,7 +293,7 @@ Root: HKCU; Subkey: "Software\Classes\.cshtml\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.cshtml\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.cshtml"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cshtml"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,CSHTML}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cshtml"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cshtml\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cshtml\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\html.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cshtml\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cshtml\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -301,7 +301,7 @@ Root: HKCU; Subkey: "Software\Classes\.csproj\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.csproj\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.csproj"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csproj"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,C# Project}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csproj"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csproj\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csproj\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\xml.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csproj\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csproj\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -309,7 +309,7 @@ Root: HKCU; Subkey: "Software\Classes\.css\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.css\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.css"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.css"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,CSS}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.css"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.css\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.css\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\css.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.css\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.css\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -317,7 +317,7 @@ Root: HKCU; Subkey: "Software\Classes\.csv\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.csv\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.csv"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csv"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Comma Separated Values}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csv"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csv\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csv\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csv\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csv\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -325,7 +325,7 @@ Root: HKCU; Subkey: "Software\Classes\.csx\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.csx\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.csx"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csx"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,C# Script}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csx"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csx\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csx\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\csharp.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csx\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.csx\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -333,7 +333,7 @@ Root: HKCU; Subkey: "Software\Classes\.ctp\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.ctp\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.ctp"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ctp"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,CakePHP Template}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ctp"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ctp\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ctp\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ctp\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ctp\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -341,7 +341,7 @@ Root: HKCU; Subkey: "Software\Classes\.cxx\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.cxx\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.cxx"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cxx"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,C++}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cxx"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cxx\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cxx\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\cpp.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cxx\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.cxx\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -349,7 +349,7 @@ Root: HKCU; Subkey: "Software\Classes\.dart\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.dart\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.dart"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dart"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Dart}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dart"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dart\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dart\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dart\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dart\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -357,7 +357,7 @@ Root: HKCU; Subkey: "Software\Classes\.diff\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.diff\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.diff"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.diff"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Diff}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.diff"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.diff\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.diff\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.diff\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.diff\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -365,7 +365,7 @@ Root: HKCU; Subkey: "Software\Classes\.dockerfile\OpenWithProgids"; ValueType: n
 Root: HKCU; Subkey: "Software\Classes\.dockerfile\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.dockerfile"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dockerfile"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Dockerfile}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dockerfile"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dockerfile\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dockerfile\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dockerfile\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dockerfile\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -373,7 +373,7 @@ Root: HKCU; Subkey: "Software\Classes\.dot\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.dot\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.dot"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dot"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Dot}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dot"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dot\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dot\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dot\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dot\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -381,7 +381,7 @@ Root: HKCU; Subkey: "Software\Classes\.dtd\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.dtd\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.dtd"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dtd"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Document Type Definition}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dtd"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dtd\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dtd\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\xml.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dtd\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.dtd\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -389,7 +389,7 @@ Root: HKCU; Subkey: "Software\Classes\.editorconfig\OpenWithProgids"; ValueType:
 Root: HKCU; Subkey: "Software\Classes\.editorconfig\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.editorconfig"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.editorconfig"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Editor Config}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.editorconfig"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.editorconfig\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.editorconfig\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\config.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.editorconfig\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.editorconfig\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -397,7 +397,7 @@ Root: HKCU; Subkey: "Software\Classes\.edn\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.edn\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.edn"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.edn"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Extensible Data Notation}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.edn"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.edn\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.edn\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.edn\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.edn\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -405,7 +405,7 @@ Root: HKCU; Subkey: "Software\Classes\.erb\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.erb\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.erb"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.erb"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Ruby}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.erb"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.erb\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.erb\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\ruby.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.erb\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.erb\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -413,7 +413,7 @@ Root: HKCU; Subkey: "Software\Classes\.eyaml\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.eyaml\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.eyaml"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.eyaml"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Hiera Eyaml}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.eyaml"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.eyaml\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.eyaml\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\yaml.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.eyaml\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.eyaml\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -421,7 +421,7 @@ Root: HKCU; Subkey: "Software\Classes\.eyml\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.eyml\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.eyml"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.eyml"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Hiera Eyaml}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.eyml"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.eyml\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.eyml\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\yaml.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.eyml\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.eyml\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -429,7 +429,7 @@ Root: HKCU; Subkey: "Software\Classes\.fs\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.fs\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.fs"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fs"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,F#}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fs"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fs\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fs\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fs\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fs\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -437,7 +437,7 @@ Root: HKCU; Subkey: "Software\Classes\.fsi\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.fsi\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.fsi"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsi"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,F# Signature}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsi"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsi\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsi\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsi\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsi\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -445,7 +445,7 @@ Root: HKCU; Subkey: "Software\Classes\.fsscript\OpenWithProgids"; ValueType: non
 Root: HKCU; Subkey: "Software\Classes\.fsscript\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.fsscript"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsscript"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,F# Script}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsscript"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsscript\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsscript\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsscript\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsscript\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -453,7 +453,7 @@ Root: HKCU; Subkey: "Software\Classes\.fsx\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.fsx\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.fsx"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsx"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,F# Script}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsx"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsx\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsx\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsx\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.fsx\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -461,7 +461,7 @@ Root: HKCU; Subkey: "Software\Classes\.gemspec\OpenWithProgids"; ValueType: none
 Root: HKCU; Subkey: "Software\Classes\.gemspec\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.gemspec"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gemspec"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Gemspec}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gemspec"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gemspec\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gemspec\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\ruby.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gemspec\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gemspec\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -470,7 +470,7 @@ Root: HKCU; Subkey: "Software\Classes\.gitattributes\OpenWithProgids"; ValueType
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitattributes"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Git Attributes}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitattributes"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitattributes"; ValueType: string; ValueName: "AlwaysShowExt"; ValueData: ""; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitattributes\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitattributes\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\config.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitattributes\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitattributes\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -479,7 +479,7 @@ Root: HKCU; Subkey: "Software\Classes\.gitconfig\OpenWithProgids"; ValueType: st
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitconfig"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Git Config}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitconfig"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitconfig"; ValueType: string; ValueName: "AlwaysShowExt"; ValueData: ""; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitconfig\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitconfig\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\config.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitconfig\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitconfig\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -488,7 +488,7 @@ Root: HKCU; Subkey: "Software\Classes\.gitignore\OpenWithProgids"; ValueType: st
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitignore"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Git Ignore}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitignore"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitignore"; ValueType: string; ValueName: "AlwaysShowExt"; ValueData: ""; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitignore\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitignore\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\config.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitignore\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gitignore\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -496,7 +496,7 @@ Root: HKCU; Subkey: "Software\Classes\.go\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.go\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.go"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.go"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Go}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.go"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.go\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.go\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\go.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.go\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.go\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -504,7 +504,7 @@ Root: HKCU; Subkey: "Software\Classes\.gradle\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.gradle\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.gradle"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gradle"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Gradle}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gradle"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gradle\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gradle\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gradle\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.gradle\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -512,7 +512,7 @@ Root: HKCU; Subkey: "Software\Classes\.groovy\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.groovy\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.groovy"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.groovy"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Groovy}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.groovy"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.groovy\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.groovy\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.groovy\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.groovy\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -520,7 +520,7 @@ Root: HKCU; Subkey: "Software\Classes\.h\OpenWithProgids"; ValueType: none; Valu
 Root: HKCU; Subkey: "Software\Classes\.h\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.h"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.h"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,C Header}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.h"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.h\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.h\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\c.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.h\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.h\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -528,7 +528,7 @@ Root: HKCU; Subkey: "Software\Classes\.handlebars\OpenWithProgids"; ValueType: n
 Root: HKCU; Subkey: "Software\Classes\.handlebars\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.handlebars"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.handlebars"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Handlebars}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.handlebars"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.handlebars\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.handlebars\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.handlebars\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.handlebars\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -536,7 +536,7 @@ Root: HKCU; Subkey: "Software\Classes\.hbs\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.hbs\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.hbs"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hbs"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Handlebars}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hbs"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hbs\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hbs\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hbs\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hbs\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -544,14 +544,14 @@ Root: HKCU; Subkey: "Software\Classes\.h++\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.h++\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.h++"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.h++"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,C++ Header}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.h++"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.h++\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.h++\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\cpp.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.h++\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
 Root: HKCU; Subkey: "Software\Classes\.hh\OpenWithProgids"; ValueType: none; ValueName: "{#RegValueName}"; Flags: deletevalue uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\.hh\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.hh"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hh"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,C++ Header}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hh"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hh\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hh\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\cpp.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hh\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hh\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -559,7 +559,7 @@ Root: HKCU; Subkey: "Software\Classes\.hpp\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.hpp\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.hpp"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hpp"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,C++ Header}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hpp"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hpp\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hpp\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\cpp.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hpp\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hpp\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -567,7 +567,7 @@ Root: HKCU; Subkey: "Software\Classes\.htm\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.htm\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.htm"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.htm"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,HTML}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.htm"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.htm\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.htm\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\html.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.htm\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.htm\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -575,7 +575,7 @@ Root: HKCU; Subkey: "Software\Classes\.html\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.html\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.html"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.html"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,HTML}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.html"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.html\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.html\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\html.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.html\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.html\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -583,7 +583,7 @@ Root: HKCU; Subkey: "Software\Classes\.hxx\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.hxx\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.hxx"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hxx"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,C++ Header}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hxx"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hxx\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hxx\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\cpp.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hxx\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.hxx\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -591,7 +591,7 @@ Root: HKCU; Subkey: "Software\Classes\.ini\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.ini\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.ini"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ini"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,INI}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ini"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ini\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ini\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\config.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ini\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ini\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -599,7 +599,7 @@ Root: HKCU; Subkey: "Software\Classes\.ipynb\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.ipynb\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.ipynb"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ipynb"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Jupyter}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ipynb"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ipynb\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ipynb\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ipynb\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ipynb\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -607,7 +607,7 @@ Root: HKCU; Subkey: "Software\Classes\.jade\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.jade\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.jade"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jade"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Jade}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jade"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jade\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jade\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\jade.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jade\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jade\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -615,7 +615,7 @@ Root: HKCU; Subkey: "Software\Classes\.jav\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.jav\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.jav"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jav"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Java}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jav"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jav\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jav\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\java.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jav\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jav\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -623,7 +623,7 @@ Root: HKCU; Subkey: "Software\Classes\.java\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.java\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.java"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.java"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Java}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.java"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.java\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.java\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\java.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.java\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.java\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -631,7 +631,7 @@ Root: HKCU; Subkey: "Software\Classes\.js\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.js\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.js"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.js"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,JavaScript}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.js"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.js\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.js\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\javascript.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.js\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.js\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -639,7 +639,7 @@ Root: HKCU; Subkey: "Software\Classes\.jsx\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.jsx\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.jsx"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jsx"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,JavaScript}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jsx"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jsx\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jsx\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\react.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jsx\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jsx\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -647,7 +647,7 @@ Root: HKCU; Subkey: "Software\Classes\.jscsrc\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.jscsrc\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.jscsrc"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jscsrc"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,JSCS RC}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jscsrc"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jscsrc\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jscsrc\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\javascript.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jscsrc\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jscsrc\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -655,7 +655,7 @@ Root: HKCU; Subkey: "Software\Classes\.jshintrc\OpenWithProgids"; ValueType: non
 Root: HKCU; Subkey: "Software\Classes\.jshintrc\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.jshintrc"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jshintrc"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,JSHint RC}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jshintrc"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jshintrc\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jshintrc\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\javascript.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jshintrc\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jshintrc\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -663,7 +663,7 @@ Root: HKCU; Subkey: "Software\Classes\.jshtm\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.jshtm\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.jshtm"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jshtm"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,JavaScript HTML Template}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jshtm"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jshtm\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jshtm\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\html.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jshtm\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jshtm\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -671,7 +671,7 @@ Root: HKCU; Subkey: "Software\Classes\.json\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.json\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.json"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.json"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,JSON}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.json"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.json\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.json\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\json.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.json\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.json\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -679,7 +679,7 @@ Root: HKCU; Subkey: "Software\Classes\.jsp\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.jsp\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.jsp"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jsp"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Java Server Pages}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jsp"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jsp\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jsp\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\html.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jsp\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.jsp\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -687,7 +687,7 @@ Root: HKCU; Subkey: "Software\Classes\.less\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.less\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.less"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.less"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,LESS}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.less"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.less\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.less\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\less.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.less\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.less\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -695,7 +695,7 @@ Root: HKCU; Subkey: "Software\Classes\.log\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.log\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.log"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.log"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Log file}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.log"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.log\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.log\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.log\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.log\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -703,7 +703,7 @@ Root: HKCU; Subkey: "Software\Classes\.lua\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.lua\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.lua"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.lua"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Lua}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.lua"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.lua\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.lua\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.lua\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.lua\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -711,7 +711,7 @@ Root: HKCU; Subkey: "Software\Classes\.m\OpenWithProgids"; ValueType: none; Valu
 Root: HKCU; Subkey: "Software\Classes\.m\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.m"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.m"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Objective C}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.m"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.m\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.m\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.m\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.m\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -719,7 +719,7 @@ Root: HKCU; Subkey: "Software\Classes\.makefile\OpenWithProgids"; ValueType: non
 Root: HKCU; Subkey: "Software\Classes\.makefile\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.makefile"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.makefile"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Makefile}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.makefile"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.makefile\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.makefile\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.makefile\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.makefile\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -727,7 +727,7 @@ Root: HKCU; Subkey: "Software\Classes\.markdown\OpenWithProgids"; ValueType: non
 Root: HKCU; Subkey: "Software\Classes\.markdown\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.markdown"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.markdown"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Markdown}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.markdown"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.markdown\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.markdown\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\markdown.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.markdown\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.markdown\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -735,7 +735,7 @@ Root: HKCU; Subkey: "Software\Classes\.md\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.md\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.md"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.md"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Markdown}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.md"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.md\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.md\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\markdown.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.md\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.md\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -743,7 +743,7 @@ Root: HKCU; Subkey: "Software\Classes\.mdoc\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.mdoc\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.mdoc"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdoc"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,MDoc}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdoc"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdoc\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdoc\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\markdown.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdoc\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdoc\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -751,7 +751,7 @@ Root: HKCU; Subkey: "Software\Classes\.mdown\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.mdown\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.mdown"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdown"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Markdown}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdown"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdown\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdown\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\markdown.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdown\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdown\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -759,7 +759,7 @@ Root: HKCU; Subkey: "Software\Classes\.mdtext\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.mdtext\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.mdtext"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdtext"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Markdown}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdtext"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdtext\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdtext\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\markdown.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdtext\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdtext\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -767,7 +767,7 @@ Root: HKCU; Subkey: "Software\Classes\.mdtxt\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.mdtxt\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.mdtxt"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdtxt"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Markdown}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdtxt"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdtxt\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdtxt\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\markdown.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdtxt\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdtxt\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -775,7 +775,7 @@ Root: HKCU; Subkey: "Software\Classes\.mdwn\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.mdwn\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.mdwn"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdwn"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Markdown}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdwn"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdwn\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdwn\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\markdown.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdwn\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mdwn\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -783,7 +783,7 @@ Root: HKCU; Subkey: "Software\Classes\.mk\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.mk\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.mk"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mk"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Makefile}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mk"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mk\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mk\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mk\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mk\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -791,7 +791,7 @@ Root: HKCU; Subkey: "Software\Classes\.mkd\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.mkd\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.mkd"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mkd"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Markdown}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mkd"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mkd\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mkd\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\markdown.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mkd\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mkd\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -799,7 +799,7 @@ Root: HKCU; Subkey: "Software\Classes\.mkdn\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.mkdn\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.mkdn"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mkdn"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Markdown}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mkdn"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mkdn\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mkdn\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\markdown.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mkdn\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mkdn\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -807,7 +807,7 @@ Root: HKCU; Subkey: "Software\Classes\.ml\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.ml\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.ml"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ml"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,OCaml}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ml"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ml\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ml\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ml\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ml\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -815,7 +815,7 @@ Root: HKCU; Subkey: "Software\Classes\.mli\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.mli\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.mli"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mli"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,OCaml}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mli"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mli\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mli\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mli\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mli\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -823,7 +823,7 @@ Root: HKCU; Subkey: "Software\Classes\.mjs\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.mjs\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.mjs"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mjs"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,JavaScript}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mjs"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mjs\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mjs\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\javascript.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mjs\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.mjs\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -832,7 +832,7 @@ Root: HKCU; Subkey: "Software\Classes\.npmignore\OpenWithProgids"; ValueType: st
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.npmignore"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,NPM Ignore}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.npmignore"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.npmignore"; ValueType: string; ValueName: "AlwaysShowExt"; ValueData: ""; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.npmignore\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.npmignore\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.npmignore\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.npmignore\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -840,7 +840,7 @@ Root: HKCU; Subkey: "Software\Classes\.php\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.php\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.php"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.php"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,PHP}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.php"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.php\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.php\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\php.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.php\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.php\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -848,7 +848,7 @@ Root: HKCU; Subkey: "Software\Classes\.phtml\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.phtml\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.phtml"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.phtml"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,PHP HTML}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.phtml"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.phtml\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.phtml\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\html.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.phtml\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.phtml\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -856,7 +856,7 @@ Root: HKCU; Subkey: "Software\Classes\.pl\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.pl\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.pl"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pl"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Perl}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pl"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pl\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pl\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pl\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pl\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -864,7 +864,7 @@ Root: HKCU; Subkey: "Software\Classes\.pl6\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.pl6\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.pl6"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pl6"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Perl 6}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pl6"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pl6\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pl6\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pl6\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pl6\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -872,7 +872,7 @@ Root: HKCU; Subkey: "Software\Classes\.plist\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.plist\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.plist"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.plist"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Properties file}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.plist"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.plist\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.plist\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.plist\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.plist\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -880,7 +880,7 @@ Root: HKCU; Subkey: "Software\Classes\.pm\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.pm\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.pm"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pm"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Perl Module}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pm"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pm\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pm\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pm\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pm\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -888,7 +888,7 @@ Root: HKCU; Subkey: "Software\Classes\.pm6\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.pm6\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.pm6"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pm6"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Perl 6 Module}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pm6"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pm6\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pm6\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pm6\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pm6\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -896,7 +896,7 @@ Root: HKCU; Subkey: "Software\Classes\.pod\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.pod\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.pod"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pod"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Perl POD}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pod"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pod\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pod\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pod\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pod\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -904,7 +904,7 @@ Root: HKCU; Subkey: "Software\Classes\.pp\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.pp\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.pp"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pp"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Perl}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pp"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pp\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pp\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pp\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pp\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -912,7 +912,7 @@ Root: HKCU; Subkey: "Software\Classes\.profile\OpenWithProgids"; ValueType: none
 Root: HKCU; Subkey: "Software\Classes\.profile\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.profile"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.profile"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Profile}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.profile"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.profile\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.profile\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\shell.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.profile\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.profile\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -920,7 +920,7 @@ Root: HKCU; Subkey: "Software\Classes\.properties\OpenWithProgids"; ValueType: n
 Root: HKCU; Subkey: "Software\Classes\.properties\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.properties"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.properties"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Properties}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.properties"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.properties\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.properties\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.properties\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.properties\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -928,7 +928,7 @@ Root: HKCU; Subkey: "Software\Classes\.ps1\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.ps1\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.ps1"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ps1"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,PowerShell}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ps1"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ps1\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ps1\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\powershell.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ps1\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ps1\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -936,7 +936,7 @@ Root: HKCU; Subkey: "Software\Classes\.psd1\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.psd1\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.psd1"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psd1"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,PowerShell Module Manifest}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psd1"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psd1\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psd1\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\powershell.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psd1\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psd1\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -944,7 +944,7 @@ Root: HKCU; Subkey: "Software\Classes\.psgi\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.psgi\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.psgi"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psgi"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Perl CGI}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psgi"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psgi\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psgi\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psgi\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psgi\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -952,7 +952,7 @@ Root: HKCU; Subkey: "Software\Classes\.psm1\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.psm1\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.psm1"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psm1"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,PowerShell Module}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psm1"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psm1\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psm1\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\powershell.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psm1\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.psm1\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -960,7 +960,7 @@ Root: HKCU; Subkey: "Software\Classes\.py\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.py\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.py"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.py"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Python}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.py"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.py\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.py\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\python.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.py\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.py\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -968,7 +968,7 @@ Root: HKCU; Subkey: "Software\Classes\.pyi\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.pyi\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.pyi"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pyi"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Python}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pyi"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pyi\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pyi\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\python.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pyi\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.pyi\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -976,7 +976,7 @@ Root: HKCU; Subkey: "Software\Classes\.r\OpenWithProgids"; ValueType: none; Valu
 Root: HKCU; Subkey: "Software\Classes\.r\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.r"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.r"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,R}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.r"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.r\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.r\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.r\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.r\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -984,7 +984,7 @@ Root: HKCU; Subkey: "Software\Classes\.rb\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.rb\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.rb"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rb"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Ruby}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rb"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rb\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rb\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\ruby.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rb\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rb\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -992,7 +992,7 @@ Root: HKCU; Subkey: "Software\Classes\.rhistory\OpenWithProgids"; ValueType: non
 Root: HKCU; Subkey: "Software\Classes\.rhistory\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.rhistory"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rhistory"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,R History}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rhistory"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rhistory\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rhistory\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\shell.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rhistory\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rhistory\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1000,7 +1000,7 @@ Root: HKCU; Subkey: "Software\Classes\.rprofile\OpenWithProgids"; ValueType: non
 Root: HKCU; Subkey: "Software\Classes\.rprofile\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.rprofile"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rprofile"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,R Profile}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rprofile"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rprofile\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rprofile\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\shell.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rprofile\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rprofile\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1008,7 +1008,7 @@ Root: HKCU; Subkey: "Software\Classes\.rs\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.rs\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.rs"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rs"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Rust}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rs"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rs\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rs\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rs\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rs\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1016,7 +1016,7 @@ Root: HKCU; Subkey: "Software\Classes\.rst\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.rst\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.rst"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rst"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Restructured Text}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rst"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rst\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rst\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rst\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rst\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1024,7 +1024,7 @@ Root: HKCU; Subkey: "Software\Classes\.rt\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.rt\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.rt"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rt"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Rich Text}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rt"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rt\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rt\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rt\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.rt\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1032,7 +1032,7 @@ Root: HKCU; Subkey: "Software\Classes\.sass\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.sass\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.sass"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sass"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Sass}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sass"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sass\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sass\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\sass.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sass\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sass\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1040,7 +1040,7 @@ Root: HKCU; Subkey: "Software\Classes\.scss\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.scss\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.scss"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.scss"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Sass}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.scss"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.scss\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.scss\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\sass.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.scss\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.scss\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1048,7 +1048,7 @@ Root: HKCU; Subkey: "Software\Classes\.sh\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.sh\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.sh"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sh"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,SH}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sh"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sh\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sh\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\shell.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sh\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sh\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1056,7 +1056,7 @@ Root: HKCU; Subkey: "Software\Classes\.shtml\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.shtml\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.shtml"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.shtml"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,SHTML}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.shtml"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.shtml\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.shtml\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\html.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.shtml\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.shtml\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1064,7 +1064,7 @@ Root: HKCU; Subkey: "Software\Classes\.sql\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.sql\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.sql"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sql"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,SQL}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sql"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sql\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sql\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\sql.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sql\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.sql\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1072,7 +1072,7 @@ Root: HKCU; Subkey: "Software\Classes\.svg\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.svg\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.svg"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.svg"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,SVG}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.svg"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.svg\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.svg\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.svg\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.svg\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1080,7 +1080,7 @@ Root: HKCU; Subkey: "Software\Classes\.t\OpenWithProgids"; ValueType: none; Valu
 Root: HKCU; Subkey: "Software\Classes\.t\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.t"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.t"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Perl}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.t"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.t\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.t\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.t\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.t\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1088,7 +1088,7 @@ Root: HKCU; Subkey: "Software\Classes\.tex\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.tex\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.tex"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.tex"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,LaTeX}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.tex"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.tex\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.tex\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.tex\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.tex\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1096,7 +1096,7 @@ Root: HKCU; Subkey: "Software\Classes\.ts\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.ts\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.ts"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ts"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,TypeScript}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ts"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ts\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ts\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\typescript.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ts\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.ts\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1104,7 +1104,7 @@ Root: HKCU; Subkey: "Software\Classes\.toml\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.toml\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.toml"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.toml"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Toml}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.toml"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.toml\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.toml\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.toml\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.toml\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1112,7 +1112,7 @@ Root: HKCU; Subkey: "Software\Classes\.tsx\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.tsx\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.tsx"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.tsx"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,TypeScript}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.tsx"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.tsx\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.tsx\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\react.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.tsx\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.tsx\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1120,7 +1120,7 @@ Root: HKCU; Subkey: "Software\Classes\.txt\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.txt\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.txt"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.txt"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Text}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.txt"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.txt\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.txt\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.txt\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.txt\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1128,7 +1128,7 @@ Root: HKCU; Subkey: "Software\Classes\.vb\OpenWithProgids"; ValueType: none; Val
 Root: HKCU; Subkey: "Software\Classes\.vb\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.vb"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.vb"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Visual Basic}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.vb"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.vb\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.vb\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.vb\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.vb\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1136,7 +1136,7 @@ Root: HKCU; Subkey: "Software\Classes\.vue\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.vue\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.vue"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.vue"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,VUE}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.vue"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.vue\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.vue\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\vue.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.vue\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.vue\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1144,7 +1144,7 @@ Root: HKCU; Subkey: "Software\Classes\.wxi\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.wxi\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.wxi"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxi"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,WiX Include}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxi"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxi\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxi\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxi\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxi\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1152,7 +1152,7 @@ Root: HKCU; Subkey: "Software\Classes\.wxl\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.wxl\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.wxl"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxl"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,WiX Localization}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxl"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxl\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxl\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxl\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxl\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1160,7 +1160,7 @@ Root: HKCU; Subkey: "Software\Classes\.wxs\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.wxs\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.wxs"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxs"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,WiX}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxs"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxs\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxs\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxs\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.wxs\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1168,7 +1168,7 @@ Root: HKCU; Subkey: "Software\Classes\.xaml\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.xaml\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.xaml"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xaml"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,XAML}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xaml"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xaml\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xaml\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\xml.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xaml\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xaml\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1176,7 +1176,7 @@ Root: HKCU; Subkey: "Software\Classes\.xhtml\OpenWithProgids"; ValueType: none;
 Root: HKCU; Subkey: "Software\Classes\.xhtml\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.xhtml"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xhtml"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,HTML}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xhtml"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xhtml\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xhtml\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\html.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xhtml\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xhtml\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1184,7 +1184,7 @@ Root: HKCU; Subkey: "Software\Classes\.xml\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.xml\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.xml"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xml"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,XML}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xml"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xml\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xml\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\xml.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xml\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.xml\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1192,7 +1192,7 @@ Root: HKCU; Subkey: "Software\Classes\.yaml\OpenWithProgids"; ValueType: none; V
 Root: HKCU; Subkey: "Software\Classes\.yaml\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.yaml"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.yaml"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Yaml}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.yaml"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.yaml\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.yaml\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\yaml.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.yaml\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.yaml\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1200,7 +1200,7 @@ Root: HKCU; Subkey: "Software\Classes\.yml\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.yml\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.yml"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.yml"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,Yaml}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.yml"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.yml\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.yml\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\yaml.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.yml\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.yml\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
@@ -1208,17 +1208,17 @@ Root: HKCU; Subkey: "Software\Classes\.zsh\OpenWithProgids"; ValueType: none; Va
 Root: HKCU; Subkey: "Software\Classes\.zsh\OpenWithProgids"; ValueType: string; ValueName: "{#RegValueName}.zsh"; ValueData: ""; Flags: uninsdeletevalue; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.zsh"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,ZSH}"; Flags: uninsdeletekey; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.zsh"; ValueType: string; ValueName: "AppUserModelID"; ValueData: "{#AppUserId}"; Flags: uninsdeletekey; Tasks: associatewithfiles
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.zsh\DefaultIcon"; ValueType: none; Flags: deletekey; Tasks: associatewithfiles
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.zsh\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\shell.ico"; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.zsh\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""; Tasks: associatewithfiles
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}.zsh\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""; Tasks: associatewithfiles
 
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}SourceFile"; ValueType: string; ValueName: ""; ValueData: "{cm:SourceFile,{#AppName}}"; Flags: uninsdeletekey
-Root: HKCU; Subkey: "Software\Classes\{#RegValueName}SourceFile\DefaultIcon"; ValueType: none; Flags: deletekey
+Root: HKCU; Subkey: "Software\Classes\{#RegValueName}SourceFile\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}SourceFile\shell\open"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"""
 Root: HKCU; Subkey: "Software\Classes\{#RegValueName}SourceFile\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""
 
 Root: HKCU; Subkey: "Software\Classes\Applications\{#AppExeName}.exe"; ValueType: none; ValueName: ""; Flags: uninsdeletekey
-Root: HKCU; Subkey: "Software\Classes\Applications\{#AppExeName}.exe\DefaultIcon"; ValueType: none; Flags: deletekey
+Root: HKCU; Subkey: "Software\Classes\Applications\{#AppExeName}.exe\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\resources\default.ico"
 Root: HKCU; Subkey: "Software\Classes\Applications\{#AppExeName}.exe\shell\open"; ValueType: string; ValueName: "Icon"; ValueData: """{app}\{#AppExeName}.exe"""
 Root: HKCU; Subkey: "Software\Classes\Applications\{#AppExeName}.exe\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#AppExeName}.exe"" ""%1"""
 
diff --git a/crates/zed/src/zed.rs b/crates/zed/src/zed.rs
index 0d6eb5a622..95e1fe5eac 100644
--- a/crates/zed/src/zed.rs
+++ b/crates/zed/src/zed.rs
@@ -1669,9 +1669,8 @@ fn open_local_file(
         cx.spawn_in(window, async move |workspace, cx| {
             // Check if the file actually exists on disk (even if it's excluded from worktree)
             let file_exists = {
-                let full_path = worktree.read_with(cx, |tree, _| {
-                    tree.abs_path().join(settings_relative_path.as_std_path())
-                })?;
+                let full_path = worktree
+                    .read_with(cx, |tree, _| tree.abs_path().join(settings_relative_path))?;
 
                 let fs = project.read_with(cx, |project, _| project.fs().clone())?;
 
diff --git a/crates/zeta/src/license_detection.rs b/crates/zeta/src/license_detection.rs
index 3c9e97189d..ce6fe0c31f 100644
--- a/crates/zeta/src/license_detection.rs
+++ b/crates/zeta/src/license_detection.rs
@@ -290,7 +290,7 @@ impl LicenseDetectionWatcher {
             include_ignored: true,
         };
         for top_file in local_worktree.child_entries_with_options(RelPath::empty(), options) {
-            let path_bytes = top_file.path.as_unix_str().as_bytes();
+            let path_bytes = top_file.path.as_os_str().as_encoded_bytes();
             if top_file.is_created() && LICENSE_FILE_NAME_REGEX.is_match(path_bytes) {
                 let rel_path = top_file.path.clone();
                 files_to_check_tx.unbounded_send(rel_path).ok();
@@ -302,7 +302,7 @@ impl LicenseDetectionWatcher {
                 worktree::Event::UpdatedEntries(updated_entries) => {
                     for updated_entry in updated_entries.iter() {
                         let rel_path = &updated_entry.0;
-                        let path_bytes = rel_path.as_unix_str().as_bytes();
+                        let path_bytes = rel_path.as_os_str().as_encoded_bytes();
                         if LICENSE_FILE_NAME_REGEX.is_match(path_bytes) {
                             files_to_check_tx.unbounded_send(rel_path.clone()).ok();
                         }
diff --git a/crates/zeta/src/zeta.rs b/crates/zeta/src/zeta.rs
index 6e54646532..d8a6f7e7d3 100644
--- a/crates/zeta/src/zeta.rs
+++ b/crates/zeta/src/zeta.rs
@@ -1181,11 +1181,11 @@ impl Event {
                 let old_path = old_snapshot
                     .file()
                     .map(|f| f.path().as_ref())
-                    .unwrap_or(RelPath::unix("untitled").unwrap());
+                    .unwrap_or(RelPath::new("untitled").unwrap());
                 let new_path = new_snapshot
                     .file()
                     .map(|f| f.path().as_ref())
-                    .unwrap_or(RelPath::unix("untitled").unwrap());
+                    .unwrap_or(RelPath::new("untitled").unwrap());
                 if old_path != new_path {
                     writeln!(prompt, "User renamed {:?} to {:?}\n", old_path, new_path).unwrap();
                 }
diff --git a/crates/zeta2/Cargo.toml b/crates/zeta2/Cargo.toml
index bce7e5987c..8ef1c5a64f 100644
--- a/crates/zeta2/Cargo.toml
+++ b/crates/zeta2/Cargo.toml
@@ -37,12 +37,4 @@ workspace.workspace = true
 worktree.workspace = true
 
 [dev-dependencies]
-clock = { workspace = true, features = ["test-support"] }
-cloud_llm_client = { workspace = true, features = ["test-support"] }
 gpui = { workspace = true, features = ["test-support"] }
-lsp.workspace = true
-indoc.workspace = true
-language_model = { workspace = true, features = ["test-support"] }
-pretty_assertions.workspace = true
-project = { workspace = true, features = ["test-support"] }
-settings = { workspace = true, features = ["test-support"] }
diff --git a/crates/zeta2/src/zeta2.rs b/crates/zeta2/src/zeta2.rs
index b15496a755..5f621d6acf 100644
--- a/crates/zeta2/src/zeta2.rs
+++ b/crates/zeta2/src/zeta2.rs
@@ -345,20 +345,21 @@ impl Zeta {
                             new_snapshot,
                             ..
                         } => {
-                            let path = new_snapshot.file().map(|f| f.full_path(cx));
+                            let path = new_snapshot.file().map(|f| f.path().clone());
 
                             let old_path = old_snapshot.file().and_then(|f| {
-                                let old_path = f.full_path(cx);
-                                if Some(&old_path) != path.as_ref() {
-                                    Some(old_path)
+                                let old_path = f.path();
+                                if Some(old_path) != path.as_ref() {
+                                    Some(old_path.clone())
                                 } else {
                                     None
                                 }
                             });
 
                             predict_edits_v3::Event::BufferChange {
-                                old_path,
-                                path,
+                                old_path: old_path
+                                    .map(|old_path| old_path.as_std_path().to_path_buf()),
+                                path: path.map(|path| path.as_std_path().to_path_buf()),
                                 diff: language::unified_diff(
                                     &old_snapshot.text(),
                                     &new_snapshot.text(),
@@ -832,316 +833,3 @@ fn add_signature(
     declaration_to_signature_index.insert(declaration_id, signature_index);
     Some(signature_index)
 }
-
-#[cfg(test)]
-mod tests {
-    use std::{
-        path::{Path, PathBuf},
-        sync::Arc,
-    };
-
-    use client::UserStore;
-    use clock::FakeSystemClock;
-    use cloud_llm_client::predict_edits_v3;
-    use futures::{
-        AsyncReadExt, StreamExt,
-        channel::{mpsc, oneshot},
-    };
-    use gpui::{
-        Entity, TestAppContext,
-        http_client::{FakeHttpClient, Response},
-        prelude::*,
-    };
-    use indoc::indoc;
-    use language::{LanguageServerId, OffsetRangeExt as _};
-    use project::{FakeFs, Project};
-    use serde_json::json;
-    use settings::SettingsStore;
-    use util::path;
-    use uuid::Uuid;
-
-    use crate::Zeta;
-
-    #[gpui::test]
-    async fn test_simple_request(cx: &mut TestAppContext) {
-        let (zeta, mut req_rx) = init_test(cx);
-        let fs = FakeFs::new(cx.executor());
-        fs.insert_tree(
-            "/root",
-            json!({
-                "foo.md":  "Hello!\nHow\nBye"
-            }),
-        )
-        .await;
-        let project = Project::test(fs, vec![path!("/root").as_ref()], cx).await;
-
-        let buffer = project
-            .update(cx, |project, cx| {
-                let path = project.find_project_path(path!("root/foo.md"), cx).unwrap();
-                project.open_buffer(path, cx)
-            })
-            .await
-            .unwrap();
-        let snapshot = buffer.read_with(cx, |buffer, _cx| buffer.snapshot());
-        let position = snapshot.anchor_before(language::Point::new(1, 3));
-
-        let prediction_task = zeta.update(cx, |zeta, cx| {
-            zeta.request_prediction(&project, &buffer, position, cx)
-        });
-
-        let (request, respond_tx) = req_rx.next().await.unwrap();
-        assert_eq!(
-            request.excerpt_path.as_ref(),
-            Path::new(path!("root/foo.md"))
-        );
-        assert_eq!(request.cursor_offset, 10);
-
-        respond_tx
-            .send(predict_edits_v3::PredictEditsResponse {
-                request_id: Uuid::new_v4(),
-                edits: vec![predict_edits_v3::Edit {
-                    path: Path::new(path!("root/foo.md")).into(),
-                    range: 0..snapshot.len(),
-                    content: "Hello!\nHow are you?\nBye".into(),
-                }],
-                debug_info: None,
-            })
-            .unwrap();
-
-        let prediction = prediction_task.await.unwrap().unwrap();
-
-        assert_eq!(prediction.edits.len(), 1);
-        assert_eq!(
-            prediction.edits[0].0.to_point(&snapshot).start,
-            language::Point::new(1, 3)
-        );
-        assert_eq!(prediction.edits[0].1, " are you?");
-    }
-
-    #[gpui::test]
-    async fn test_request_events(cx: &mut TestAppContext) {
-        let (zeta, mut req_rx) = init_test(cx);
-        let fs = FakeFs::new(cx.executor());
-        fs.insert_tree(
-            "/root",
-            json!({
-                "foo.md": "Hello!\n\nBye"
-            }),
-        )
-        .await;
-        let project = Project::test(fs, vec![path!("/root").as_ref()], cx).await;
-
-        let buffer = project
-            .update(cx, |project, cx| {
-                let path = project.find_project_path(path!("root/foo.md"), cx).unwrap();
-                project.open_buffer(path, cx)
-            })
-            .await
-            .unwrap();
-
-        zeta.update(cx, |zeta, cx| {
-            zeta.register_buffer(&buffer, &project, cx);
-        });
-
-        buffer.update(cx, |buffer, cx| {
-            buffer.edit(vec![(7..7, "How")], None, cx);
-        });
-
-        let snapshot = buffer.read_with(cx, |buffer, _cx| buffer.snapshot());
-        let position = snapshot.anchor_before(language::Point::new(1, 3));
-
-        let prediction_task = zeta.update(cx, |zeta, cx| {
-            zeta.request_prediction(&project, &buffer, position, cx)
-        });
-
-        let (request, respond_tx) = req_rx.next().await.unwrap();
-
-        assert_eq!(request.events.len(), 1);
-        assert_eq!(
-            request.events[0],
-            predict_edits_v3::Event::BufferChange {
-                path: Some(PathBuf::from(path!("root/foo.md"))),
-                old_path: None,
-                diff: indoc! {"
-                        @@ -1,3 +1,3 @@
-                         Hello!
-                        -
-                        +How
-                         Bye
-                    "}
-                .to_string(),
-                predicted: false
-            }
-        );
-
-        respond_tx
-            .send(predict_edits_v3::PredictEditsResponse {
-                request_id: Uuid::new_v4(),
-                edits: vec![predict_edits_v3::Edit {
-                    path: Path::new(path!("root/foo.md")).into(),
-                    range: 0..snapshot.len(),
-                    content: "Hello!\nHow are you?\nBye".into(),
-                }],
-                debug_info: None,
-            })
-            .unwrap();
-
-        let prediction = prediction_task.await.unwrap().unwrap();
-
-        assert_eq!(prediction.edits.len(), 1);
-        assert_eq!(
-            prediction.edits[0].0.to_point(&snapshot).start,
-            language::Point::new(1, 3)
-        );
-        assert_eq!(prediction.edits[0].1, " are you?");
-    }
-
-    #[gpui::test]
-    async fn test_request_diagnostics(cx: &mut TestAppContext) {
-        let (zeta, mut req_rx) = init_test(cx);
-        let fs = FakeFs::new(cx.executor());
-        fs.insert_tree(
-            "/root",
-            json!({
-                "foo.md": "Hello!\nBye"
-            }),
-        )
-        .await;
-        let project = Project::test(fs, vec![path!("/root").as_ref()], cx).await;
-
-        let path_to_buffer_uri = lsp::Uri::from_file_path(path!("/root/foo.md")).unwrap();
-        let diagnostic = lsp::Diagnostic {
-            range: lsp::Range::new(lsp::Position::new(1, 1), lsp::Position::new(1, 5)),
-            severity: Some(lsp::DiagnosticSeverity::ERROR),
-            message: "\"Hello\" deprecated. Use \"Hi\" instead".to_string(),
-            ..Default::default()
-        };
-
-        project.update(cx, |project, cx| {
-            project.lsp_store().update(cx, |lsp_store, cx| {
-                // Create some diagnostics
-                lsp_store
-                    .update_diagnostics(
-                        LanguageServerId(0),
-                        lsp::PublishDiagnosticsParams {
-                            uri: path_to_buffer_uri.clone(),
-                            diagnostics: vec![diagnostic],
-                            version: None,
-                        },
-                        None,
-                        language::DiagnosticSourceKind::Pushed,
-                        &[],
-                        cx,
-                    )
-                    .unwrap();
-            });
-        });
-
-        let buffer = project
-            .update(cx, |project, cx| {
-                let path = project.find_project_path(path!("root/foo.md"), cx).unwrap();
-                project.open_buffer(path, cx)
-            })
-            .await
-            .unwrap();
-
-        let snapshot = buffer.read_with(cx, |buffer, _cx| buffer.snapshot());
-        let position = snapshot.anchor_before(language::Point::new(0, 0));
-
-        let _prediction_task = zeta.update(cx, |zeta, cx| {
-            zeta.request_prediction(&project, &buffer, position, cx)
-        });
-
-        let (request, _respond_tx) = req_rx.next().await.unwrap();
-
-        assert_eq!(request.diagnostic_groups.len(), 1);
-        let value = serde_json::from_str::<serde_json::Value>(request.diagnostic_groups[0].0.get())
-            .unwrap();
-        // We probably don't need all of this. TODO define a specific diagnostic type in predict_edits_v3
-        assert_eq!(
-            value,
-            json!({
-                "entries": [{
-                    "range": {
-                        "start": 8,
-                        "end": 10
-                    },
-                    "diagnostic": {
-                        "source": null,
-                        "code": null,
-                        "code_description": null,
-                        "severity": 1,
-                        "message": "\"Hello\" deprecated. Use \"Hi\" instead",
-                        "markdown": null,
-                        "group_id": 0,
-                        "is_primary": true,
-                        "is_disk_based": false,
-                        "is_unnecessary": false,
-                        "source_kind": "Pushed",
-                        "data": null,
-                        "underline": true
-                    }
-                }],
-                "primary_ix": 0
-            })
-        );
-    }
-
-    fn init_test(
-        cx: &mut TestAppContext,
-    ) -> (
-        Entity<Zeta>,
-        mpsc::UnboundedReceiver<(
-            predict_edits_v3::PredictEditsRequest,
-            oneshot::Sender<predict_edits_v3::PredictEditsResponse>,
-        )>,
-    ) {
-        cx.update(move |cx| {
-            let settings_store = SettingsStore::test(cx);
-            cx.set_global(settings_store);
-            language::init(cx);
-            Project::init_settings(cx);
-
-            let (req_tx, req_rx) = mpsc::unbounded();
-
-            let http_client = FakeHttpClient::create({
-                move |req| {
-                    let uri = req.uri().path().to_string();
-                    let mut body = req.into_body();
-                    let req_tx = req_tx.clone();
-                    async move {
-                        let resp = match uri.as_str() {
-                            "/client/llm_tokens" => serde_json::to_string(&json!({
-                                "token": "test"
-                            }))
-                            .unwrap(),
-                            "/predict_edits/v3" => {
-                                let mut buf = Vec::new();
-                                body.read_to_end(&mut buf).await.ok();
-                                let req = serde_json::from_slice(&buf).unwrap();
-
-                                let (res_tx, res_rx) = oneshot::channel();
-                                req_tx.unbounded_send((req, res_tx)).unwrap();
-                                serde_json::to_string(&res_rx.await.unwrap()).unwrap()
-                            }
-                            _ => {
-                                panic!("Unexpected path: {}", uri)
-                            }
-                        };
-
-                        Ok(Response::builder().body(resp.into()).unwrap())
-                    }
-                }
-            });
-
-            let client = client::Client::new(Arc::new(FakeSystemClock::new()), http_client, cx);
-            client.cloud_client().set_credentials(1, "test".into());
-
-            language_model::init(client.clone(), cx);
-
-            let user_store = cx.new(|cx| UserStore::new(client.clone(), cx));
-            let zeta = Zeta::global(&client, &user_store, cx);
-            (zeta, req_rx)
-        })
-    }
-}
diff --git a/crates/zeta2_tools/Cargo.toml b/crates/zeta2_tools/Cargo.toml
index e2dd18e46e..fe651c1419 100644
--- a/crates/zeta2_tools/Cargo.toml
+++ b/crates/zeta2_tools/Cargo.toml
@@ -14,7 +14,6 @@ path = "src/zeta2_tools.rs"
 [dependencies]
 chrono.workspace = true
 client.workspace = true
-cloud_llm_client.workspace = true
 collections.workspace = true
 edit_prediction_context.workspace = true
 editor.workspace = true
diff --git a/crates/zeta2_tools/src/zeta2_tools.rs b/crates/zeta2_tools/src/zeta2_tools.rs
index 741c3e4f69..3913677915 100644
--- a/crates/zeta2_tools/src/zeta2_tools.rs
+++ b/crates/zeta2_tools/src/zeta2_tools.rs
@@ -2,7 +2,6 @@ use std::{collections::hash_map::Entry, path::PathBuf, str::FromStr, sync::Arc,
 
 use chrono::TimeDelta;
 use client::{Client, UserStore};
-use cloud_llm_client::predict_edits_v3::PromptFormat;
 use collections::HashMap;
 use editor::{Editor, EditorEvent, EditorMode, ExcerptRange, MultiBuffer};
 use futures::StreamExt as _;
@@ -12,7 +11,7 @@ use gpui::{
 };
 use language::{Buffer, DiskState};
 use project::{Project, WorktreeId};
-use ui::{ContextMenu, ContextMenuEntry, DropdownMenu, prelude::*};
+use ui::prelude::*;
 use ui_input::SingleLineInput;
 use util::{ResultExt, paths::PathStyle, rel_path::RelPath};
 use workspace::{Item, SplitDirection, Workspace};
@@ -307,7 +306,7 @@ impl Zeta2Inspector {
                         let multibuffer = cx.new(|cx| {
                             let mut multibuffer = MultiBuffer::new(language::Capability::ReadOnly);
                             let excerpt_file = Arc::new(ExcerptMetadataFile {
-                                title: RelPath::unix("Cursor Excerpt").unwrap().into(),
+                                title: RelPath::new("Cursor Excerpt").unwrap().into(),
                                 path_style,
                                 worktree_id,
                             });
@@ -341,7 +340,7 @@ impl Zeta2Inspector {
                                     .path_for_entry(snippet.declaration.project_entry_id(), cx);
 
                                 let snippet_file = Arc::new(ExcerptMetadataFile {
-                                    title: RelPath::unix(&format!(
+                                    title: RelPath::new(&format!(
                                         "{} (Score density: {})",
                                         path.map(|p| p.path.display(path_style).to_string())
                                             .unwrap_or_else(|| "".to_string()),
@@ -426,162 +425,12 @@ impl Zeta2Inspector {
         });
     }
 
-    fn render_options(&self, window: &mut Window, cx: &mut Context<Self>) -> Div {
-        v_flex()
-            .gap_2()
-            .child(
-                h_flex()
-                    .child(Headline::new("Options").size(HeadlineSize::Small))
-                    .justify_between()
-                    .child(
-                        ui::Button::new("reset-options", "Reset")
-                            .disabled(self.zeta.read(cx).options() == &zeta2::DEFAULT_OPTIONS)
-                            .style(ButtonStyle::Outlined)
-                            .size(ButtonSize::Large)
-                            .on_click(cx.listener(|this, _, window, cx| {
-                                this.set_input_options(&zeta2::DEFAULT_OPTIONS, window, cx);
-                            })),
-                    ),
-            )
-            .child(
-                v_flex()
-                    .gap_2()
-                    .child(
-                        h_flex()
-                            .gap_2()
-                            .items_end()
-                            .child(self.max_excerpt_bytes_input.clone())
-                            .child(self.min_excerpt_bytes_input.clone())
-                            .child(self.cursor_context_ratio_input.clone()),
-                    )
-                    .child(
-                        h_flex()
-                            .gap_2()
-                            .items_end()
-                            .child(self.max_prompt_bytes_input.clone())
-                            .child(self.render_prompt_format_dropdown(window, cx)),
-                    ),
-            )
-    }
-
-    fn render_prompt_format_dropdown(&self, window: &mut Window, cx: &mut Context<Self>) -> Div {
-        let active_format = self.zeta.read(cx).options().prompt_format;
-        let this = cx.weak_entity();
-
-        v_flex()
-            .gap_1p5()
-            .child(
-                Label::new("Prompt Format")
-                    .size(LabelSize::Small)
-                    .color(Color::Muted),
-            )
-            .child(
-                DropdownMenu::new(
-                    "ep-prompt-format",
-                    active_format.to_string(),
-                    ContextMenu::build(window, cx, move |mut menu, _window, _cx| {
-                        for prompt_format in PromptFormat::iter() {
-                            menu = menu.item(
-                                ContextMenuEntry::new(prompt_format.to_string())
-                                    .toggleable(IconPosition::End, active_format == prompt_format)
-                                    .handler({
-                                        let this = this.clone();
-                                        move |_window, cx| {
-                                            this.update(cx, |this, cx| {
-                                                let current_options =
-                                                    this.zeta.read(cx).options().clone();
-                                                let options = ZetaOptions {
-                                                    prompt_format,
-                                                    ..current_options
-                                                };
-                                                this.set_options(options, cx);
-                                            })
-                                            .ok();
-                                        }
-                                    }),
-                            )
-                        }
-                        menu
-                    }),
-                )
-                .style(ui::DropdownStyle::Outlined),
-            )
-    }
-
-    fn render_tabs(&self, cx: &mut Context<Self>) -> Option<AnyElement> {
-        let Some(LastPredictionState::Success { .. } | LastPredictionState::Replaying { .. }) =
-            self.last_prediction.as_ref()
-        else {
-            return None;
-        };
-
-        Some(
-            ui::ToggleButtonGroup::single_row(
-                "prediction",
-                [
-                    ui::ToggleButtonSimple::new(
-                        "Context",
-                        cx.listener(|this, _, _, cx| {
-                            this.active_view = ActiveView::Context;
-                            cx.notify();
-                        }),
-                    ),
-                    ui::ToggleButtonSimple::new(
-                        "Inference",
-                        cx.listener(|this, _, _, cx| {
-                            this.active_view = ActiveView::Inference;
-                            cx.notify();
-                        }),
-                    ),
-                ],
-            )
-            .style(ui::ToggleButtonGroupStyle::Outlined)
-            .selected_index(if self.active_view == ActiveView::Context {
-                0
-            } else {
-                1
-            })
-            .into_any_element(),
-        )
-    }
-
-    fn render_stats(&self) -> Option<Div> {
-        let Some(
-            LastPredictionState::Success(prediction)
-            | LastPredictionState::Replaying { prediction, .. },
-        ) = self.last_prediction.as_ref()
-        else {
-            return None;
-        };
-
-        Some(
-            v_flex()
-                .p_4()
-                .gap_2()
-                .min_w(px(160.))
-                .child(Headline::new("Stats").size(HeadlineSize::Small))
-                .child(Self::render_duration(
-                    "Context retrieval",
-                    prediction.retrieval_time,
-                ))
-                .child(Self::render_duration(
-                    "Prompt planning",
-                    prediction.prompt_planning_time,
-                ))
-                .child(Self::render_duration(
-                    "Inference",
-                    prediction.inference_time,
-                ))
-                .child(Self::render_duration("Parsing", prediction.parsing_time)),
-        )
-    }
-
     fn render_duration(name: &'static str, time: chrono::TimeDelta) -> Div {
         h_flex()
             .gap_1()
             .child(Label::new(name).color(Color::Muted).size(LabelSize::Small))
             .child(
-                Label::new(if time.num_microseconds().unwrap_or(0) >= 1000 {
+                Label::new(if time.num_microseconds().unwrap_or(0) > 1000 {
                     format!("{} ms", time.num_milliseconds())
                 } else {
                     format!("{} µs", time.num_microseconds().unwrap_or(0))
@@ -590,29 +439,6 @@ impl Zeta2Inspector {
             )
     }
 
-    fn render_content(&self, cx: &mut Context<Self>) -> AnyElement {
-        match self.last_prediction.as_ref() {
-            None => v_flex()
-                .size_full()
-                .justify_center()
-                .items_center()
-                .child(Label::new("No prediction").size(LabelSize::Large))
-                .into_any(),
-            Some(LastPredictionState::Success(prediction)) => {
-                self.render_last_prediction(prediction, cx).into_any()
-            }
-            Some(LastPredictionState::Replaying { prediction, _task }) => self
-                .render_last_prediction(prediction, cx)
-                .opacity(0.6)
-                .into_any(),
-            Some(LastPredictionState::Failed(err)) => v_flex()
-                .p_4()
-                .gap_2()
-                .child(Label::new(err.clone()).buffer_font(cx))
-                .into_any(),
-        }
-    }
-
     fn render_last_prediction(&self, prediction: &LastPrediction, cx: &mut Context<Self>) -> Div {
         match &self.active_view {
             ActiveView::Context => div().size_full().child(prediction.context_editor.clone()),
@@ -663,7 +489,28 @@ impl Item for Zeta2Inspector {
 impl EventEmitter<()> for Zeta2Inspector {}
 
 impl Render for Zeta2Inspector {
-    fn render(&mut self, window: &mut Window, cx: &mut Context<Self>) -> impl IntoElement {
+    fn render(&mut self, _window: &mut Window, cx: &mut Context<Self>) -> impl IntoElement {
+        let content = match self.last_prediction.as_ref() {
+            None => v_flex()
+                .size_full()
+                .justify_center()
+                .items_center()
+                .child(Label::new("No prediction").size(LabelSize::Large))
+                .into_any(),
+            Some(LastPredictionState::Success(prediction)) => {
+                self.render_last_prediction(prediction, cx).into_any()
+            }
+            Some(LastPredictionState::Replaying { prediction, _task }) => self
+                .render_last_prediction(prediction, cx)
+                .opacity(0.6)
+                .into_any(),
+            Some(LastPredictionState::Failed(err)) => v_flex()
+                .p_4()
+                .gap_2()
+                .child(Label::new(err.clone()).buffer_font(cx))
+                .into_any(),
+        };
+
         v_flex()
             .size_full()
             .bg(cx.theme().colors().editor_background)
@@ -676,14 +523,114 @@ impl Render for Zeta2Inspector {
                             .p_4()
                             .h_full()
                             .justify_between()
-                            .child(self.render_options(window, cx))
-                            .gap_4()
-                            .children(self.render_tabs(cx)),
+                            .child(
+                                v_flex()
+                                    .gap_2()
+                                    .child(Headline::new("Options").size(HeadlineSize::Small))
+                                    .child(
+                                        h_flex()
+                                            .gap_2()
+                                            .items_end()
+                                            .child(self.max_excerpt_bytes_input.clone())
+                                            .child(self.min_excerpt_bytes_input.clone())
+                                            .child(self.cursor_context_ratio_input.clone())
+                                            .child(self.max_prompt_bytes_input.clone())
+                                            .child(
+                                                ui::Button::new("reset-options", "Reset")
+                                                    .disabled(
+                                                        self.zeta.read(cx).options()
+                                                            == &zeta2::DEFAULT_OPTIONS,
+                                                    )
+                                                    .style(ButtonStyle::Outlined)
+                                                    .size(ButtonSize::Large)
+                                                    .on_click(cx.listener(
+                                                        |this, _, window, cx| {
+                                                            this.set_input_options(
+                                                                &zeta2::DEFAULT_OPTIONS,
+                                                                window,
+                                                                cx,
+                                                            );
+                                                        },
+                                                    )),
+                                            ),
+                                    ),
+                            )
+                            .map(|this| {
+                                if let Some(
+                                    LastPredictionState::Success { .. }
+                                    | LastPredictionState::Replaying { .. },
+                                ) = self.last_prediction.as_ref()
+                                {
+                                    this.child(
+                                        ui::ToggleButtonGroup::single_row(
+                                            "prediction",
+                                            [
+                                                ui::ToggleButtonSimple::new(
+                                                    "Context",
+                                                    cx.listener(|this, _, _, cx| {
+                                                        this.active_view = ActiveView::Context;
+                                                        cx.notify();
+                                                    }),
+                                                ),
+                                                ui::ToggleButtonSimple::new(
+                                                    "Inference",
+                                                    cx.listener(|this, _, _, cx| {
+                                                        this.active_view = ActiveView::Inference;
+                                                        cx.notify();
+                                                    }),
+                                                ),
+                                            ],
+                                        )
+                                        .style(ui::ToggleButtonGroupStyle::Outlined)
+                                        .selected_index(
+                                            if self.active_view == ActiveView::Context {
+                                                0
+                                            } else {
+                                                1
+                                            },
+                                        ),
+                                    )
+                                } else {
+                                    this
+                                }
+                            }),
                     )
                     .child(ui::vertical_divider())
-                    .children(self.render_stats()),
+                    .map(|this| {
+                        if let Some(
+                            LastPredictionState::Success(prediction)
+                            | LastPredictionState::Replaying { prediction, .. },
+                        ) = self.last_prediction.as_ref()
+                        {
+                            this.child(
+                                v_flex()
+                                    .p_4()
+                                    .gap_2()
+                                    .min_w(px(160.))
+                                    .child(Headline::new("Stats").size(HeadlineSize::Small))
+                                    .child(Self::render_duration(
+                                        "Context retrieval",
+                                        prediction.retrieval_time,
+                                    ))
+                                    .child(Self::render_duration(
+                                        "Prompt planning",
+                                        prediction.prompt_planning_time,
+                                    ))
+                                    .child(Self::render_duration(
+                                        "Inference",
+                                        prediction.inference_time,
+                                    ))
+                                    .child(Self::render_duration(
+                                        "Parsing",
+                                        prediction.parsing_time,
+                                    )),
+                            )
+                        } else {
+                            this
+                        }
+                    }),
             )
-            .child(self.render_content(cx))
+            .child(content)
     }
 }
 
diff --git a/crates/zeta_cli/src/main.rs b/crates/zeta_cli/src/main.rs
index 8895603f29..4460d66005 100644
--- a/crates/zeta_cli/src/main.rs
+++ b/crates/zeta_cli/src/main.rs
@@ -2,7 +2,7 @@ mod headless;
 
 use anyhow::{Result, anyhow};
 use clap::{Args, Parser, Subcommand};
-use cloud_llm_client::predict_edits_v3;
+use cloud_llm_client::predict_edits_v3::PromptFormat;
 use edit_prediction_context::EditPredictionExcerptOptions;
 use futures::channel::mpsc;
 use futures::{FutureExt as _, StreamExt as _};
@@ -15,7 +15,6 @@ use language_model::LlmApiToken;
 use project::{Project, ProjectPath, Worktree};
 use release_channel::AppVersion;
 use reqwest_client::ReqwestClient;
-use serde_json::json;
 use std::path::{Path, PathBuf};
 use std::process::exit;
 use std::str::FromStr;
@@ -76,38 +75,18 @@ struct Zeta2Args {
     target_before_cursor_over_total_bytes: f32,
     #[arg(long, default_value_t = 1024)]
     max_diagnostic_bytes: usize,
-    #[arg(long, value_enum, default_value_t = PromptFormat::default())]
-    prompt_format: PromptFormat,
-    #[arg(long, value_enum, default_value_t = Default::default())]
-    output_format: OutputFormat,
+    #[arg(long, value_parser = parse_format)]
+    format: PromptFormat,
 }
 
-#[derive(clap::ValueEnum, Default, Debug, Clone)]
-enum PromptFormat {
-    #[default]
-    MarkedExcerpt,
-    LabeledSections,
-    OnlySnippets,
-}
-
-impl Into<predict_edits_v3::PromptFormat> for PromptFormat {
-    fn into(self) -> predict_edits_v3::PromptFormat {
-        match self {
-            Self::MarkedExcerpt => predict_edits_v3::PromptFormat::MarkedExcerpt,
-            Self::LabeledSections => predict_edits_v3::PromptFormat::LabeledSections,
-            Self::OnlySnippets => predict_edits_v3::PromptFormat::OnlySnippets,
-        }
+fn parse_format(s: &str) -> Result<PromptFormat> {
+    match s {
+        "marked_excerpt" => Ok(PromptFormat::MarkedExcerpt),
+        "labeled_sections" => Ok(PromptFormat::LabeledSections),
+        _ => Err(anyhow!("Invalid format: {}", s)),
     }
 }
 
-#[derive(clap::ValueEnum, Default, Debug, Clone)]
-enum OutputFormat {
-    #[default]
-    Prompt,
-    Request,
-    Both,
-}
-
 #[derive(Debug, Clone)]
 enum FileOrStdin {
     File(PathBuf),
@@ -152,7 +131,7 @@ impl FromStr for CursorPosition {
             ));
         }
 
-        let path = RelPath::new(Path::new(&parts[0]), PathStyle::local())?.into_arc();
+        let path = RelPath::from_std_path(Path::new(&parts[0]), PathStyle::local())?;
         let line: u32 = parts[1]
             .parse()
             .map_err(|_| anyhow!("Invalid line number: '{}'", parts[1]))?;
@@ -260,7 +239,7 @@ async fn get_context(
                         },
                         max_diagnostic_bytes: zeta2_args.max_diagnostic_bytes,
                         max_prompt_bytes: zeta2_args.max_prompt_bytes,
-                        prompt_format: zeta2_args.prompt_format.into(),
+                        prompt_format: zeta2_args.format,
                     })
                 });
                 // TODO: Actually wait for indexing.
@@ -273,19 +252,9 @@ async fn get_context(
                             zeta.cloud_request_for_zeta_cli(&project, &buffer, cursor, cx)
                         })?
                         .await?;
-
                     let planned_prompt = cloud_zeta2_prompt::PlannedPrompt::populate(&request)?;
-                    let prompt_string = planned_prompt.to_prompt_string()?.0;
-                    match zeta2_args.output_format {
-                        OutputFormat::Prompt => anyhow::Ok(prompt_string),
-                        OutputFormat::Request => {
-                            anyhow::Ok(serde_json::to_string_pretty(&request)?)
-                        }
-                        OutputFormat::Both => anyhow::Ok(serde_json::to_string_pretty(&json!({
-                            "request": request,
-                            "prompt": prompt_string,
-                        }))?),
-                    }
+                    // TODO: Output the section label ranges
+                    anyhow::Ok(planned_prompt.to_prompt_string()?.0)
                 })
             })?
             .await?,
@@ -500,7 +469,7 @@ fn main() {
                     println!("{}", output);
                     // TODO: Remove this once the 5 second delay is properly replaced.
                     if is_zeta2_context_command {
-                        eprintln!("Note that zeta_cli doesn't yet wait for indexing, instead waits 5 seconds.");
+                        eprintln!("Note that zeta2-context doesn't yet wait for indexing, instead waits 5 seconds.");
                     }
                     let _ = cx.update(|cx| cx.quit());
                 }
diff --git a/docs/src/configuring-zed.md b/docs/src/configuring-zed.md
index 0eed4a7189..d4729078ce 100644
--- a/docs/src/configuring-zed.md
+++ b/docs/src/configuring-zed.md
@@ -1571,6 +1571,22 @@ While other options may be changed at a runtime and should be placed under `sett
 - Setting: `lsp_highlight_debounce`
 - Default: `75`
 
+## Global LSP Settings
+
+- Description: Common language server settings.
+- Setting: `global_lsp_settings`
+- Default:
+
+```json
+"global_lsp_settings": {
+  "button": true
+}
+```
+
+**Options**
+
+`integer` values representing milliseconds
+
 ## Features
 
 - Description: Features that can be globally enabled or disabled
@@ -3520,7 +3536,7 @@ List of `integer` column numbers
     "button": true,
     "shell": "system",
     "toolbar": {
-      "breadcrumbs": false
+      "breadcrumbs": true
     },
     "working_directory": "current_project_directory",
     "scrollbar": {
@@ -3941,7 +3957,7 @@ Disable with:
 {
   "terminal": {
     "toolbar": {
-      "breadcrumbs": false
+      "breadcrumbs": true
     }
   }
 }
diff --git a/docs/src/development/glossary.md b/docs/src/development/glossary.md
index 34172ec9a5..b3ff24464c 100644
--- a/docs/src/development/glossary.md
+++ b/docs/src/development/glossary.md
@@ -79,17 +79,15 @@ h_flex()
 - `Pane`: An area in the `Center` where we can place items, such as an editor, multi-buffer or terminal (see image below).
 - `Panel`: An `Entity` implementing the `Panel` trait. These can be placed in a `Dock`. In the image below we see the: `ProjectPanel` in the left dock, the `DebugPanel` in the bottom dock, and `AgentPanel` in the right dock. Note `Editor` does not implement `Panel` and hence is not a `Panel`.
 - `Dock`: A UI element similar to a `Pane` which can be opened and hidden. There can be up to 3 docks open at a time, left right and below the center. A dock contains one or more `Panel`s not `Pane`s. (see image).
-
-<img width="1921" height="1080" alt="Screenshot for the Pane and Dock features" src="https://github.com/user-attachments/assets/2cb1170e-2850-450d-89bb-73622b5d07b2" />
+  <img width="1921" height="1080" alt="image" src="https://github.com/user-attachments/assets/2cb1170e-2850-450d-89bb-73622b5d07b2" />
 
 - `Project`: One or more `Worktree`s
 - `Worktree`: Represents either local or remote files.
-
-<img width="552" height="1118" alt="Screenshot for the Worktree feature" src="https://github.com/user-attachments/assets/da5c58e4-b02e-4038-9736-27e3509fdbfa" />
+  <img width="552" height="1118" alt="image" src="https://github.com/user-attachments/assets/da5c58e4-b02e-4038-9736-27e3509fdbfa" />
 
 - [Multibuffer](https://zed.dev/docs/multibuffers): A list of Editors, a multi-buffer allows editing multiple files simultaneously. A multi-buffer opens when an operation in Zed returns multiple locations, examples: _search_ or _go to definition_. See project search in the image below.
 
-<img width="800" height="886" alt="Screenshot for the MultiBuffer feature" src="https://github.com/user-attachments/assets/d59dcecd-8ab6-4172-8fb6-b1fc3c3eaf9d" />
+<img width="800" height="886" alt="image" src="https://github.com/user-attachments/assets/d59dcecd-8ab6-4172-8fb6-b1fc3c3eaf9d" />
 
 ## Editor
 
@@ -111,7 +109,7 @@ h_flex()
 - `debugger::Session`: Is an entity that manages the lifecycle of a debug session and communication with DAPS
 - `BreakpointStore`: Is an entity that manages breakpoints states in local and remote instances of Zed
 - `DebugSession`: Manages a debug session's UI and running state
-- `RunningState`: Directly manages all the views of a debug session
+- `RunningState`: Directily manages all the views of a debug session
 - `VariableList`: The variable and watch list view of a debug session
 - `Console`: TODO
 - `Terminal`: TODO
diff --git a/docs/src/development/linux.md b/docs/src/development/linux.md
index a6799378bc..a0f9af5f26 100644
--- a/docs/src/development/linux.md
+++ b/docs/src/development/linux.md
@@ -20,33 +20,6 @@ Clone down the [Zed repository](https://github.com/zed-industries/zed).
 
 If you are looking to develop Zed collaboration features using a local collaboration server, please see: [Local Collaboration](./local-collaboration.md) docs.
 
-### Linkers {#linker}
-
-On Linux, Rust's default linker is [LLVM's `lld`](https://blog.rust-lang.org/2025/09/18/Rust-1.90.0/). Alternative linkers, especially [Wild](https://github.com/davidlattimore/wild) and [Mold](https://github.com/rui314/mold) can significantly improve clean and incremental build time.
-
-At present Zed uses Mold in CI because it's more mature. For local development Wild is recommended because it's 5-20% faster than Mold.
-
-These linkers can be installed with `script/install-mold` and `script/install-wild`.
-
-To use Wild as your default, add these lines to your `~/.cargo/config.toml`:
-
-```toml
-[target.x86_64-unknown-linux-gnu]
-linker = "clang"
-rustflags = ["-C", "link-arg=--ld-path=wild"]
-
-[target.aarch64-unknown-linux-gnu]
-linker = "clang"
-rustflags = ["-C", "link-arg=--ld-path=wild"]
-```
-
-To use Mold as your default:
-
-```toml
-[target.'cfg(target_os = "linux")']
-rustflags = ["-C", "link-arg=-fuse-ld=mold"]
-```
-
 ## Building from source
 
 Once the dependencies are installed, you can build Zed using [Cargo](https://doc.rust-lang.org/cargo/).
diff --git a/docs/src/development/macos.md b/docs/src/development/macos.md
index f3adf2e44b..51abca5e64 100644
--- a/docs/src/development/macos.md
+++ b/docs/src/development/macos.md
@@ -57,6 +57,50 @@ And to run the tests:
 cargo test --workspace
 ```
 
+## Signing & Notarizing Your Own macOS Bundles
+
+When you ship a locally patched build to `/Applications`, macOS Gatekeeper will block it unless it is
+codesigned and notarized. You can reuse the repository’s `script/bundle-mac` helper with your own Apple
+Developer credentials:
+
+1. **Prerequisites**
+   - Apple Developer Program membership and Xcode installed (`xcode-select --install`).
+   - Sign in to Xcode with your developer Apple ID so it can manage certificates.
+2. **Create credentials**
+   - In Certificates, generate a *Developer ID Application* certificate, import it into Keychain Access,
+     then export the cert + private key as a password-protected `DeveloperID.p12`.
+   - In App Store Connect ▸ Users and Access ▸ Keys, create a notarization API key. Record the *Issuer ID*,
+     *Key ID*, and download the `AuthKey_<KEYID>.p8` file.
+3. **Base64-encode the secrets** (avoids having to manage temporary files in the script):
+   ```bash
+   base64 -i DeveloperID.p12 > cert.b64
+   base64 -i AuthKey_ABCD1234.p8 > notary.b64
+   ```
+4. **Export environment variables** before running the bundler (replace placeholders with your values):
+   ```bash
+   export MACOS_CERTIFICATE=$(cat cert.b64)
+   export MACOS_CERTIFICATE_PASSWORD='p12-password'
+   export APPLE_NOTARIZATION_KEY=$(cat notary.b64)
+   export APPLE_NOTARIZATION_KEY_ID='ABCD1234'          # App Store Connect Key ID
+   export APPLE_NOTARIZATION_ISSUER_ID='abcdef12-...'   # App Store Connect Issuer ID
+   ```
+5. **Bundle, sign, notarize, and install**
+   ```bash
+   script/bundle-mac -l -i
+   ```
+   - `-l` builds for the local architecture (faster).
+   - `-i` installs the notarized app into `/Applications` once stapling succeeds.
+   - Add `-o` if you want the script to open the resulting app automatically.
+6. When the environment variables are present, `bundle-mac` handles: importing the certificate into a
+   temporary keychain ➝ codesigning ➝ submitting with `notarytool` ➝ stapling ➝ cleaning up the keychain.
+   Watch the script output for the notarization ticket URL if Apple rejects the build.
+7. **First launch**: the stapled bundle opens without the "unverified developer" warning. If macOS still
+   prompts, use Finder ▸ right-click ▸ *Open* once to whitelist it.
+8. **Clean up**: unset the exported variables or close the shell session, and delete the intermediate `.b64`
+   files when you’re finished.
+
+Repeat the same command after every code change to keep `/Applications/Zed.app` aligned with your fork.
+
 ## Troubleshooting
 
 ### Error compiling metal shaders
diff --git a/docs/src/development/releases.md b/docs/src/development/releases.md
index 04190aeb9c..39c46f24f0 100644
--- a/docs/src/development/releases.md
+++ b/docs/src/development/releases.md
@@ -8,9 +8,6 @@ You will need write access to the Zed repository to do this.
 
 Credentials for various services used in this process can be found in 1Password.
 
-Use the `releases` Slack channel to notify the team that releases will be starting.
-This is mostly a formality on Wednesday's minor update releases, but can be beneficial when doing patch releases, as other devs may have landed fixes they'd like to cherry pick.
-
 ---
 
 1. Checkout `main` and ensure your working copy is clean.
@@ -35,7 +32,7 @@ This is mostly a formality on Wednesday's minor update releases, but can be bene
 
 1. Once release drafts are up on [GitHub Releases](https://github.com/zed-industries/zed/releases), paste both preview and stable release notes into each and **save**.
 
-   - **Do not publish the drafts!**
+   - **Do not publish the drafts, yet.**
 
 1. Check the release assets.
 
@@ -43,36 +40,24 @@ This is mostly a formality on Wednesday's minor update releases, but can be bene
    - Ensure each draft has the proper number of assets—releases currently have 10 assets each.
    - Download the artifacts for each release draft and test that you can run them locally.
 
-1. Publish the drafts.
-
-   - Publish stable and preview drafts, one at a time.
-     - Use [Vercel](https://vercel.com/zed-industries/zed-dev) to check the progress of the website rebuild.
-       The release will be public once the rebuild has completed.
-
-1. Post the stable release notes to social media.
-
-   - Bluesky and X posts will already be built as drafts in [Buffer](https://buffer.com).
-   - Publish both, one at a time, ensuring both are posted to each respective platform.
-
-1. Send the stable release notes email.
+1. Publish stable / preview drafts, one at a time.
 
-   - The email broadcast will already be built as a draft in [Kit](https://kit.com).
+   - Use [Vercel](https://vercel.com/zed-industries/zed-dev) to check the progress of the website rebuild.
+     The release will be public once the rebuild has completed.
 
-1. Build social media posts based on the popular items in preview.
+1. Publish the release email that has been sent to [Kit](https://kit.com).
 
-   - Draft the copy in the [tweets](https://zed.dev/channel/tweets-23331) channel.
-   - Create the preview media (videos, screenshots).
-     - For features that you film videos around, try to create alternative photo-only versions to be used in the email, as videos and GIFs aren't great for email.
-     - Store all created media in `Feature Media` in our Google Drive.
-   - Build X and Bluesky post drafts (copy and media) in [Buffer](https://buffer.com), to be sent for next week's stable release.
+   - Make sure to double-check that the email is correct before publishing.
+   - We sometimes correct things here and there that didn't translate from GitHub's renderer to Kit's.
 
-   **Note: These are preview items and you may discover bugs.**
-   **This is a very good time to report these findings to the team!**
+1. Build social media posts based on the popular items in stable.
 
-1. Build email based on the popular items in preview.
+   - You can use the [prior week's post chain](https://zed.dev/channel/tweets-23331) as your outline.
+   - Stage the copy and assets using [Buffer](https://buffer.com), for both X and BlueSky.
+   - Publish both, one at a time, ensuring both are posted to each respective platform.
 
-   - You can reuse the copy and photo media from the preview social media posts.
-   - Create a draft email in [Kit](https://kit.com), to be sent for next week's stable release.
+1. Store any media created in the `Feature Media` directory in our Google Drive.
+   Other team members may want to reference or use these later on.
 
 ## Patch Release Process
 
diff --git a/docs/src/linux.md b/docs/src/linux.md
index a62b763261..a3220e11cb 100644
--- a/docs/src/linux.md
+++ b/docs/src/linux.md
@@ -368,15 +368,3 @@ xrandr --dpi 192
 ```
 
 Replace `192` with your desired DPI value. This affects the system globally and will be used by Zed's automatic RandR detection when `Xft.dpi` is not set.
-
-### Font rendering parameters
-
-When using Blade rendering (Linux platforms and self-compiled builds with the Blade renderer enabled), Zed reads `ZED_FONTS_GAMMA` and `ZED_FONTS_GRAYSCALE_ENHANCED_CONTRAST` environment variables for the values to use for font rendering.
-
-`ZED_FONTS_GAMMA` corresponds to [getgamma](https://learn.microsoft.com/en-us/windows/win32/api/dwrite/nf-dwrite-idwriterenderingparams-getgamma) values.
-Allowed range [1.0, 2.2], other values are clipped.
-Default: 1.8
-
-`ZED_FONTS_GRAYSCALE_ENHANCED_CONTRAST` corresponds to [getgrayscaleenhancedcontrast](https://learn.microsoft.com/en-us/windows/win32/api/dwrite_1/nf-dwrite_1-idwriterenderingparams1-getgrayscaleenhancedcontrast) values.
-Allowed range: [0.0, ..), other values are clipped.
-Default: 1.0
diff --git a/script/install-wild b/script/install-wild
deleted file mode 100755
index 7e35452db7..0000000000
--- a/script/install-wild
+++ /dev/null
@@ -1,29 +0,0 @@
-#!/usr/bin/env bash
-
-# Install wild-linker official binaries from GitHub Releases.
-
-set -euo pipefail
-
-WILD_VERSION="${WILD_VERSION:-${1:-0.6.0}}"
-if [ "$(uname -s)" != "Linux" ]; then
-    echo "Error: This script is intended for Linux systems only."
-    exit 1
-elif [ -z "$WILD_VERSION" ]; then
-    echo "Usage: $0 [version]"
-    exit 1
-elif which -s wild && wild --version | grep -Fq "$WILD_VERSION" ; then
-    echo "Warning: existing wild $WILD_VERSION found at $(which wild). Skipping installation."
-    exit 0
-fi
-
-if [ "$(whoami)" = root ]; then SUDO=; else SUDO="$(command -v sudo || command -v doas || true)"; fi
-
-ARCH="$(uname -m)"
-WILD_REPO="${WILD_REPO:-https://github.com/davidlattimore/wild}"
-WILD_PACKAGE="wild-linker-${ARCH}-unknown-linux-gnu"
-WILD_URL="${WILD_URL:-$WILD_REPO}/releases/download/$WILD_VERSION/${WILD_PACKAGE}.tar.gz"
-
-echo "Downloading from $WILD_URL"
-curl -fsSL --output - "$WILD_URL" \
-    | $SUDO tar -C /usr/local/bin --strip-components=1 --no-overwrite-dir -xJf - \
-    "wild-linker-${ARCH}-unknown-linux-gnu/wild"
diff --git a/script/linux b/script/linux
index 3d619858d1..5523d87687 100755
--- a/script/linux
+++ b/script/linux
@@ -11,23 +11,12 @@ fi
 function finalize {
   # after packages install (curl, etc), get the rust toolchain
   which rustup > /dev/null 2>&1 || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
-  cat <<EOF
-Note: It's recommended to install and configure Wild or Mold for faster builds.
-      Run script/install-wild or script/install-mold.
-      Then add these lines to your ~/.cargo/config.toml:
-
-[target.x86_64-unknown-linux-gnu]
-linker = "clang"
-rustflags = ["-C", "link-arg=--ld-path=wild"]
-
-[target.aarch64-unknown-linux-gnu]
-linker = "clang"
-rustflags = ["-C", "link-arg=--ld-path=wild"]
-
-
-
-Finished installing Linux dependencies with script/linux
-EOF
+  # verify the mold situation
+  if ! command -v mold >/dev/null 2>&1; then
+    echo "Warning: Mold binaries are unavailable on your system." >&2
+    echo "    Builds will be slower without mold. Try: script/install-mold" >&2
+  fi
+  echo "Finished installing Linux dependencies with script/linux"
 }
 
 # Ubuntu, Debian, Mint, Kali, Pop!_OS, Raspbian, etc.
diff --git a/script/zed-local b/script/zed-local
index d07eb21cba..99d9308232 100755
--- a/script/zed-local
+++ b/script/zed-local
@@ -205,8 +205,14 @@ setTimeout(() => {
         ZED_WINDOW_POSITION: position,
         ZED_STATELESS: isStateful && i == 0 ? "" : "1",
         ZED_ALWAYS_ACTIVE: "1",
-        ZED_SERVER_URL: "http://localhost:3000",
-        ZED_RPC_URL: "http://localhost:8080/rpc",
+        ZED_SERVER_URL:
+          platform === "win32"
+            ? "http://127.0.0.1:3000"
+            : "http://localhost:3000",
+        ZED_RPC_URL:
+          platform === "win32"
+            ? "http://127.0.0.1:8080/rpc"
+            : "http://localhost:8080/rpc",
         ZED_ADMIN_API_TOKEN: "internal-api-key-secret",
         ZED_WINDOW_SIZE: size,
         ZED_CLIENT_CHECKSUM_SEED: "development-checksum-seed",
diff --git a/tooling/perf/src/lib.rs b/tooling/perf/src/lib.rs
index c6d620aaeb..18fc2984a6 100644
--- a/tooling/perf/src/lib.rs
+++ b/tooling/perf/src/lib.rs
@@ -261,8 +261,8 @@ impl Output {
                 // Only compare categories where both           meow
                 // runs have data.                              /
                 let mut other_data = other_categories.remove(&cat)?;
-                let mut max = f64::MIN;
-                let mut min = f64::MAX;
+                let mut max = 0.;
+                let mut min = 0.;
 
                 // Running totals for averaging out tests.
                 let mut r_total_numerator = 0.;
@@ -284,15 +284,10 @@ impl Output {
                     r_total_numerator += shift * f64::from(weight);
                     r_total_denominator += u32::from(weight);
                 }
-                // There were no runs here!
-                if r_total_denominator == 0 {
-                    None
-                } else {
-                    let mean = r_total_numerator / f64::from(r_total_denominator);
-                    // TODO: also aggregate standard deviation? That's harder to keep
-                    // meaningful, though, since we dk which tests are correlated.
-                    Some((cat, PerfDelta { max, mean, min }))
-                }
+                let mean = r_total_numerator / f64::from(r_total_denominator);
+                // TODO: also aggregate standard deviation? That's harder to keep
+                // meaningful, though, since we dk which tests are correlated.
+                Some((cat, PerfDelta { max, mean, min }))
             })
             .collect();
 
diff --git a/tooling/perf/src/main.rs b/tooling/perf/src/main.rs
index d5be1a9d8a..cbf14a48d8 100644
--- a/tooling/perf/src/main.rs
+++ b/tooling/perf/src/main.rs
@@ -93,10 +93,7 @@ impl OutputKind<'_> {
         match self {
             OutputKind::Markdown => print!("{output}"),
             OutputKind::Json(ident) => {
-                // We're going to be in tooling/perf/$whatever.
-                let wspace_dir = PathBuf::from(std::env::var("CARGO_MANIFEST_DIR").unwrap())
-                    .join("..")
-                    .join("..");
+                let wspace_dir = std::env::var("CARGO_MANIFEST_DIR").unwrap();
                 let runs_dir = PathBuf::from(&wspace_dir).join(consts::RUNS_DIR);
                 std::fs::create_dir_all(&runs_dir).unwrap();
                 assert!(
diff --git a/tooling/workspace-hack/Cargo.toml b/tooling/workspace-hack/Cargo.toml
index 5b62903c72..1aa6aef70b 100644
--- a/tooling/workspace-hack/Cargo.toml
+++ b/tooling/workspace-hack/Cargo.toml
@@ -88,6 +88,7 @@ mime_guess = { version = "2" }
 miniz_oxide = { version = "0.8", features = ["simd"] }
 nom = { version = "7" }
 num-bigint = { version = "0.4" }
+num-complex = { version = "0.4", features = ["bytemuck"] }
 num-integer = { version = "0.1", features = ["i128"] }
 num-iter = { version = "0.1", default-features = false, features = ["i128", "std"] }
 num-rational = { version = "0.4", features = ["num-bigint-std"] }
@@ -221,6 +222,7 @@ mime_guess = { version = "2" }
 miniz_oxide = { version = "0.8", features = ["simd"] }
 nom = { version = "7" }
 num-bigint = { version = "0.4" }
+num-complex = { version = "0.4", features = ["bytemuck"] }
 num-integer = { version = "0.1", features = ["i128"] }
 num-iter = { version = "0.1", default-features = false, features = ["i128", "std"] }
 num-rational = { version = "0.4", features = ["num-bigint-std"] }
@@ -297,6 +299,7 @@ hyper-rustls = { version = "0.27", default-features = false, features = ["http1"
 livekit-runtime = { git = "https://github.com/zed-industries/livekit-rust-sdks", rev = "5f04705ac3f356350ae31534ffbc476abc9ea83d" }
 naga = { version = "25", features = ["msl-out", "wgsl-in"] }
 nix-b73a96c0a5f6a7d9 = { package = "nix", version = "0.29", features = ["fs", "pthread", "signal", "user"] }
+num = { version = "0.4" }
 objc2 = { version = "0.6" }
 objc2-core-foundation = { version = "0.3", default-features = false, features = ["CFArray", "CFCGTypes", "CFData", "CFDate", "CFDictionary", "CFRunLoop", "CFString", "CFURL", "objc2", "std"] }
 objc2-foundation = { version = "0.3", default-features = false, features = ["NSArray", "NSAttributedString", "NSBundle", "NSCoder", "NSData", "NSDate", "NSDictionary", "NSEnumerator", "NSError", "NSGeometry", "NSNotification", "NSNull", "NSObjCRuntime", "NSObject", "NSProcessInfo", "NSRange", "NSRunLoop", "NSString", "NSURL", "NSUndoManager", "NSValue", "objc2-core-foundation", "std"] }
@@ -327,6 +330,7 @@ hyper-rustls = { version = "0.27", default-features = false, features = ["http1"
 livekit-runtime = { git = "https://github.com/zed-industries/livekit-rust-sdks", rev = "5f04705ac3f356350ae31534ffbc476abc9ea83d" }
 naga = { version = "25", features = ["msl-out", "wgsl-in"] }
 nix-b73a96c0a5f6a7d9 = { package = "nix", version = "0.29", features = ["fs", "pthread", "signal", "user"] }
+num = { version = "0.4" }
 objc2 = { version = "0.6" }
 objc2-core-foundation = { version = "0.3", default-features = false, features = ["CFArray", "CFCGTypes", "CFData", "CFDate", "CFDictionary", "CFRunLoop", "CFString", "CFURL", "objc2", "std"] }
 objc2-foundation = { version = "0.3", default-features = false, features = ["NSArray", "NSAttributedString", "NSBundle", "NSCoder", "NSData", "NSDate", "NSDictionary", "NSEnumerator", "NSError", "NSGeometry", "NSNotification", "NSNull", "NSObjCRuntime", "NSObject", "NSProcessInfo", "NSRange", "NSRunLoop", "NSString", "NSURL", "NSUndoManager", "NSValue", "objc2-core-foundation", "std"] }
@@ -358,6 +362,7 @@ hyper-rustls = { version = "0.27", default-features = false, features = ["http1"
 livekit-runtime = { git = "https://github.com/zed-industries/livekit-rust-sdks", rev = "5f04705ac3f356350ae31534ffbc476abc9ea83d" }
 naga = { version = "25", features = ["msl-out", "wgsl-in"] }
 nix-b73a96c0a5f6a7d9 = { package = "nix", version = "0.29", features = ["fs", "pthread", "signal", "user"] }
+num = { version = "0.4" }
 objc2 = { version = "0.6" }
 objc2-core-foundation = { version = "0.3", default-features = false, features = ["CFArray", "CFCGTypes", "CFData", "CFDate", "CFDictionary", "CFRunLoop", "CFString", "CFURL", "objc2", "std"] }
 objc2-foundation = { version = "0.3", default-features = false, features = ["NSArray", "NSAttributedString", "NSBundle", "NSCoder", "NSData", "NSDate", "NSDictionary", "NSEnumerator", "NSError", "NSGeometry", "NSNotification", "NSNull", "NSObjCRuntime", "NSObject", "NSProcessInfo", "NSRange", "NSRunLoop", "NSString", "NSURL", "NSUndoManager", "NSValue", "objc2-core-foundation", "std"] }
@@ -388,6 +393,7 @@ hyper-rustls = { version = "0.27", default-features = false, features = ["http1"
 livekit-runtime = { git = "https://github.com/zed-industries/livekit-rust-sdks", rev = "5f04705ac3f356350ae31534ffbc476abc9ea83d" }
 naga = { version = "25", features = ["msl-out", "wgsl-in"] }
 nix-b73a96c0a5f6a7d9 = { package = "nix", version = "0.29", features = ["fs", "pthread", "signal", "user"] }
+num = { version = "0.4" }
 objc2 = { version = "0.6" }
 objc2-core-foundation = { version = "0.3", default-features = false, features = ["CFArray", "CFCGTypes", "CFData", "CFDate", "CFDictionary", "CFRunLoop", "CFString", "CFURL", "objc2", "std"] }
 objc2-foundation = { version = "0.3", default-features = false, features = ["NSArray", "NSAttributedString", "NSBundle", "NSCoder", "NSData", "NSDate", "NSDictionary", "NSEnumerator", "NSError", "NSGeometry", "NSNotification", "NSNull", "NSObjCRuntime", "NSObject", "NSProcessInfo", "NSRange", "NSRunLoop", "NSString", "NSURL", "NSUndoManager", "NSValue", "objc2-core-foundation", "std"] }
@@ -431,7 +437,6 @@ nix-1f5adca70f036a62 = { package = "nix", version = "0.28", features = ["fs", "m
 nix-b73a96c0a5f6a7d9 = { package = "nix", version = "0.29", features = ["fs", "pthread", "signal", "user"] }
 nix-fa1f6196edfd7249 = { package = "nix", version = "0.30", features = ["fs", "socket", "uio", "user"] }
 num-bigint-dig = { version = "0.8", features = ["i128", "prime", "zeroize"] }
-num-complex = { version = "0.4", features = ["bytemuck"] }
 object = { version = "0.36", default-features = false, features = ["archive", "read_core", "unaligned", "write"] }
 proc-macro2 = { version = "1", features = ["span-locations"] }
 prost-5ef9efb8ec2df382 = { package = "prost", version = "0.12", features = ["prost-derive"] }
@@ -475,7 +480,6 @@ nix-1f5adca70f036a62 = { package = "nix", version = "0.28", features = ["fs", "m
 nix-b73a96c0a5f6a7d9 = { package = "nix", version = "0.29", features = ["fs", "pthread", "signal", "user"] }
 nix-fa1f6196edfd7249 = { package = "nix", version = "0.30", features = ["fs", "socket", "uio", "user"] }
 num-bigint-dig = { version = "0.8", features = ["i128", "prime", "zeroize"] }
-num-complex = { version = "0.4", features = ["bytemuck"] }
 object = { version = "0.36", default-features = false, features = ["archive", "read_core", "unaligned", "write"] }
 proc-macro2 = { version = "1", default-features = false, features = ["span-locations"] }
 prost-5ef9efb8ec2df382 = { package = "prost", version = "0.12", features = ["prost-derive"] }
@@ -517,7 +521,6 @@ nix-1f5adca70f036a62 = { package = "nix", version = "0.28", features = ["fs", "m
 nix-b73a96c0a5f6a7d9 = { package = "nix", version = "0.29", features = ["fs", "pthread", "signal", "user"] }
 nix-fa1f6196edfd7249 = { package = "nix", version = "0.30", features = ["fs", "socket", "uio", "user"] }
 num-bigint-dig = { version = "0.8", features = ["i128", "prime", "zeroize"] }
-num-complex = { version = "0.4", features = ["bytemuck"] }
 object = { version = "0.36", default-features = false, features = ["archive", "read_core", "unaligned", "write"] }
 proc-macro2 = { version = "1", features = ["span-locations"] }
 prost-5ef9efb8ec2df382 = { package = "prost", version = "0.12", features = ["prost-derive"] }
@@ -561,7 +564,6 @@ nix-1f5adca70f036a62 = { package = "nix", version = "0.28", features = ["fs", "m
 nix-b73a96c0a5f6a7d9 = { package = "nix", version = "0.29", features = ["fs", "pthread", "signal", "user"] }
 nix-fa1f6196edfd7249 = { package = "nix", version = "0.30", features = ["fs", "socket", "uio", "user"] }
 num-bigint-dig = { version = "0.8", features = ["i128", "prime", "zeroize"] }
-num-complex = { version = "0.4", features = ["bytemuck"] }
 object = { version = "0.36", default-features = false, features = ["archive", "read_core", "unaligned", "write"] }
 proc-macro2 = { version = "1", default-features = false, features = ["span-locations"] }
 prost-5ef9efb8ec2df382 = { package = "prost", version = "0.12", features = ["prost-derive"] }
@@ -588,6 +590,7 @@ getrandom-468e82937335b1c9 = { package = "getrandom", version = "0.3", default-f
 getrandom-6f8ce4dd05d13bba = { package = "getrandom", version = "0.2", default-features = false, features = ["js", "rdrand"] }
 hyper-rustls = { version = "0.27", default-features = false, features = ["http1", "http2", "native-tokio", "ring", "tls12"] }
 livekit-runtime = { git = "https://github.com/zed-industries/livekit-rust-sdks", rev = "5f04705ac3f356350ae31534ffbc476abc9ea83d" }
+num = { version = "0.4" }
 prost-5ef9efb8ec2df382 = { package = "prost", version = "0.12", features = ["prost-derive"] }
 ring = { version = "0.17", features = ["std"] }
 rustix-d585fab2519d2d1 = { package = "rustix", version = "0.38", features = ["event", "fs", "net"] }
@@ -600,8 +603,8 @@ tower = { version = "0.5", default-features = false, features = ["timeout", "uti
 winapi = { version = "0.3", default-features = false, features = ["cfg", "commapi", "consoleapi", "evntrace", "fileapi", "handleapi", "impl-debug", "impl-default", "in6addr", "inaddr", "ioapiset", "knownfolders", "minwinbase", "minwindef", "namedpipeapi", "ntsecapi", "objbase", "processenv", "processthreadsapi", "shlobj", "std", "synchapi", "sysinfoapi", "timezoneapi", "winbase", "windef", "winerror", "winioctl", "winnt", "winreg", "winsock2", "winuser"] }
 windows-core = { version = "0.61" }
 windows-numerics = { version = "0.2" }
-windows-sys-73dcd821b1037cfd = { package = "windows-sys", version = "0.59", features = ["Win32_Security_Authentication_Identity", "Win32_Security_Credentials", "Win32_Security_Cryptography", "Win32_Storage_FileSystem", "Win32_System_Com", "Win32_System_Console", "Win32_System_Diagnostics_Debug", "Win32_System_IO", "Win32_System_Kernel", "Win32_System_LibraryLoader", "Win32_System_Memory", "Win32_System_Registry", "Win32_System_SystemInformation", "Win32_System_Threading", "Win32_System_Time", "Win32_System_WindowsProgramming", "Win32_UI_Input_KeyboardAndMouse", "Win32_UI_Shell", "Win32_UI_WindowsAndMessaging"] }
-windows-sys-b21d60becc0929df = { package = "windows-sys", version = "0.52", features = ["Wdk_Foundation", "Wdk_Storage_FileSystem", "Wdk_System_IO", "Win32_Foundation", "Win32_NetworkManagement_IpHelper", "Win32_Networking_WinSock", "Win32_Security_Cryptography", "Win32_Storage_FileSystem", "Win32_System_Console", "Win32_System_Diagnostics_Debug", "Win32_System_IO", "Win32_System_Ioctl", "Win32_System_Kernel", "Win32_System_LibraryLoader", "Win32_System_Memory", "Win32_System_Performance", "Win32_System_Pipes", "Win32_System_SystemInformation", "Win32_System_SystemServices", "Win32_System_Threading", "Win32_System_WindowsProgramming"] }
+windows-sys-73dcd821b1037cfd = { package = "windows-sys", version = "0.59", features = ["Wdk_Foundation", "Wdk_Storage_FileSystem", "Win32_NetworkManagement_IpHelper", "Win32_Networking_WinSock", "Win32_Security_Authentication_Identity", "Win32_Security_Credentials", "Win32_Security_Cryptography", "Win32_Storage_FileSystem", "Win32_System_Com", "Win32_System_Console", "Win32_System_Diagnostics_Debug", "Win32_System_IO", "Win32_System_Ioctl", "Win32_System_Kernel", "Win32_System_LibraryLoader", "Win32_System_Memory", "Win32_System_Performance", "Win32_System_Pipes", "Win32_System_Registry", "Win32_System_SystemInformation", "Win32_System_SystemServices", "Win32_System_Threading", "Win32_System_Time", "Win32_System_WindowsProgramming", "Win32_UI_Input_KeyboardAndMouse", "Win32_UI_Shell", "Win32_UI_WindowsAndMessaging"] }
+windows-sys-b21d60becc0929df = { package = "windows-sys", version = "0.52", features = ["Wdk_Foundation", "Wdk_Storage_FileSystem", "Wdk_System_IO", "Win32_Foundation", "Win32_Networking_WinSock", "Win32_Security", "Win32_Storage_FileSystem", "Win32_System_Console", "Win32_System_IO", "Win32_System_Pipes", "Win32_System_SystemServices", "Win32_System_Threading", "Win32_System_WindowsProgramming"] }
 windows-sys-c8eced492e86ede7 = { package = "windows-sys", version = "0.48", features = ["Win32_Foundation", "Win32_Globalization", "Win32_Networking_WinSock", "Win32_Security", "Win32_Storage_FileSystem", "Win32_System_Com", "Win32_System_Diagnostics_Debug", "Win32_System_IO", "Win32_System_Pipes", "Win32_System_Registry", "Win32_System_Threading", "Win32_System_Time", "Win32_System_WindowsProgramming", "Win32_UI_Shell"] }
 windows-sys-d4189bed749088b6 = { package = "windows-sys", version = "0.61", features = ["Wdk_Foundation", "Wdk_Storage_FileSystem", "Win32_Globalization", "Win32_Networking_WinSock", "Win32_Security", "Win32_Storage_FileSystem", "Win32_System_Com", "Win32_System_IO", "Win32_System_LibraryLoader", "Win32_System_Threading", "Win32_System_WindowsProgramming", "Win32_UI_Shell"] }
 
@@ -614,6 +617,7 @@ getrandom-468e82937335b1c9 = { package = "getrandom", version = "0.3", default-f
 getrandom-6f8ce4dd05d13bba = { package = "getrandom", version = "0.2", default-features = false, features = ["js", "rdrand"] }
 hyper-rustls = { version = "0.27", default-features = false, features = ["http1", "http2", "native-tokio", "ring", "tls12"] }
 livekit-runtime = { git = "https://github.com/zed-industries/livekit-rust-sdks", rev = "5f04705ac3f356350ae31534ffbc476abc9ea83d" }
+num = { version = "0.4" }
 proc-macro2 = { version = "1", default-features = false, features = ["span-locations"] }
 prost-5ef9efb8ec2df382 = { package = "prost", version = "0.12", features = ["prost-derive"] }
 ring = { version = "0.17", features = ["std"] }
@@ -627,8 +631,8 @@ tower = { version = "0.5", default-features = false, features = ["timeout", "uti
 winapi = { version = "0.3", default-features = false, features = ["cfg", "commapi", "consoleapi", "evntrace", "fileapi", "handleapi", "impl-debug", "impl-default", "in6addr", "inaddr", "ioapiset", "knownfolders", "minwinbase", "minwindef", "namedpipeapi", "ntsecapi", "objbase", "processenv", "processthreadsapi", "shlobj", "std", "synchapi", "sysinfoapi", "timezoneapi", "winbase", "windef", "winerror", "winioctl", "winnt", "winreg", "winsock2", "winuser"] }
 windows-core = { version = "0.61" }
 windows-numerics = { version = "0.2" }
-windows-sys-73dcd821b1037cfd = { package = "windows-sys", version = "0.59", features = ["Win32_Security_Authentication_Identity", "Win32_Security_Credentials", "Win32_Security_Cryptography", "Win32_Storage_FileSystem", "Win32_System_Com", "Win32_System_Console", "Win32_System_Diagnostics_Debug", "Win32_System_IO", "Win32_System_Kernel", "Win32_System_LibraryLoader", "Win32_System_Memory", "Win32_System_Registry", "Win32_System_SystemInformation", "Win32_System_Threading", "Win32_System_Time", "Win32_System_WindowsProgramming", "Win32_UI_Input_KeyboardAndMouse", "Win32_UI_Shell", "Win32_UI_WindowsAndMessaging"] }
-windows-sys-b21d60becc0929df = { package = "windows-sys", version = "0.52", features = ["Wdk_Foundation", "Wdk_Storage_FileSystem", "Wdk_System_IO", "Win32_Foundation", "Win32_NetworkManagement_IpHelper", "Win32_Networking_WinSock", "Win32_Security_Cryptography", "Win32_Storage_FileSystem", "Win32_System_Console", "Win32_System_Diagnostics_Debug", "Win32_System_IO", "Win32_System_Ioctl", "Win32_System_Kernel", "Win32_System_LibraryLoader", "Win32_System_Memory", "Win32_System_Performance", "Win32_System_Pipes", "Win32_System_SystemInformation", "Win32_System_SystemServices", "Win32_System_Threading", "Win32_System_WindowsProgramming"] }
+windows-sys-73dcd821b1037cfd = { package = "windows-sys", version = "0.59", features = ["Wdk_Foundation", "Wdk_Storage_FileSystem", "Win32_NetworkManagement_IpHelper", "Win32_Networking_WinSock", "Win32_Security_Authentication_Identity", "Win32_Security_Credentials", "Win32_Security_Cryptography", "Win32_Storage_FileSystem", "Win32_System_Com", "Win32_System_Console", "Win32_System_Diagnostics_Debug", "Win32_System_IO", "Win32_System_Ioctl", "Win32_System_Kernel", "Win32_System_LibraryLoader", "Win32_System_Memory", "Win32_System_Performance", "Win32_System_Pipes", "Win32_System_Registry", "Win32_System_SystemInformation", "Win32_System_SystemServices", "Win32_System_Threading", "Win32_System_Time", "Win32_System_WindowsProgramming", "Win32_UI_Input_KeyboardAndMouse", "Win32_UI_Shell", "Win32_UI_WindowsAndMessaging"] }
+windows-sys-b21d60becc0929df = { package = "windows-sys", version = "0.52", features = ["Wdk_Foundation", "Wdk_Storage_FileSystem", "Wdk_System_IO", "Win32_Foundation", "Win32_Networking_WinSock", "Win32_Security", "Win32_Storage_FileSystem", "Win32_System_Console", "Win32_System_IO", "Win32_System_Pipes", "Win32_System_SystemServices", "Win32_System_Threading", "Win32_System_WindowsProgramming"] }
 windows-sys-c8eced492e86ede7 = { package = "windows-sys", version = "0.48", features = ["Win32_Foundation", "Win32_Globalization", "Win32_Networking_WinSock", "Win32_Security", "Win32_Storage_FileSystem", "Win32_System_Com", "Win32_System_Diagnostics_Debug", "Win32_System_IO", "Win32_System_Pipes", "Win32_System_Registry", "Win32_System_Threading", "Win32_System_Time", "Win32_System_WindowsProgramming", "Win32_UI_Shell"] }
 windows-sys-d4189bed749088b6 = { package = "windows-sys", version = "0.61", features = ["Wdk_Foundation", "Wdk_Storage_FileSystem", "Win32_Globalization", "Win32_Networking_WinSock", "Win32_Security", "Win32_Storage_FileSystem", "Win32_System_Com", "Win32_System_IO", "Win32_System_LibraryLoader", "Win32_System_Threading", "Win32_System_WindowsProgramming", "Win32_UI_Shell"] }
 
@@ -656,7 +660,6 @@ nix-1f5adca70f036a62 = { package = "nix", version = "0.28", features = ["fs", "m
 nix-b73a96c0a5f6a7d9 = { package = "nix", version = "0.29", features = ["fs", "pthread", "signal", "user"] }
 nix-fa1f6196edfd7249 = { package = "nix", version = "0.30", features = ["fs", "socket", "uio", "user"] }
 num-bigint-dig = { version = "0.8", features = ["i128", "prime", "zeroize"] }
-num-complex = { version = "0.4", features = ["bytemuck"] }
 object = { version = "0.36", default-features = false, features = ["archive", "read_core", "unaligned", "write"] }
 proc-macro2 = { version = "1", features = ["span-locations"] }
 prost-5ef9efb8ec2df382 = { package = "prost", version = "0.12", features = ["prost-derive"] }
@@ -700,7 +703,6 @@ nix-1f5adca70f036a62 = { package = "nix", version = "0.28", features = ["fs", "m
 nix-b73a96c0a5f6a7d9 = { package = "nix", version = "0.29", features = ["fs", "pthread", "signal", "user"] }
 nix-fa1f6196edfd7249 = { package = "nix", version = "0.30", features = ["fs", "socket", "uio", "user"] }
 num-bigint-dig = { version = "0.8", features = ["i128", "prime", "zeroize"] }
-num-complex = { version = "0.4", features = ["bytemuck"] }
 object = { version = "0.36", default-features = false, features = ["archive", "read_core", "unaligned", "write"] }
 proc-macro2 = { version = "1", default-features = false, features = ["span-locations"] }
 prost-5ef9efb8ec2df382 = { package = "prost", version = "0.12", features = ["prost-derive"] }
