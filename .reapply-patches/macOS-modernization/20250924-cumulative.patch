diff --git a/Cargo.lock b/Cargo.lock
index 46de7e804b..4bf6350e8f 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -781,24 +781,6 @@ dependencies = [
  "zbus",
 ]
 
-[[package]]
-name = "ashpd"
-version = "0.12.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "da0986d5b4f0802160191ad75f8d33ada000558757db3defb70299ca95d9fcbd"
-dependencies = [
- "async-fs",
- "async-net",
- "enumflags2",
- "futures-channel",
- "futures-util",
- "rand 0.9.1",
- "serde",
- "serde_repr",
- "url",
- "zbus",
-]
-
 [[package]]
 name = "askpass"
 version = "0.1.0"
@@ -1350,6 +1332,22 @@ dependencies = [
  "tungstenite 0.26.2",
 ]
 
+[[package]]
+name = "async-tungstenite"
+version = "0.31.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "ee88b4c88ac8c9ea446ad43498955750a4bbe64c4392f21ccfe5d952865e318f"
+dependencies = [
+ "atomic-waker",
+ "futures-core",
+ "futures-io",
+ "futures-task",
+ "log",
+ "pin-project-lite",
+ "tokio",
+ "tungstenite 0.27.0",
+]
+
 [[package]]
 name = "async_zip"
 version = "0.0.17"
@@ -2324,7 +2322,7 @@ dependencies = [
  "log",
  "mint",
  "naga",
- "objc2",
+ "objc2 0.6.1",
  "objc2-app-kit",
  "objc2-core-foundation",
  "objc2-foundation",
@@ -2382,13 +2380,32 @@ dependencies = [
  "generic-array",
 ]
 
+[[package]]
+name = "block-sys"
+version = "0.2.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "ae85a0696e7ea3b835a453750bf002770776609115e6d25c6d2ff28a8200f7e7"
+dependencies = [
+ "objc-sys",
+]
+
+[[package]]
+name = "block2"
+version = "0.4.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "e58aa60e59d8dbfcc36138f5f18be5f24394d33b38b24f7fd0b1caa33095f22f"
+dependencies = [
+ "block-sys",
+ "objc2 0.5.2",
+]
+
 [[package]]
 name = "block2"
 version = "0.6.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "340d2f0bdb2a43c1d3cd40513185b2bd7def0aa1052f956455114bc98f82dcf2"
 dependencies = [
- "objc2",
+ "objc2 0.6.1",
 ]
 
 [[package]]
@@ -3102,7 +3119,7 @@ name = "client"
 version = "0.1.0"
 dependencies = [
  "anyhow",
- "async-tungstenite",
+ "async-tungstenite 0.29.1",
  "base64 0.22.1",
  "chrono",
  "clock",
@@ -3324,7 +3341,7 @@ dependencies = [
  "assistant_context",
  "assistant_slash_command",
  "async-trait",
- "async-tungstenite",
+ "async-tungstenite 0.29.1",
  "audio",
  "aws-config",
  "aws-sdk-kinesis",
@@ -4937,7 +4954,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "89a09f22a6c6069a18470eb92d2298acf25463f14256d24778e1230d789a2aec"
 dependencies = [
  "bitflags 2.9.0",
- "objc2",
+ "objc2 0.6.1",
 ]
 
 [[package]]
@@ -6204,7 +6221,7 @@ name = "fs"
 version = "0.1.0"
 dependencies = [
  "anyhow",
- "ashpd 0.11.0",
+ "ashpd",
  "async-tar",
  "async-trait",
  "cocoa 0.26.0",
@@ -7035,7 +7052,7 @@ version = "0.1.0"
 dependencies = [
  "anyhow",
  "as-raw-xcb-connection",
- "ashpd 0.11.0",
+ "ashpd",
  "async-task",
  "backtrace",
  "bindgen 0.71.1",
@@ -7067,18 +7084,20 @@ dependencies = [
  "futures 0.3.31",
  "gpui_macros",
  "http_client",
+ "icrate",
  "image",
  "inventory",
  "itertools 0.14.0",
  "libc",
  "log",
  "lyon",
+ "macos_appkit_bridge",
  "media",
  "metal",
  "naga",
  "num_cpus",
  "objc",
- "objc2",
+ "objc2 0.6.1",
  "objc2-metal",
  "oo7",
  "open",
@@ -7749,6 +7768,16 @@ dependencies = [
  "workspace-hack",
 ]
 
+[[package]]
+name = "icrate"
+version = "0.1.2"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "3fb69199826926eb864697bddd27f73d9fddcffc004f5733131e15b465e30642"
+dependencies = [
+ "block2 0.4.0",
+ "objc2 0.5.2",
+]
+
 [[package]]
 name = "icu_collections"
 version = "1.5.0"
@@ -8450,7 +8479,7 @@ source = "git+https://github.com/ConradIrwin/runtimed?rev=7130c804216b6914355d15
 dependencies = [
  "anyhow",
  "async-trait",
- "async-tungstenite",
+ "async-tungstenite 0.29.1",
  "futures 0.3.31",
  "jupyter-protocol",
  "serde",
@@ -9400,6 +9429,10 @@ dependencies = [
  "libc",
 ]
 
+[[package]]
+name = "macos_appkit_bridge"
+version = "0.1.0"
+
 [[package]]
 name = "malloc_buf"
 version = "0.0.6"
@@ -10414,6 +10447,22 @@ dependencies = [
  "objc_id",
 ]
 
+[[package]]
+name = "objc-sys"
+version = "0.3.5"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "cdb91bdd390c7ce1a8607f35f3ca7151b65afc0ff5ff3b34fa350f7d7c7e4310"
+
+[[package]]
+name = "objc2"
+version = "0.5.2"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "46a785d4eeff09c14c487497c162e92766fbb3e4059a71840cecc03d9a50b804"
+dependencies = [
+ "objc-sys",
+ "objc2-encode",
+]
+
 [[package]]
 name = "objc2"
 version = "0.6.1"
@@ -10430,7 +10479,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "e6f29f568bec459b0ddff777cec4fe3fd8666d82d5a40ebd0ff7e66134f89bcc"
 dependencies = [
  "bitflags 2.9.0",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-foundation",
  "objc2-foundation",
  "objc2-quartz-core",
@@ -10444,7 +10493,7 @@ checksum = "10cbe18d879e20a4aea544f8befe38bcf52255eb63d3f23eca2842f3319e4c07"
 dependencies = [
  "bitflags 2.9.0",
  "libc",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-audio",
  "objc2-core-audio-types",
  "objc2-core-foundation",
@@ -10458,7 +10507,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "ca44961e888e19313b808f23497073e3f6b3c22bb485056674c8b49f3b025c82"
 dependencies = [
  "dispatch2",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-audio-types",
  "objc2-core-foundation",
 ]
@@ -10470,7 +10519,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "c0f1cc99bb07ad2ddb6527ddf83db6a15271bb036b3eb94b801cd44fdc666ee1"
 dependencies = [
  "bitflags 2.9.0",
- "objc2",
+ "objc2 0.6.1",
 ]
 
 [[package]]
@@ -10481,7 +10530,7 @@ checksum = "1c10c2894a6fed806ade6027bcd50662746363a9589d3ec9d9bef30a4e4bc166"
 dependencies = [
  "bitflags 2.9.0",
  "dispatch2",
- "objc2",
+ "objc2 0.6.1",
 ]
 
 [[package]]
@@ -10497,7 +10546,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "900831247d2fe1a09a683278e5384cfb8c80c79fe6b166f9d14bfdde0ea1b03c"
 dependencies = [
  "bitflags 2.9.0",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-foundation",
 ]
 
@@ -10508,9 +10557,9 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "7f246c183239540aab1782457b35ab2040d4259175bd1d0c58e46ada7b47a874"
 dependencies = [
  "bitflags 2.9.0",
- "block2",
+ "block2 0.6.1",
  "dispatch2",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-foundation",
  "objc2-foundation",
 ]
@@ -10522,7 +10571,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "90ffb6a0cd5f182dc964334388560b12a57f7b74b3e2dec5e2722aa2dfb2ccd5"
 dependencies = [
  "bitflags 2.9.0",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-foundation",
  "objc2-foundation",
  "objc2-metal",
@@ -10535,7 +10584,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "25b1312ad7bc8a0e92adae17aa10f90aae1fb618832f9b993b022b591027daed"
 dependencies = [
  "bitflags 2.9.0",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-foundation",
  "objc2-foundation",
  "objc2-quartz-core",
@@ -10629,12 +10678,12 @@ checksum = "42f5e15c9953c5e4ccceeb2e7382a716482c34515315f7b03532b8b4e8393d2d"
 
 [[package]]
 name = "oo7"
-version = "0.5.0"
+version = "0.4.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e3299dd401feaf1d45afd8fd1c0586f10fcfb22f244bb9afa942cec73503b89d"
+checksum = "6cb23d3ec3527d65a83be1c1795cb883c52cfa57147d42acc797127df56fc489"
 dependencies = [
  "aes",
- "ashpd 0.12.0",
+ "ashpd",
  "async-fs",
  "async-io",
  "async-lock",
@@ -13093,7 +13142,8 @@ dependencies = [
  "alacritty_terminal",
  "anyhow",
  "async-dispatcher",
- "async-tungstenite",
+ "async-tungstenite 0.29.1",
+ "async-tungstenite 0.31.0",
  "base64 0.22.1",
  "client",
  "collections",
@@ -13442,7 +13492,7 @@ name = "rpc"
 version = "0.1.0"
 dependencies = [
  "anyhow",
- "async-tungstenite",
+ "async-tungstenite 0.29.1",
  "base64 0.22.1",
  "chrono",
  "collections",
@@ -17163,6 +17213,23 @@ dependencies = [
  "utf-8",
 ]
 
+[[package]]
+name = "tungstenite"
+version = "0.27.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "eadc29d668c91fcc564941132e17b28a7ceb2f3ebf0b9dae3e03fd7a6748eb0d"
+dependencies = [
+ "bytes 1.10.1",
+ "data-encoding",
+ "http 1.3.1",
+ "httparse",
+ "log",
+ "rand 0.9.1",
+ "sha1",
+ "thiserror 2.0.12",
+ "utf-8",
+]
+
 [[package]]
 name = "typed-path"
 version = "0.11.0"
@@ -19602,7 +19669,7 @@ dependencies = [
  "arrayvec",
  "async-compression",
  "async-std",
- "async-tungstenite",
+ "async-tungstenite 0.29.1",
  "aws-config",
  "aws-credential-types",
  "aws-runtime",
@@ -19699,7 +19766,7 @@ dependencies = [
  "num-iter",
  "num-rational",
  "num-traits",
- "objc2",
+ "objc2 0.6.1",
  "objc2-core-foundation",
  "objc2-foundation",
  "objc2-metal",
@@ -20156,7 +20223,7 @@ dependencies = [
  "agent_settings",
  "agent_ui",
  "anyhow",
- "ashpd 0.11.0",
+ "ashpd",
  "askpass",
  "assets",
  "assistant_tools",
diff --git a/crates/collab/src/db/ids.rs b/crates/collab/src/db/ids.rs
index 8f116cfd63..6a536b2b2a 100644
--- a/crates/collab/src/db/ids.rs
+++ b/crates/collab/src/db/ids.rs
@@ -62,8 +62,8 @@ macro_rules! id_type {
         }
 
         impl sea_orm::sea_query::Nullable for $name {
-            fn null() -> Value {
-                Value::Int(None)
+            fn null() -> sea_orm::sea_query::Value {
+                sea_orm::sea_query::Value::Int(None)
             }
         }
     };
diff --git a/crates/macos_appkit_bridge/build.rs b/crates/macos_appkit_bridge/build.rs
new file mode 100644
index 0000000000..e9cb6e0d5e
--- /dev/null
+++ b/crates/macos_appkit_bridge/build.rs
@@ -0,0 +1,53 @@
+#[cfg(target_os = "macos")]
+fn main() {
+    // Build Swift package and link static library
+    let _out_dir = std::env::var("OUT_DIR").unwrap();
+    let package_dir = std::env::current_dir().unwrap();
+
+    let swift_dir = package_dir.join("swift");
+    std::fs::create_dir_all(&swift_dir).ok();
+
+    // No codegen needed for C ABI shim
+
+    // Rebuild when the Swift sources change.
+    println!("cargo:rerun-if-changed=swift/Package.swift");
+    println!("cargo:rerun-if-changed=swift/Sources");
+
+    // Select target architecture so cross-compiles (e.g. x86_64 on arm64) link correctly.
+    let target = std::env::var("TARGET").expect("TARGET unset");
+    let arch_flag = match target.as_str() {
+        "aarch64-apple-darwin" => Some("arm64"),
+        "x86_64-apple-darwin" => Some("x86_64"),
+        _ => None,
+    };
+
+    // Build the Swift package containing our shim and the generated bridge.
+    let mut build_cmd = std::process::Command::new("swift");
+    build_cmd.current_dir(&swift_dir).args(["build", "-c", "release"]);
+    if let Some(arch) = arch_flag {
+        build_cmd.args(["--arch", arch]);
+    }
+    let status = build_cmd.status().expect("Failed to spawn swift build");
+    if !status.success() {
+        panic!("swift build failed: {:?}", status);
+    }
+
+    // Link the produced static library; prefer arch-specific directory when present.
+    let arch_lib_dir = arch_flag.map(|arch| {
+        swift_dir
+            .join(".build")
+            .join(format!("{}-apple-macosx", arch))
+            .join("release")
+    });
+    let generic_lib_dir = swift_dir.join(".build").join("release");
+    let lib_dir = arch_lib_dir
+        .as_ref()
+        .filter(|path| path.exists())
+        .unwrap_or(&generic_lib_dir);
+    println!("cargo:rustc-link-search=native={}", lib_dir.display());
+    println!("cargo:rustc-link-lib=static=SwiftPackage");
+    println!("cargo:rustc-link-lib=framework=AppKit");
+}
+
+#[cfg(not(target_os = "macos"))]
+fn main() {}
diff --git a/crates/repl/Cargo.toml b/crates/repl/Cargo.toml
index 6386dc330a..edfebcd112 100644
--- a/crates/repl/Cargo.toml
+++ b/crates/repl/Cargo.toml
@@ -17,6 +17,11 @@ alacritty_terminal.workspace = true
 anyhow.workspace = true
 async-dispatcher.workspace = true
 async-tungstenite = { workspace = true, features = ["tokio", "tokio-rustls-manual-roots"] }
+# Force-enable `tokio` feature on async-tungstenite v0.31 used by
+# transitive dependency `jupyter-websocket-client` to avoid E0432
+# (unresolved import `async_tungstenite::tokio`). The alias ensures
+# feature unification applies to that version across the graph.
+async_tungstenite_031 = { package = "async-tungstenite", version = "0.31.0", default-features = false, features = ["tokio-runtime"] }
 base64.workspace = true
 client.workspace = true
 collections.workspace = true
